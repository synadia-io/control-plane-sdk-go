/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the StreamState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamState{}

// StreamState struct for StreamState
type StreamState struct {
	Bytes         int32                   `json:"bytes"`
	ConsumerCount int32                   `json:"consumer_count"`
	Deleted       []int32                 `json:"deleted,omitempty"`
	FirstSeq      int32                   `json:"first_seq"`
	FirstTs       time.Time               `json:"first_ts"`
	LastSeq       int32                   `json:"last_seq"`
	LastTs        time.Time               `json:"last_ts"`
	Lost          NullableStreamStateLost `json:"lost,omitempty"`
	Messages      int32                   `json:"messages"`
	NumDeleted    *int32                  `json:"num_deleted,omitempty"`
	NumSubjects   *int32                  `json:"num_subjects,omitempty"`
	Subjects      *map[string]int32       `json:"subjects,omitempty"`
}

// NewStreamState instantiates a new StreamState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamState(bytes int32, consumerCount int32, firstSeq int32, firstTs time.Time, lastSeq int32, lastTs time.Time, messages int32) *StreamState {
	this := StreamState{}
	this.Bytes = bytes
	this.ConsumerCount = consumerCount
	this.FirstSeq = firstSeq
	this.FirstTs = firstTs
	this.LastSeq = lastSeq
	this.LastTs = lastTs
	this.Messages = messages
	return &this
}

// NewStreamStateWithDefaults instantiates a new StreamState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamStateWithDefaults() *StreamState {
	this := StreamState{}
	return &this
}

// GetBytes returns the Bytes field value
func (o *StreamState) GetBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bytes
}

// GetBytesOk returns a tuple with the Bytes field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bytes, true
}

// SetBytes sets field value
func (o *StreamState) SetBytes(v int32) {
	o.Bytes = v
}

// GetConsumerCount returns the ConsumerCount field value
func (o *StreamState) GetConsumerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConsumerCount
}

// GetConsumerCountOk returns a tuple with the ConsumerCount field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetConsumerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsumerCount, true
}

// SetConsumerCount sets field value
func (o *StreamState) SetConsumerCount(v int32) {
	o.ConsumerCount = v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *StreamState) GetDeleted() []int32 {
	if o == nil || IsNil(o.Deleted) {
		var ret []int32
		return ret
	}
	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamState) GetDeletedOk() ([]int32, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *StreamState) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given []int32 and assigns it to the Deleted field.
func (o *StreamState) SetDeleted(v []int32) {
	o.Deleted = v
}

// GetFirstSeq returns the FirstSeq field value
func (o *StreamState) GetFirstSeq() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FirstSeq
}

// GetFirstSeqOk returns a tuple with the FirstSeq field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetFirstSeqOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstSeq, true
}

// SetFirstSeq sets field value
func (o *StreamState) SetFirstSeq(v int32) {
	o.FirstSeq = v
}

// GetFirstTs returns the FirstTs field value
func (o *StreamState) GetFirstTs() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FirstTs
}

// GetFirstTsOk returns a tuple with the FirstTs field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetFirstTsOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstTs, true
}

// SetFirstTs sets field value
func (o *StreamState) SetFirstTs(v time.Time) {
	o.FirstTs = v
}

// GetLastSeq returns the LastSeq field value
func (o *StreamState) GetLastSeq() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LastSeq
}

// GetLastSeqOk returns a tuple with the LastSeq field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetLastSeqOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSeq, true
}

// SetLastSeq sets field value
func (o *StreamState) SetLastSeq(v int32) {
	o.LastSeq = v
}

// GetLastTs returns the LastTs field value
func (o *StreamState) GetLastTs() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastTs
}

// GetLastTsOk returns a tuple with the LastTs field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetLastTsOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastTs, true
}

// SetLastTs sets field value
func (o *StreamState) SetLastTs(v time.Time) {
	o.LastTs = v
}

// GetLost returns the Lost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StreamState) GetLost() StreamStateLost {
	if o == nil || IsNil(o.Lost.Get()) {
		var ret StreamStateLost
		return ret
	}
	return *o.Lost.Get()
}

// GetLostOk returns a tuple with the Lost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StreamState) GetLostOk() (*StreamStateLost, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lost.Get(), o.Lost.IsSet()
}

// HasLost returns a boolean if a field has been set.
func (o *StreamState) HasLost() bool {
	if o != nil && o.Lost.IsSet() {
		return true
	}

	return false
}

// SetLost gets a reference to the given NullableStreamStateLost and assigns it to the Lost field.
func (o *StreamState) SetLost(v StreamStateLost) {
	o.Lost.Set(&v)
}

// SetLostNil sets the value for Lost to be an explicit nil
func (o *StreamState) SetLostNil() {
	o.Lost.Set(nil)
}

// UnsetLost ensures that no value is present for Lost, not even an explicit nil
func (o *StreamState) UnsetLost() {
	o.Lost.Unset()
}

// GetMessages returns the Messages field value
func (o *StreamState) GetMessages() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *StreamState) GetMessagesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *StreamState) SetMessages(v int32) {
	o.Messages = v
}

// GetNumDeleted returns the NumDeleted field value if set, zero value otherwise.
func (o *StreamState) GetNumDeleted() int32 {
	if o == nil || IsNil(o.NumDeleted) {
		var ret int32
		return ret
	}
	return *o.NumDeleted
}

// GetNumDeletedOk returns a tuple with the NumDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamState) GetNumDeletedOk() (*int32, bool) {
	if o == nil || IsNil(o.NumDeleted) {
		return nil, false
	}
	return o.NumDeleted, true
}

// HasNumDeleted returns a boolean if a field has been set.
func (o *StreamState) HasNumDeleted() bool {
	if o != nil && !IsNil(o.NumDeleted) {
		return true
	}

	return false
}

// SetNumDeleted gets a reference to the given int32 and assigns it to the NumDeleted field.
func (o *StreamState) SetNumDeleted(v int32) {
	o.NumDeleted = &v
}

// GetNumSubjects returns the NumSubjects field value if set, zero value otherwise.
func (o *StreamState) GetNumSubjects() int32 {
	if o == nil || IsNil(o.NumSubjects) {
		var ret int32
		return ret
	}
	return *o.NumSubjects
}

// GetNumSubjectsOk returns a tuple with the NumSubjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamState) GetNumSubjectsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumSubjects) {
		return nil, false
	}
	return o.NumSubjects, true
}

// HasNumSubjects returns a boolean if a field has been set.
func (o *StreamState) HasNumSubjects() bool {
	if o != nil && !IsNil(o.NumSubjects) {
		return true
	}

	return false
}

// SetNumSubjects gets a reference to the given int32 and assigns it to the NumSubjects field.
func (o *StreamState) SetNumSubjects(v int32) {
	o.NumSubjects = &v
}

// GetSubjects returns the Subjects field value if set, zero value otherwise.
func (o *StreamState) GetSubjects() map[string]int32 {
	if o == nil || IsNil(o.Subjects) {
		var ret map[string]int32
		return ret
	}
	return *o.Subjects
}

// GetSubjectsOk returns a tuple with the Subjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamState) GetSubjectsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.Subjects) {
		return nil, false
	}
	return o.Subjects, true
}

// HasSubjects returns a boolean if a field has been set.
func (o *StreamState) HasSubjects() bool {
	if o != nil && !IsNil(o.Subjects) {
		return true
	}

	return false
}

// SetSubjects gets a reference to the given map[string]int32 and assigns it to the Subjects field.
func (o *StreamState) SetSubjects(v map[string]int32) {
	o.Subjects = &v
}

func (o StreamState) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bytes"] = o.Bytes
	toSerialize["consumer_count"] = o.ConsumerCount
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	toSerialize["first_seq"] = o.FirstSeq
	toSerialize["first_ts"] = o.FirstTs
	toSerialize["last_seq"] = o.LastSeq
	toSerialize["last_ts"] = o.LastTs
	if o.Lost.IsSet() {
		toSerialize["lost"] = o.Lost.Get()
	}
	toSerialize["messages"] = o.Messages
	if !IsNil(o.NumDeleted) {
		toSerialize["num_deleted"] = o.NumDeleted
	}
	if !IsNil(o.NumSubjects) {
		toSerialize["num_subjects"] = o.NumSubjects
	}
	if !IsNil(o.Subjects) {
		toSerialize["subjects"] = o.Subjects
	}
	return toSerialize, nil
}

type NullableStreamState struct {
	value *StreamState
	isSet bool
}

func (v NullableStreamState) Get() *StreamState {
	return v.value
}

func (v *NullableStreamState) Set(val *StreamState) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamState) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamState(val *StreamState) *NullableStreamState {
	return &NullableStreamState{value: val, isSet: true}
}

func (v NullableStreamState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
