/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AlertViewResponseAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertViewResponseAccount{}

// AlertViewResponseAccount struct for AlertViewResponseAccount
type AlertViewResponseAccount struct {
	AccountPublicKey     string `json:"account_public_key"`
	Id                   string `json:"id"`
	IsSystemAccount      bool   `json:"is_system_account"`
	Name                 string `json:"name"`
	UserJwtExpiresInSecs int64  `json:"user_jwt_expires_in_secs"`
}

// NewAlertViewResponseAccount instantiates a new AlertViewResponseAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertViewResponseAccount(accountPublicKey string, id string, isSystemAccount bool, name string, userJwtExpiresInSecs int64) *AlertViewResponseAccount {
	this := AlertViewResponseAccount{}
	this.AccountPublicKey = accountPublicKey
	this.Id = id
	this.IsSystemAccount = isSystemAccount
	this.Name = name
	this.UserJwtExpiresInSecs = userJwtExpiresInSecs
	return &this
}

// NewAlertViewResponseAccountWithDefaults instantiates a new AlertViewResponseAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertViewResponseAccountWithDefaults() *AlertViewResponseAccount {
	this := AlertViewResponseAccount{}
	return &this
}

// GetAccountPublicKey returns the AccountPublicKey field value
func (o *AlertViewResponseAccount) GetAccountPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountPublicKey
}

// GetAccountPublicKeyOk returns a tuple with the AccountPublicKey field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponseAccount) GetAccountPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountPublicKey, true
}

// SetAccountPublicKey sets field value
func (o *AlertViewResponseAccount) SetAccountPublicKey(v string) {
	o.AccountPublicKey = v
}

// GetId returns the Id field value
func (o *AlertViewResponseAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponseAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AlertViewResponseAccount) SetId(v string) {
	o.Id = v
}

// GetIsSystemAccount returns the IsSystemAccount field value
func (o *AlertViewResponseAccount) GetIsSystemAccount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSystemAccount
}

// GetIsSystemAccountOk returns a tuple with the IsSystemAccount field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponseAccount) GetIsSystemAccountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSystemAccount, true
}

// SetIsSystemAccount sets field value
func (o *AlertViewResponseAccount) SetIsSystemAccount(v bool) {
	o.IsSystemAccount = v
}

// GetName returns the Name field value
func (o *AlertViewResponseAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponseAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlertViewResponseAccount) SetName(v string) {
	o.Name = v
}

// GetUserJwtExpiresInSecs returns the UserJwtExpiresInSecs field value
func (o *AlertViewResponseAccount) GetUserJwtExpiresInSecs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UserJwtExpiresInSecs
}

// GetUserJwtExpiresInSecsOk returns a tuple with the UserJwtExpiresInSecs field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponseAccount) GetUserJwtExpiresInSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserJwtExpiresInSecs, true
}

// SetUserJwtExpiresInSecs sets field value
func (o *AlertViewResponseAccount) SetUserJwtExpiresInSecs(v int64) {
	o.UserJwtExpiresInSecs = v
}

func (o AlertViewResponseAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertViewResponseAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_public_key"] = o.AccountPublicKey
	toSerialize["id"] = o.Id
	toSerialize["is_system_account"] = o.IsSystemAccount
	toSerialize["name"] = o.Name
	toSerialize["user_jwt_expires_in_secs"] = o.UserJwtExpiresInSecs
	return toSerialize, nil
}

type NullableAlertViewResponseAccount struct {
	value *AlertViewResponseAccount
	isSet bool
}

func (v NullableAlertViewResponseAccount) Get() *AlertViewResponseAccount {
	return v.value
}

func (v *NullableAlertViewResponseAccount) Set(val *AlertViewResponseAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertViewResponseAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertViewResponseAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertViewResponseAccount(val *AlertViewResponseAccount) *NullableAlertViewResponseAccount {
	return &NullableAlertViewResponseAccount{value: val, isSet: true}
}

func (v NullableAlertViewResponseAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertViewResponseAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
