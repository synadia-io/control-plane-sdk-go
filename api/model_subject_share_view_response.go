/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SubjectShareViewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubjectShareViewResponse{}

// SubjectShareViewResponse struct for SubjectShareViewResponse
type SubjectShareViewResponse struct {
	Created                 time.Time        `json:"created"`
	Id                      string           `json:"id"`
	Jwt                     string           `json:"jwt"`
	JwtClaims               ActivationClaims `json:"jwt_claims"`
	SubjectExportId         string           `json:"subject_export_id"`
	TargetAccountNkeyPublic string           `json:"target_account_nkey_public"`
}

// NewSubjectShareViewResponse instantiates a new SubjectShareViewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubjectShareViewResponse(created time.Time, id string, jwt string, jwtClaims ActivationClaims, subjectExportId string, targetAccountNkeyPublic string) *SubjectShareViewResponse {
	this := SubjectShareViewResponse{}
	this.Created = created
	this.Id = id
	this.Jwt = jwt
	this.JwtClaims = jwtClaims
	this.SubjectExportId = subjectExportId
	this.TargetAccountNkeyPublic = targetAccountNkeyPublic
	return &this
}

// NewSubjectShareViewResponseWithDefaults instantiates a new SubjectShareViewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubjectShareViewResponseWithDefaults() *SubjectShareViewResponse {
	this := SubjectShareViewResponse{}
	return &this
}

// GetCreated returns the Created field value
func (o *SubjectShareViewResponse) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *SubjectShareViewResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *SubjectShareViewResponse) SetCreated(v time.Time) {
	o.Created = v
}

// GetId returns the Id field value
func (o *SubjectShareViewResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SubjectShareViewResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SubjectShareViewResponse) SetId(v string) {
	o.Id = v
}

// GetJwt returns the Jwt field value
func (o *SubjectShareViewResponse) GetJwt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value
// and a boolean to check if the value has been set.
func (o *SubjectShareViewResponse) GetJwtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jwt, true
}

// SetJwt sets field value
func (o *SubjectShareViewResponse) SetJwt(v string) {
	o.Jwt = v
}

// GetJwtClaims returns the JwtClaims field value
func (o *SubjectShareViewResponse) GetJwtClaims() ActivationClaims {
	if o == nil {
		var ret ActivationClaims
		return ret
	}

	return o.JwtClaims
}

// GetJwtClaimsOk returns a tuple with the JwtClaims field value
// and a boolean to check if the value has been set.
func (o *SubjectShareViewResponse) GetJwtClaimsOk() (*ActivationClaims, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JwtClaims, true
}

// SetJwtClaims sets field value
func (o *SubjectShareViewResponse) SetJwtClaims(v ActivationClaims) {
	o.JwtClaims = v
}

// GetSubjectExportId returns the SubjectExportId field value
func (o *SubjectShareViewResponse) GetSubjectExportId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectExportId
}

// GetSubjectExportIdOk returns a tuple with the SubjectExportId field value
// and a boolean to check if the value has been set.
func (o *SubjectShareViewResponse) GetSubjectExportIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectExportId, true
}

// SetSubjectExportId sets field value
func (o *SubjectShareViewResponse) SetSubjectExportId(v string) {
	o.SubjectExportId = v
}

// GetTargetAccountNkeyPublic returns the TargetAccountNkeyPublic field value
func (o *SubjectShareViewResponse) GetTargetAccountNkeyPublic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetAccountNkeyPublic
}

// GetTargetAccountNkeyPublicOk returns a tuple with the TargetAccountNkeyPublic field value
// and a boolean to check if the value has been set.
func (o *SubjectShareViewResponse) GetTargetAccountNkeyPublicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetAccountNkeyPublic, true
}

// SetTargetAccountNkeyPublic sets field value
func (o *SubjectShareViewResponse) SetTargetAccountNkeyPublic(v string) {
	o.TargetAccountNkeyPublic = v
}

func (o SubjectShareViewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubjectShareViewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["id"] = o.Id
	toSerialize["jwt"] = o.Jwt
	toSerialize["jwt_claims"] = o.JwtClaims
	toSerialize["subject_export_id"] = o.SubjectExportId
	toSerialize["target_account_nkey_public"] = o.TargetAccountNkeyPublic
	return toSerialize, nil
}

type NullableSubjectShareViewResponse struct {
	value *SubjectShareViewResponse
	isSet bool
}

func (v NullableSubjectShareViewResponse) Get() *SubjectShareViewResponse {
	return v.value
}

func (v *NullableSubjectShareViewResponse) Set(val *SubjectShareViewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubjectShareViewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubjectShareViewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubjectShareViewResponse(val *SubjectShareViewResponse) *NullableSubjectShareViewResponse {
	return &NullableSubjectShareViewResponse{value: val, isSet: true}
}

func (v NullableSubjectShareViewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubjectShareViewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
