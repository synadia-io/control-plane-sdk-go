/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AccountLimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountLimits{}

// AccountLimits struct for AccountLimits
type AccountLimits struct {
	Conn           *int64 `json:"conn,omitempty"`
	DisallowBearer *bool  `json:"disallow_bearer,omitempty"`
	Exports        *int64 `json:"exports,omitempty"`
	Imports        *int64 `json:"imports,omitempty"`
	Leaf           *int64 `json:"leaf,omitempty"`
	Wildcards      *bool  `json:"wildcards,omitempty"`
}

// NewAccountLimits instantiates a new AccountLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountLimits() *AccountLimits {
	this := AccountLimits{}
	return &this
}

// NewAccountLimitsWithDefaults instantiates a new AccountLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountLimitsWithDefaults() *AccountLimits {
	this := AccountLimits{}
	return &this
}

// GetConn returns the Conn field value if set, zero value otherwise.
func (o *AccountLimits) GetConn() int64 {
	if o == nil || IsNil(o.Conn) {
		var ret int64
		return ret
	}
	return *o.Conn
}

// GetConnOk returns a tuple with the Conn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetConnOk() (*int64, bool) {
	if o == nil || IsNil(o.Conn) {
		return nil, false
	}
	return o.Conn, true
}

// HasConn returns a boolean if a field has been set.
func (o *AccountLimits) HasConn() bool {
	if o != nil && !IsNil(o.Conn) {
		return true
	}

	return false
}

// SetConn gets a reference to the given int64 and assigns it to the Conn field.
func (o *AccountLimits) SetConn(v int64) {
	o.Conn = &v
}

// GetDisallowBearer returns the DisallowBearer field value if set, zero value otherwise.
func (o *AccountLimits) GetDisallowBearer() bool {
	if o == nil || IsNil(o.DisallowBearer) {
		var ret bool
		return ret
	}
	return *o.DisallowBearer
}

// GetDisallowBearerOk returns a tuple with the DisallowBearer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetDisallowBearerOk() (*bool, bool) {
	if o == nil || IsNil(o.DisallowBearer) {
		return nil, false
	}
	return o.DisallowBearer, true
}

// HasDisallowBearer returns a boolean if a field has been set.
func (o *AccountLimits) HasDisallowBearer() bool {
	if o != nil && !IsNil(o.DisallowBearer) {
		return true
	}

	return false
}

// SetDisallowBearer gets a reference to the given bool and assigns it to the DisallowBearer field.
func (o *AccountLimits) SetDisallowBearer(v bool) {
	o.DisallowBearer = &v
}

// GetExports returns the Exports field value if set, zero value otherwise.
func (o *AccountLimits) GetExports() int64 {
	if o == nil || IsNil(o.Exports) {
		var ret int64
		return ret
	}
	return *o.Exports
}

// GetExportsOk returns a tuple with the Exports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetExportsOk() (*int64, bool) {
	if o == nil || IsNil(o.Exports) {
		return nil, false
	}
	return o.Exports, true
}

// HasExports returns a boolean if a field has been set.
func (o *AccountLimits) HasExports() bool {
	if o != nil && !IsNil(o.Exports) {
		return true
	}

	return false
}

// SetExports gets a reference to the given int64 and assigns it to the Exports field.
func (o *AccountLimits) SetExports(v int64) {
	o.Exports = &v
}

// GetImports returns the Imports field value if set, zero value otherwise.
func (o *AccountLimits) GetImports() int64 {
	if o == nil || IsNil(o.Imports) {
		var ret int64
		return ret
	}
	return *o.Imports
}

// GetImportsOk returns a tuple with the Imports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetImportsOk() (*int64, bool) {
	if o == nil || IsNil(o.Imports) {
		return nil, false
	}
	return o.Imports, true
}

// HasImports returns a boolean if a field has been set.
func (o *AccountLimits) HasImports() bool {
	if o != nil && !IsNil(o.Imports) {
		return true
	}

	return false
}

// SetImports gets a reference to the given int64 and assigns it to the Imports field.
func (o *AccountLimits) SetImports(v int64) {
	o.Imports = &v
}

// GetLeaf returns the Leaf field value if set, zero value otherwise.
func (o *AccountLimits) GetLeaf() int64 {
	if o == nil || IsNil(o.Leaf) {
		var ret int64
		return ret
	}
	return *o.Leaf
}

// GetLeafOk returns a tuple with the Leaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetLeafOk() (*int64, bool) {
	if o == nil || IsNil(o.Leaf) {
		return nil, false
	}
	return o.Leaf, true
}

// HasLeaf returns a boolean if a field has been set.
func (o *AccountLimits) HasLeaf() bool {
	if o != nil && !IsNil(o.Leaf) {
		return true
	}

	return false
}

// SetLeaf gets a reference to the given int64 and assigns it to the Leaf field.
func (o *AccountLimits) SetLeaf(v int64) {
	o.Leaf = &v
}

// GetWildcards returns the Wildcards field value if set, zero value otherwise.
func (o *AccountLimits) GetWildcards() bool {
	if o == nil || IsNil(o.Wildcards) {
		var ret bool
		return ret
	}
	return *o.Wildcards
}

// GetWildcardsOk returns a tuple with the Wildcards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountLimits) GetWildcardsOk() (*bool, bool) {
	if o == nil || IsNil(o.Wildcards) {
		return nil, false
	}
	return o.Wildcards, true
}

// HasWildcards returns a boolean if a field has been set.
func (o *AccountLimits) HasWildcards() bool {
	if o != nil && !IsNil(o.Wildcards) {
		return true
	}

	return false
}

// SetWildcards gets a reference to the given bool and assigns it to the Wildcards field.
func (o *AccountLimits) SetWildcards(v bool) {
	o.Wildcards = &v
}

func (o AccountLimits) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountLimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conn) {
		toSerialize["conn"] = o.Conn
	}
	if !IsNil(o.DisallowBearer) {
		toSerialize["disallow_bearer"] = o.DisallowBearer
	}
	if !IsNil(o.Exports) {
		toSerialize["exports"] = o.Exports
	}
	if !IsNil(o.Imports) {
		toSerialize["imports"] = o.Imports
	}
	if !IsNil(o.Leaf) {
		toSerialize["leaf"] = o.Leaf
	}
	if !IsNil(o.Wildcards) {
		toSerialize["wildcards"] = o.Wildcards
	}
	return toSerialize, nil
}

type NullableAccountLimits struct {
	value *AccountLimits
	isSet bool
}

func (v NullableAccountLimits) Get() *AccountLimits {
	return v.value
}

func (v *NullableAccountLimits) Set(val *AccountLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountLimits(val *AccountLimits) *NullableAccountLimits {
	return &NullableAccountLimits{value: val, isSet: true}
}

func (v NullableAccountLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
