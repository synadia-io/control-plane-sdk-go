/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AppUserAccessTokenUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppUserAccessTokenUpdateRequest{}

// AppUserAccessTokenUpdateRequest struct for AppUserAccessTokenUpdateRequest
type AppUserAccessTokenUpdateRequest struct {
	Expires NullableString `json:"expires,omitempty"`
	Name    *string        `json:"name,omitempty"`
}

// NewAppUserAccessTokenUpdateRequest instantiates a new AppUserAccessTokenUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUserAccessTokenUpdateRequest() *AppUserAccessTokenUpdateRequest {
	this := AppUserAccessTokenUpdateRequest{}
	return &this
}

// NewAppUserAccessTokenUpdateRequestWithDefaults instantiates a new AppUserAccessTokenUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUserAccessTokenUpdateRequestWithDefaults() *AppUserAccessTokenUpdateRequest {
	this := AppUserAccessTokenUpdateRequest{}
	return &this
}

// GetExpires returns the Expires field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppUserAccessTokenUpdateRequest) GetExpires() string {
	if o == nil || IsNil(o.Expires.Get()) {
		var ret string
		return ret
	}
	return *o.Expires.Get()
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppUserAccessTokenUpdateRequest) GetExpiresOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expires.Get(), o.Expires.IsSet()
}

// HasExpires returns a boolean if a field has been set.
func (o *AppUserAccessTokenUpdateRequest) HasExpires() bool {
	if o != nil && o.Expires.IsSet() {
		return true
	}

	return false
}

// SetExpires gets a reference to the given NullableString and assigns it to the Expires field.
func (o *AppUserAccessTokenUpdateRequest) SetExpires(v string) {
	o.Expires.Set(&v)
}

// SetExpiresNil sets the value for Expires to be an explicit nil
func (o *AppUserAccessTokenUpdateRequest) SetExpiresNil() {
	o.Expires.Set(nil)
}

// UnsetExpires ensures that no value is present for Expires, not even an explicit nil
func (o *AppUserAccessTokenUpdateRequest) UnsetExpires() {
	o.Expires.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppUserAccessTokenUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUserAccessTokenUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppUserAccessTokenUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppUserAccessTokenUpdateRequest) SetName(v string) {
	o.Name = &v
}

func (o AppUserAccessTokenUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppUserAccessTokenUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Expires.IsSet() {
		toSerialize["expires"] = o.Expires.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAppUserAccessTokenUpdateRequest struct {
	value *AppUserAccessTokenUpdateRequest
	isSet bool
}

func (v NullableAppUserAccessTokenUpdateRequest) Get() *AppUserAccessTokenUpdateRequest {
	return v.value
}

func (v *NullableAppUserAccessTokenUpdateRequest) Set(val *AppUserAccessTokenUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUserAccessTokenUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUserAccessTokenUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUserAccessTokenUpdateRequest(val *AppUserAccessTokenUpdateRequest) *NullableAppUserAccessTokenUpdateRequest {
	return &NullableAppUserAccessTokenUpdateRequest{value: val, isSet: true}
}

func (v NullableAppUserAccessTokenUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUserAccessTokenUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
