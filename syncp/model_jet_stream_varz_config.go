/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JetStreamVarzConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JetStreamVarzConfig{}

// JetStreamVarzConfig struct for JetStreamVarzConfig
type JetStreamVarzConfig struct {
	CompressOk *bool   `json:"compress_ok,omitempty"`
	Domain     *string `json:"domain,omitempty"`
	MaxMemory  int64   `json:"max_memory"`
	MaxStorage int64   `json:"max_storage"`
	StoreDir   *string `json:"store_dir,omitempty"`
}

// NewJetStreamVarzConfig instantiates a new JetStreamVarzConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJetStreamVarzConfig(maxMemory int64, maxStorage int64) *JetStreamVarzConfig {
	this := JetStreamVarzConfig{}
	this.MaxMemory = maxMemory
	this.MaxStorage = maxStorage
	return &this
}

// NewJetStreamVarzConfigWithDefaults instantiates a new JetStreamVarzConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJetStreamVarzConfigWithDefaults() *JetStreamVarzConfig {
	this := JetStreamVarzConfig{}
	return &this
}

// GetCompressOk returns the CompressOk field value if set, zero value otherwise.
func (o *JetStreamVarzConfig) GetCompressOk() bool {
	if o == nil || IsNil(o.CompressOk) {
		var ret bool
		return ret
	}
	return *o.CompressOk
}

// GetCompressOkOk returns a tuple with the CompressOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JetStreamVarzConfig) GetCompressOkOk() (*bool, bool) {
	if o == nil || IsNil(o.CompressOk) {
		return nil, false
	}
	return o.CompressOk, true
}

// HasCompressOk returns a boolean if a field has been set.
func (o *JetStreamVarzConfig) HasCompressOk() bool {
	if o != nil && !IsNil(o.CompressOk) {
		return true
	}

	return false
}

// SetCompressOk gets a reference to the given bool and assigns it to the CompressOk field.
func (o *JetStreamVarzConfig) SetCompressOk(v bool) {
	o.CompressOk = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *JetStreamVarzConfig) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JetStreamVarzConfig) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *JetStreamVarzConfig) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *JetStreamVarzConfig) SetDomain(v string) {
	o.Domain = &v
}

// GetMaxMemory returns the MaxMemory field value
func (o *JetStreamVarzConfig) GetMaxMemory() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value
// and a boolean to check if the value has been set.
func (o *JetStreamVarzConfig) GetMaxMemoryOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMemory, true
}

// SetMaxMemory sets field value
func (o *JetStreamVarzConfig) SetMaxMemory(v int64) {
	o.MaxMemory = v
}

// GetMaxStorage returns the MaxStorage field value
func (o *JetStreamVarzConfig) GetMaxStorage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value
// and a boolean to check if the value has been set.
func (o *JetStreamVarzConfig) GetMaxStorageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxStorage, true
}

// SetMaxStorage sets field value
func (o *JetStreamVarzConfig) SetMaxStorage(v int64) {
	o.MaxStorage = v
}

// GetStoreDir returns the StoreDir field value if set, zero value otherwise.
func (o *JetStreamVarzConfig) GetStoreDir() string {
	if o == nil || IsNil(o.StoreDir) {
		var ret string
		return ret
	}
	return *o.StoreDir
}

// GetStoreDirOk returns a tuple with the StoreDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JetStreamVarzConfig) GetStoreDirOk() (*string, bool) {
	if o == nil || IsNil(o.StoreDir) {
		return nil, false
	}
	return o.StoreDir, true
}

// HasStoreDir returns a boolean if a field has been set.
func (o *JetStreamVarzConfig) HasStoreDir() bool {
	if o != nil && !IsNil(o.StoreDir) {
		return true
	}

	return false
}

// SetStoreDir gets a reference to the given string and assigns it to the StoreDir field.
func (o *JetStreamVarzConfig) SetStoreDir(v string) {
	o.StoreDir = &v
}

func (o JetStreamVarzConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JetStreamVarzConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompressOk) {
		toSerialize["compress_ok"] = o.CompressOk
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	toSerialize["max_memory"] = o.MaxMemory
	toSerialize["max_storage"] = o.MaxStorage
	if !IsNil(o.StoreDir) {
		toSerialize["store_dir"] = o.StoreDir
	}
	return toSerialize, nil
}

type NullableJetStreamVarzConfig struct {
	value *JetStreamVarzConfig
	isSet bool
}

func (v NullableJetStreamVarzConfig) Get() *JetStreamVarzConfig {
	return v.value
}

func (v *NullableJetStreamVarzConfig) Set(val *JetStreamVarzConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableJetStreamVarzConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableJetStreamVarzConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJetStreamVarzConfig(val *JetStreamVarzConfig) *NullableJetStreamVarzConfig {
	return &NullableJetStreamVarzConfig{value: val, isSet: true}
}

func (v NullableJetStreamVarzConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJetStreamVarzConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
