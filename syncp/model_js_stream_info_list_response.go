/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JSStreamInfoListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JSStreamInfoListResponse{}

// JSStreamInfoListResponse struct for JSStreamInfoListResponse
type JSStreamInfoListResponse struct {
	Items []JSStreamInfoResponse `json:"items"`
}

// NewJSStreamInfoListResponse instantiates a new JSStreamInfoListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJSStreamInfoListResponse(items []JSStreamInfoResponse) *JSStreamInfoListResponse {
	this := JSStreamInfoListResponse{}
	this.Items = items
	return &this
}

// NewJSStreamInfoListResponseWithDefaults instantiates a new JSStreamInfoListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJSStreamInfoListResponseWithDefaults() *JSStreamInfoListResponse {
	this := JSStreamInfoListResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *JSStreamInfoListResponse) GetItems() []JSStreamInfoResponse {
	if o == nil {
		var ret []JSStreamInfoResponse
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *JSStreamInfoListResponse) GetItemsOk() ([]JSStreamInfoResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *JSStreamInfoListResponse) SetItems(v []JSStreamInfoResponse) {
	o.Items = v
}

func (o JSStreamInfoListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JSStreamInfoListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableJSStreamInfoListResponse struct {
	value *JSStreamInfoListResponse
	isSet bool
}

func (v NullableJSStreamInfoListResponse) Get() *JSStreamInfoListResponse {
	return v.value
}

func (v *NullableJSStreamInfoListResponse) Set(val *JSStreamInfoListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJSStreamInfoListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJSStreamInfoListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJSStreamInfoListResponse(val *JSStreamInfoListResponse) *NullableJSStreamInfoListResponse {
	return &NullableJSStreamInfoListResponse{value: val, isSet: true}
}

func (v NullableJSStreamInfoListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJSStreamInfoListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
