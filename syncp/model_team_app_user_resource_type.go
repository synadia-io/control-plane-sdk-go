/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// TeamAppUserResourceType the model 'TeamAppUserResourceType'
type TeamAppUserResourceType string

// List of TeamAppUserResourceType
const (
	TEAMAPPUSERRESOURCETYPE_SYSTEM    TeamAppUserResourceType = "System"
	TEAMAPPUSERRESOURCETYPE_ACCOUNT   TeamAppUserResourceType = "Account"
	TEAMAPPUSERRESOURCETYPE_NATS_USER TeamAppUserResourceType = "NatsUser"
)

// All allowed values of TeamAppUserResourceType enum
var AllowedTeamAppUserResourceTypeEnumValues = []TeamAppUserResourceType{
	"System",
	"Account",
	"NatsUser",
}

func (v *TeamAppUserResourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TeamAppUserResourceType(value)
	for _, existing := range AllowedTeamAppUserResourceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TeamAppUserResourceType", value)
}

// NewTeamAppUserResourceTypeFromValue returns a pointer to a valid TeamAppUserResourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTeamAppUserResourceTypeFromValue(v string) (*TeamAppUserResourceType, error) {
	ev := TeamAppUserResourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TeamAppUserResourceType: valid values are %v", v, AllowedTeamAppUserResourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TeamAppUserResourceType) IsValid() bool {
	for _, existing := range AllowedTeamAppUserResourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TeamAppUserResourceType value
func (v TeamAppUserResourceType) Ptr() *TeamAppUserResourceType {
	return &v
}
