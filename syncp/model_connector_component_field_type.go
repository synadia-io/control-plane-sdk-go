/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// ConnectorComponentFieldType the model 'ConnectorComponentFieldType'
type ConnectorComponentFieldType string

// List of ConnectorComponentFieldType
const (
	CONNECTORCOMPONENTFIELDTYPE_BOOL       ConnectorComponentFieldType = "bool"
	CONNECTORCOMPONENTFIELDTYPE_INT        ConnectorComponentFieldType = "int"
	CONNECTORCOMPONENTFIELDTYPE_OBJECT     ConnectorComponentFieldType = "object"
	CONNECTORCOMPONENTFIELDTYPE_SCANNER    ConnectorComponentFieldType = "scanner"
	CONNECTORCOMPONENTFIELDTYPE_STRING     ConnectorComponentFieldType = "string"
	CONNECTORCOMPONENTFIELDTYPE_EXPRESSION ConnectorComponentFieldType = "expression"
	CONNECTORCOMPONENTFIELDTYPE_CONDITION  ConnectorComponentFieldType = "condition"
)

// All allowed values of ConnectorComponentFieldType enum
var AllowedConnectorComponentFieldTypeEnumValues = []ConnectorComponentFieldType{
	"bool",
	"int",
	"object",
	"scanner",
	"string",
	"expression",
	"condition",
}

func (v *ConnectorComponentFieldType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectorComponentFieldType(value)
	for _, existing := range AllowedConnectorComponentFieldTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectorComponentFieldType", value)
}

// NewConnectorComponentFieldTypeFromValue returns a pointer to a valid ConnectorComponentFieldType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectorComponentFieldTypeFromValue(v string) (*ConnectorComponentFieldType, error) {
	ev := ConnectorComponentFieldType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectorComponentFieldType: valid values are %v", v, AllowedConnectorComponentFieldTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectorComponentFieldType) IsValid() bool {
	for _, existing := range AllowedConnectorComponentFieldTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConnectorComponentFieldType value
func (v ConnectorComponentFieldType) Ptr() *ConnectorComponentFieldType {
	return &v
}
