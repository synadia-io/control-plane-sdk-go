/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
)

// checks if the AgentTokenRotateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentTokenRotateResponse{}

// AgentTokenRotateResponse struct for AgentTokenRotateResponse
type AgentTokenRotateResponse struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

type _AgentTokenRotateResponse AgentTokenRotateResponse

// NewAgentTokenRotateResponse instantiates a new AgentTokenRotateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentTokenRotateResponse(id string, token string) *AgentTokenRotateResponse {
	this := AgentTokenRotateResponse{}
	this.Id = id
	this.Token = token
	return &this
}

// NewAgentTokenRotateResponseWithDefaults instantiates a new AgentTokenRotateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentTokenRotateResponseWithDefaults() *AgentTokenRotateResponse {
	this := AgentTokenRotateResponse{}
	return &this
}

// GetId returns the Id field value
func (o *AgentTokenRotateResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AgentTokenRotateResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AgentTokenRotateResponse) SetId(v string) {
	o.Id = v
}

// GetToken returns the Token field value
func (o *AgentTokenRotateResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AgentTokenRotateResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *AgentTokenRotateResponse) SetToken(v string) {
	o.Token = v
}

func (o AgentTokenRotateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentTokenRotateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

func (o *AgentTokenRotateResponse) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentTokenRotateResponse := _AgentTokenRotateResponse{}

	err = json.Unmarshal(bytes, &varAgentTokenRotateResponse)

	if err != nil {
		return err
	}

	*o = AgentTokenRotateResponse(varAgentTokenRotateResponse)

	return err
}

type NullableAgentTokenRotateResponse struct {
	value *AgentTokenRotateResponse
	isSet bool
}

func (v NullableAgentTokenRotateResponse) Get() *AgentTokenRotateResponse {
	return v.value
}

func (v *NullableAgentTokenRotateResponse) Set(val *AgentTokenRotateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentTokenRotateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentTokenRotateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentTokenRotateResponse(val *AgentTokenRotateResponse) *NullableAgentTokenRotateResponse {
	return &NullableAgentTokenRotateResponse{value: val, isSet: true}
}

func (v NullableAgentTokenRotateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentTokenRotateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
