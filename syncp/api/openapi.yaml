openapi: 3.0.0
info:
  description: API for Synadia Control Plane Server
  title: Synadia Control Plane
  version: beta
servers:
- description: Path to Synadia Control Plane Server Api
  url: "{baseUrl}/api/core/beta"
  variables:
    baseUrl:
      default: ""
tags:
- description: Get resources related to the current user session
  name: Session
- description: Manage NATS systems
  name: Systems
- description: Manage teams
  name: Teams
- description: Manage SCP Agent Access Tokens
  name: Agent Tokens
- description: Manage NATS accounts
  name: Accounts
- description: Manage NATS users
  name: NATS Users
- description: Manage JetStream assets for an Account
  name: JetStream
- description: Manage JetStream streams for an Account
  name: "JetStream: Streams"
- description: Manage JetStream KV Buckets for an Account
  name: "JetStream: KV Buckets"
- description: Manage JetStream Object Buckets for an Account
  name: "JetStream: Object Buckets"
- description: Manage JetStream mirrors for an Account
  name: "JetStream: Mirrors"
- description: Manage JetStream consumers for a Stream
  name: "JetStream: Consumers"
- description: Share Streams and Services between Accounts
  name: Sharing
- description: Manage alerts for NATS Systems and Accounts
  name: Alerts
- description: Manage People with access to Control Plane
  name: App Users
- description: Manage Authorization Policies for Control Plane users
  name: Authorization
- description: Account Signing Key Groups
  name: Signing Key Groups
- description: Search for Control Plane resources
  name: Search
- description: Manage user invitations
  name: Invitations
paths:
  /account-sk-groups/{groupId}:
    delete:
      description: Deletes Account Signing Key Group
      operationId: deleteAccountSkGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Account Signing Key Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
    get:
      description: Get Account Signing Key Group
      operationId: getAccountSkGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Signing Key Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
    patch:
      description: Update Account Signing Key Group
      operationId: updateAccountSkGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyGroupUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account Signing Key Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /account-sk-groups/{groupId}/account-sks:
    get:
      description: List Account Signing Keys In Group
      operationId: listAccountSkGroupKeys
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Signing Keys
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /account-sk-groups/{groupId}/copy:
    post:
      description: "Copies Account SK Group. Copies all users from old SK group to\
        \ the new SK group, genering new NKeys for copied users."
      operationId: copyAccountSKGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyGroupCopyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Copy Account SK Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /account-sk-groups/{groupId}/rotate-sk:
    post:
      description: Rotates The Active Signing Key For Account Signing Key Group
      operationId: rotateAccountSk
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Roate Active Signing Key
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /account-sks/{keyId}:
    delete:
      description: Deletes Account Signing
      operationId: deleteAccountSk
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Account Signing
      tags:
      - sig-key
      x-doc-tags:
      - Signing Key Groups
    get:
      description: Get Account Signing
      operationId: getAccountSk
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Signing
      tags:
      - sig-key
      x-doc-tags:
      - Signing Key Groups
    patch:
      description: Update Account Signing
      operationId: updateAccountSk
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account Signing
      tags:
      - sig-key
      x-doc-tags:
      - Signing Key Groups
  /accounts/{accountId}:
    delete:
      description: Deletes a Account in a system
      operationId: deleteAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable
      summary: Delete Account
      tags:
      - account
      x-doc-tags:
      - Accounts
    get:
      description: Returns a Account by ID
      operationId: getAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account
      tags:
      - account
      x-doc-tags:
      - Accounts
    patch:
      description: Updates a Account in a system
      operationId: updateAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account
      tags:
      - account
      x-doc-tags:
      - Accounts
  /accounts/{accountId}/account-sk-groups:
    get:
      description: List Account Signing Key Groups
      operationId: listAccountSkGroup
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Signing Key Groups
      tags:
      - account
      x-doc-tags:
      - Signing Key Groups
    post:
      description: Creates Account Signing Key Group
      operationId: createAccountSkGroup
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyGroupCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Account Signing Key Group
      tags:
      - account
      x-doc-tags:
      - Signing Key Groups
  /accounts/{accountId}/alert-rules:
    get:
      description: List Account Alert Rules
      operationId: listAlertRules
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Alert Rules
      tags:
      - account
      x-doc-tags:
      - Alerts
    post:
      description: Creates Account Alert Rule
      operationId: createAlertRule
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleAccountCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
  /accounts/{accountId}/alert-rules/{alertRuleId}:
    delete:
      description: Deletes Account alert rule
      operationId: deleteAlertRule
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
    get:
      description: Get Account Alert Rule
      operationId: getAlertRule
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
    patch:
      description: Update Account Alert Rule
      operationId: updateAlertRule
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
  /accounts/{accountId}/alert-rules/{alertRuleId}/run:
    get:
      description: Run Account Alert Rule and return an alert object if the rule condition
        is met
      operationId: runAlertRule
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Run Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
  /accounts/{accountId}/app-users:
    get:
      description: Returns a list of Team App Users associated with the Account
      operationId: listAccountTeamAppUsers
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Team App Users
      tags:
      - account
      x-doc-tags:
      - App Users
  /accounts/{accountId}/app-users/{teamAppUserId}:
    delete:
      description: Unassign a Team App User from an Account
      operationId: unAssignAccountTeamAppUser
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign Team App User from Account
      tags:
      - account
      x-doc-tags:
      - App Users
    post:
      description: Assign a Team App User to an Account. This operation is idempotent;
        if an App User is already assigned to the Account the assignemnt will be updated
        with the new role
      operationId: assignAccountTeamAppUser
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign Team App User to Account
      tags:
      - account
      x-doc-tags:
      - App Users
  /accounts/{accountId}/connections:
    get:
      description: List Account Connections
      operationId: listAccountConnections
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subject
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountConnectionsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Connections
      tags:
      - account
      x-doc-tags:
      - Accounts
  /accounts/{accountId}/info:
    get:
      description: Returns Account info
      operationId: getAccountInfo
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSAcctStats'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Info
      tags:
      - account
      x-doc-tags:
      - Accounts
  /accounts/{accountId}/jetstream:
    get:
      description: List JetStream Assets
      operationId: listJetStreamAssets
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSAssetInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List JetStream Assets
      tags:
      - account
      x-doc-tags:
      - JetStream
  /accounts/{accountId}/jetstream/kv-buckets:
    get:
      description: List KV buckets
      operationId: listKvBuckets
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List KV buckets
      tags:
      - account
      x-doc-tags:
      - "JetStream: KV Buckets"
    post:
      description: Creates KV Bucket
      operationId: createKvBucket
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSKVBucketConfig'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create KV Bucket
      tags:
      - account
      x-doc-tags:
      - "JetStream: KV Buckets"
  /accounts/{accountId}/jetstream/mirrors:
    get:
      description: List Mirrors
      operationId: listMirrors
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Mirrors
      tags:
      - account
      x-doc-tags:
      - "JetStream: Mirrors"
    post:
      description: Creates Mirror
      operationId: createMirror
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSMirrorConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Mirror
      tags:
      - account
      x-doc-tags:
      - "JetStream: Mirrors"
  /accounts/{accountId}/jetstream/object-buckets:
    get:
      description: List Object buckets
      operationId: listObjectBuckets
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Object buckets
      tags:
      - account
      x-doc-tags:
      - "JetStream: Object Buckets"
    post:
      description: Creates Object Bucket
      operationId: createObjectBucket
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSObjectBucketConfig'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Object Bucket
      tags:
      - account
      x-doc-tags:
      - "JetStream: Object Buckets"
  /accounts/{accountId}/jetstream/placement-options:
    get:
      description: Get available options for JetStream placement
      operationId: getJetStreamPlacementOptions
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPlacementOptionsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get JetStream Placement Options
      tags:
      - account
      x-doc-tags:
      - JetStream
  /accounts/{accountId}/jetstream/streams:
    get:
      description: List Streams
      operationId: listStreams
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Streams
      tags:
      - account
      x-doc-tags:
      - "JetStream: Streams"
    post:
      description: Create Stream
      operationId: createStream
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSStreamConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream
      tags:
      - account
      x-doc-tags:
      - "JetStream: Streams"
  /accounts/{accountId}/metrics:
    get:
      description: Returns Account metrics
      operationId: getAccountMetrics
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMetrics'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Metrics
      tags:
      - account
      x-doc-tags:
      - Accounts
  /accounts/{accountId}/nats-users:
    get:
      description: Returns a list of NATS users for the given account
      operationId: listUsers
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List NATS Users
      tags:
      - account
      x-doc-tags:
      - NATS Users
    post:
      description: Creates a NATS user for an account
      operationId: createUser
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create NATS User
      tags:
      - account
      x-doc-tags:
      - NATS Users
  /accounts/{accountId}/stream-exports:
    get:
      description: List Stream Exports
      operationId: listStreamExports
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Stream Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Stream Export
      operationId: createStreamExport
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamExportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream Export
      tags:
      - account
      x-doc-tags:
      - Sharing
  /accounts/{accountId}/stream-imports:
    get:
      description: List Stream Imports
      operationId: listStreamImports
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamImportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Stream Imports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Stream Import
      operationId: createStreamImport
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamImportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream Import
      tags:
      - account
      x-doc-tags:
      - Sharing
  /accounts/{accountId}/stream-imports/shared:
    get:
      description: List stream exports shared with this account
      operationId: listStreamExportsShared
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportSharedListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Shared Stream Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
  /accounts/{accountId}/subject-exports:
    get:
      description: List Subject Exports
      operationId: listSubjectExports
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Subject Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Subject Export
      operationId: createSubjectExport
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectExportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Subject Export
      tags:
      - account
      x-doc-tags:
      - Sharing
  /accounts/{accountId}/subject-imports:
    get:
      description: List Subject Imports
      operationId: listSubjectImports
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Subject Imports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Subject Import
      operationId: createSubjectImport
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectImportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Subject Import
      tags:
      - account
      x-doc-tags:
      - Sharing
  /accounts/{accountId}/subject-imports/shared:
    get:
      description: List subject exports shared with this account
      operationId: listSubjectExportsShared
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportSharedListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Shared Subject Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
  /accounts/{accountId}/unmanage:
    delete:
      description: Unmanage a Account in a system
      operationId: unmanageAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unmanage Account
      tags:
      - account
      x-doc-tags:
      - Accounts
  /agent-tokens/{tokenId}:
    delete:
      description: Delete an agent token
      operationId: deleteAgentToken
      parameters:
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Agent Token
      tags:
      - agent-token
      x-doc-tags:
      - Agent Tokens
  /alerts:
    get:
      description: Returns a list of alerts
      operationId: listAlerts
      parameters:
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Alerts
      tags:
      - session
      x-doc-tags:
      - Alerts
  /alerts/{alertId}:
    get:
      description: Get Alert
      operationId: getAlert
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Alert
      tags:
      - alert
      x-doc-tags:
      - Alerts
  /alerts/{alertId}/acknowledge:
    patch:
      description: Acknowledge Alert
      operationId: acknowledgeAlert
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Acknowledge Alert
      tags:
      - alert
      x-doc-tags:
      - Alerts
  /app-users:
    get:
      description: List App Users
      operationId: listAppUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List App Users
      tags:
      - session
      x-doc-tags:
      - App Users
    post:
      description: Create a User to invite to the Application
      operationId: createAppUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create App User
      tags:
      - session
      x-doc-tags:
      - App Users
  /app-users/{appUserId}:
    delete:
      description: Delete App User
      operationId: deleteAppUser
      parameters:
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete App User
      tags:
      - app-user
      x-doc-tags:
      - App Users
    get:
      description: Get App User
      operationId: getAppUser
      parameters:
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get App User
      tags:
      - app-user
      x-doc-tags:
      - App Users
    patch:
      description: Update App User
      operationId: updateAppUser
      parameters:
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserUpdateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update App User
      tags:
      - app-user
      x-doc-tags:
      - App Users
  /app-users/{appUserId}/roles:
    get:
      description: List an App User's Roles
      operationId: listAppUserRoles
      parameters:
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Roles
      tags:
      - app-user
      x-doc-tags:
      - App Users
  /app-users/{appUserId}/teams/{teamId}:
    post:
      description: Assign an App User to a Team. This operation is idempotent; if
        an App User is already assigned to a Team the assignment will be updated with
        the new role
      operationId: assignTeamAppUser
      parameters:
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign App User to Team
      tags:
      - app-user
      x-doc-tags:
      - App Users
  /authz/check:
    post:
      description: Returns applicable policies for calling session and requested service/resource
      operationId: check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthzViewRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthzViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Check Authz Decisions
      tags:
      - authz
      x-doc-tags:
      - Authorization
  /authz/policies:
    get:
      description: Returns a list of configured app policies
      operationId: listPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Policy List
      tags:
      - authz
      x-doc-tags:
      - Authorization
  /authz/roles:
    get:
      description: Returns a list of configured app roles
      operationId: listRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Authz roles List
      tags:
      - authz
      x-doc-tags:
      - Authorization
  /consumers/pull/{consumerId}:
    delete:
      description: Deletes a JetStream pull consumer
      operationId: deletePullConsumer
      parameters:
      - explode: false
        in: path
        name: consumerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Pull Consumer
      tags:
      - pull-consumer
      x-doc-tags:
      - JetStream
    get:
      description: Returns JetStream pull consumer info
      operationId: getPullConsumerInfo
      parameters:
      - explode: false
        in: path
        name: consumerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Pull Consumer
      tags:
      - pull-consumer
      x-doc-tags:
      - JetStream
    patch:
      description: Updates a JetStream consumer
      operationId: updatePullConsumer
      parameters:
      - explode: false
        in: path
        name: consumerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Pull Consumer
      tags:
      - pull-consumer
      x-doc-tags:
      - JetStream
  /consumers/push/{consumerId}:
    delete:
      description: Delete Push Consumer
      operationId: deletePushConsumer
      parameters:
      - explode: false
        in: path
        name: consumerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Push Consumer
      tags:
      - push-consumer
      x-doc-tags:
      - JetStream
    get:
      description: Returns JetStream push consumer info
      operationId: getPushConsumerInfo
      parameters:
      - explode: false
        in: path
        name: consumerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Push Consumer
      tags:
      - push-consumer
      x-doc-tags:
      - JetStream
    patch:
      description: Update Push Consumer
      operationId: updatePushConsumer
      parameters:
      - explode: false
        in: path
        name: consumerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Push Consumer
      tags:
      - push-consumer
      x-doc-tags:
      - JetStream
  /invitations:
    get:
      description: List of pending invitations
      operationId: listInvitations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List of pending invitations
      tags:
      - session
      x-doc-tags:
      - Invitations
  /invitations/{teamId}:
    post:
      description: Accept or reject team invitation
      operationId: decideInvitation
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationDecisionRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Accept or reject team invitation
      tags:
      - session
      x-doc-tags:
      - Invitations
  /jetstream/kv-bucket/{streamId}:
    delete:
      description: Deletes KV Bucket
      operationId: deleteKvBucket
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - "JetStream: KV Buckets"
    get:
      description: Returns JetStream KV bucket info
      operationId: getKvBucket
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - "JetStream: KV Buckets"
    patch:
      description: Update KV Bucket
      operationId: updateKvBucket
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSKVBucketUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - "JetStream: KV Buckets"
  /jetstream/kv-bucket/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listKvConsumers
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - kv-bucket
      x-doc-tags:
      - "JetStream: KV Buckets"
  /jetstream/kv-bucket/{streamId}/consumers/pull:
    post:
      description: Creates Pull Consumer
      operationId: createKvPullConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - kv-bucket
      x-doc-tags:
      - "JetStream: KV Buckets"
  /jetstream/kv-bucket/{streamId}/consumers/push:
    post:
      description: Creates Push Consumer
      operationId: createKvPushConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push Consumer
      tags:
      - kv-bucket
      x-doc-tags:
      - "JetStream: KV Buckets"
  /jetstream/mirror/{streamId}:
    delete:
      description: Delete Mirror
      operationId: deleteMirror
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Mirror
      tags:
      - mirror
      x-doc-tags:
      - "JetStream: Mirrors"
    get:
      description: Get Mirror
      operationId: getMirror
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Mirror
      tags:
      - mirror
      x-doc-tags:
      - "JetStream: Mirrors"
    patch:
      description: Update Mirror
      operationId: updateMirror
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSMirrorConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Mirror
      tags:
      - mirror
      x-doc-tags:
      - "JetStream: Mirrors"
  /jetstream/mirror/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listMirrorConsumers
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - mirror
      x-doc-tags:
      - "JetStream: Mirrors"
  /jetstream/mirror/{streamId}/consumers/pull:
    post:
      description: Create Pull Consumer
      operationId: createMirrorPullConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - mirror
      x-doc-tags:
      - "JetStream: Mirrors"
  /jetstream/mirror/{streamId}/consumers/push:
    post:
      description: Create Push consumer
      operationId: createMirrorPushConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push consumer
      tags:
      - mirror
      x-doc-tags:
      - "JetStream: Mirrors"
  /jetstream/object-bucket/{streamId}:
    delete:
      description: Deletes Object Bucket
      operationId: deleteObjectBucket
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - "JetStream: Object Buckets"
    get:
      description: Returns JetStream Object bucket info
      operationId: getObjectBucket
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - "JetStream: Object Buckets"
    patch:
      description: Update Object Bucket
      operationId: updateObjectBucket
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSObjectBucketUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - "JetStream: Object Buckets"
  /jetstream/object-bucket/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listObjConsumers
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - object-bucket
      x-doc-tags:
      - "JetStream: Object Buckets"
  /jetstream/object-bucket/{streamId}/consumers/pull:
    post:
      description: Creates Pull Consumer
      operationId: createObjPullConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - object-bucket
      x-doc-tags:
      - "JetStream: Object Buckets"
  /jetstream/object-bucket/{streamId}/consumers/push:
    post:
      description: Creates Push Consumer
      operationId: createObjPushConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push Consumer
      tags:
      - object-bucket
      x-doc-tags:
      - "JetStream: Object Buckets"
  /jetstream/stream/{streamId}:
    delete:
      description: Deletes Stream
      operationId: deleteStream
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream
      tags:
      - stream
      x-doc-tags:
      - "JetStream: Streams"
    get:
      description: Get Stream
      operationId: getStreamInfo
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Stream
      tags:
      - stream
      x-doc-tags:
      - "JetStream: Streams"
    patch:
      description: Updates Stream
      operationId: updateStream
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSStreamConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Stream
      tags:
      - stream
      x-doc-tags:
      - "JetStream: Streams"
  /jetstream/stream/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listConsumers
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - stream
      x-doc-tags:
      - "JetStream: Consumers"
  /jetstream/stream/{streamId}/consumers/pull:
    post:
      description: Creates Pull Consumer
      operationId: createPullConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - stream
      x-doc-tags:
      - "JetStream: Streams"
  /jetstream/stream/{streamId}/consumers/push:
    post:
      description: Create Push Consumer
      operationId: createPushConsumer
      parameters:
      - explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push Consumer
      tags:
      - stream
      x-doc-tags:
      - "JetStream: Streams"
  /nats-user-issuances/{issuanceId}:
    get:
      description: Get a history of all downloads and imports of the given issuance
      operationId: getNatsUserIssuance
      parameters:
      - explode: false
        in: path
        name: issuanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserIssuanceViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get nats user issuance
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}:
    delete:
      description: Deletes a NATS user from an account
      operationId: deleteNatsUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
    get:
      description: Returns a NATS user assigned to the account
      operationId: getNatsUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
    patch:
      description: Updates NATS User in an account
      operationId: updateNatsUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/app-users:
    get:
      description: Returns a list of Team App Users associated with the NATS user
      operationId: listNatsUserTeamAppUsers
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Team App Users
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/app-users/{teamAppUserId}:
    delete:
      description: Unassign a Team App User from a NATS User
      operationId: unAssignNatsUserTeamAppUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign Team App User from NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
    post:
      description: Assign a Team App User to a NATS User. This operation is idempotent;
        if an App User is already assigned to a NATS User the assignment will be updated
        with the new role
      operationId: assignNatsUserTeamAppUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign Team App User to NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/connections:
    get:
      description: List NATs User Connections
      operationId: listNatsUserConnections
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subject
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserConnectionsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List NATs User Connections
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/copy:
    post:
      description: "Copies the user, changing name and account SK group. Generates\
        \ new user NKey"
      operationId: copyNatsUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserCopyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Copy nats user
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/creds:
    post:
      description: Returns a creds file for a NATS user assigned to the account
      operationId: downloadNatsUserCreds
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Creds
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/issuances:
    get:
      description: Lists the history of user credential issuances for the user
      operationId: listNatsUserIssuances
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserIssuancesListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List nats user issuances
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /nats-users/{userId}/rotate:
    post:
      description: Generates new user nkey
      operationId: rotateNatsUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Rotate nats user nkey and seed
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /personal-access-tokens:
    get:
      description: Returns a list of Personal Access Tokens
      operationId: listPersonalAccessTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Personal Access Tokens
      tags:
      - session
      x-doc-tags:
      - Session
    post:
      description: Creates a Personal Access Token
      operationId: createPersonalAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Personal Access Token
      tags:
      - session
      x-doc-tags:
      - Session
  /personal-access-tokens/{tokenId}:
    delete:
      description: Delete Personal Access Token
      operationId: deletePersonalAccessToken
      parameters:
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Personal Access Token
      tags:
      - personal-access-token
      x-doc-tags:
      - Session
    get:
      description: Get Personal Access Token
      operationId: getPersonalAccessToken
      parameters:
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Personal Access Token
      tags:
      - personal-access-token
      x-doc-tags:
      - Session
    patch:
      description: Update Personal Access Token
      operationId: updatePersonalAccessToken
      parameters:
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Personal Access Token
      tags:
      - personal-access-token
      x-doc-tags:
      - Session
  /search/systems/{systemId}/accounts:
    get:
      description: Search for Accounts within a System
      operationId: searchSystemAccounts
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Search System Accounts
      tags:
      - session
      x-doc-tags:
      - Search
  /search/systems/{systemId}/servers:
    get:
      description: Search for NATS Servers within a System
      operationId: searchSystemServers
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsServerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Search System Servers
      tags:
      - session
      x-doc-tags:
      - Search
  /search/teams/{teamId}/app-users:
    get:
      description: Search for App Users in Team
      operationId: searchTeamAppUsers
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamAppUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Search App Users in Team
      tags:
      - session
      x-doc-tags:
      - Search
  /stream-exports/{streamExportId}:
    delete:
      description: Delete Stream Export
      operationId: deleteStreamExport
      parameters:
      - explode: false
        in: path
        name: streamExportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream Export
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
    get:
      description: Returns Stream Export info
      operationId: getStreamExport
      parameters:
      - explode: false
        in: path
        name: streamExportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Stream Export
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
  /stream-exports/{streamExportId}/shares:
    get:
      description: List stream shares for this export
      operationId: listStreamShares
      parameters:
      - explode: false
        in: path
        name: streamExportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamShareListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Stream Shares
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
    post:
      description: Creates Stream Shares
      operationId: createStreamShares
      parameters:
      - explode: false
        in: path
        name: streamExportId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamShareCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamShareViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream Shares
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
  /stream-exports/{streamExportId}/shares/{targetAccountNKeyPublic}:
    delete:
      description: Revokes the share for provided Account NKey
      operationId: deleteStreamShare
      parameters:
      - explode: false
        in: path
        name: streamExportId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetAccountNKeyPublic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream Share
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
  /stream-imports/{streamImportId}:
    delete:
      description: Delete Stream Import
      operationId: deleteStreamImport
      parameters:
      - explode: false
        in: path
        name: streamImportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream Import
      tags:
      - stream-import
      x-doc-tags:
      - Sharing
    get:
      description: Returns Stream Import
      operationId: getStreamImport
      parameters:
      - explode: false
        in: path
        name: streamImportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Stream Import
      tags:
      - stream-import
      x-doc-tags:
      - Sharing
  /subject-exports/{subjectExportId}:
    delete:
      description: Delete Subject Export
      operationId: deleteSubjectExport
      parameters:
      - explode: false
        in: path
        name: subjectExportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Subject Export
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
    get:
      description: Returns Subject Export info
      operationId: getSubjectExport
      parameters:
      - explode: false
        in: path
        name: subjectExportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Subject Export
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
    patch:
      description: Update Subject Export
      operationId: updateSubjectExport
      parameters:
      - explode: false
        in: path
        name: subjectExportId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectExportUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Subject Export
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
  /subject-exports/{subjectExportId}/shares:
    get:
      description: List subject shares for this export
      operationId: listSubjectShares
      parameters:
      - explode: false
        in: path
        name: subjectExportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectShareListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Subject Shares
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
    post:
      description: Creates Subject Shares
      operationId: createSubjectShares
      parameters:
      - explode: false
        in: path
        name: subjectExportId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectShareCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectShareViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Subject Shares
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
  /subject-exports/{subjectExportId}/shares/{targetAccountNKeyPublic}:
    delete:
      description: Revokes the share for account
      operationId: deleteSubjectShare
      parameters:
      - explode: false
        in: path
        name: subjectExportId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetAccountNKeyPublic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Subject Share
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
  /subject-imports/{subjectImportId}:
    delete:
      description: Delete Subject Import
      operationId: deleteSubjectImport
      parameters:
      - explode: false
        in: path
        name: subjectImportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Subject Import
      tags:
      - subject-import
      x-doc-tags:
      - Sharing
    get:
      description: Returns Subject Import
      operationId: getSubjectImport
      parameters:
      - explode: false
        in: path
        name: subjectImportId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Subject Import
      tags:
      - subject-import
      x-doc-tags:
      - Sharing
    patch:
      description: Updates Subject Import
      operationId: updateSubjectImport
      parameters:
      - explode: false
        in: path
        name: subjectImportId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectImportUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Subject Import
      tags:
      - subject-import
      x-doc-tags:
      - Sharing
  /systems/{systemId}:
    delete:
      description: Deletes System
      operationId: deleteSystem
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete System
      tags:
      - system
      x-doc-tags:
      - Systems
    get:
      description: Returns a System by ID
      operationId: getSystem
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get System
      tags:
      - system
      x-doc-tags:
      - Systems
    patch:
      description: Updates a System
      operationId: updateSystem
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update System
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/accounts:
    get:
      description: List Accounts
      operationId: listAccounts
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Accounts
      tags:
      - system
      x-doc-tags:
      - Accounts
    post:
      description: Create Account
      operationId: createAccount
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Account
      tags:
      - system
      x-doc-tags:
      - Accounts
  /systems/{systemId}/accounts-overview-metrics:
    get:
      description: List Accounts overview metrics
      operationId: listAccountsOverviewMetrics
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsOverviewListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Accounts overview metrics
      tags:
      - system
      x-doc-tags:
      - Accounts
  /systems/{systemId}/agent-tokens:
    get:
      description: List Agent Tokens
      operationId: listAgentTokens
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTokenListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Agent Tokens
      tags:
      - system
      x-doc-tags:
      - Accounts
    post:
      description: Rotate token to connect a dataplane agent
      operationId: rotateAgentToken
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentTokenRotateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTokenRotateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Rotate Agent Token
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/agent-tokens/current:
    get:
      description: Get the Current Agent Token
      operationId: getCurrentAgentToken
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTokenCurrentResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Current Agent Token
      tags:
      - system
      x-doc-tags:
      - App Users
  /systems/{systemId}/alert-rules:
    get:
      description: List System Alert Rules
      operationId: listSystemAlertRules
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List System Alert Rules
      tags:
      - system
      x-doc-tags:
      - Alerts
    post:
      description: Create System Alert Rule
      operationId: createSystemAlertRule
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleSystemCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
  /systems/{systemId}/alert-rules/{alertRuleId}:
    delete:
      description: Delete System Alert rule
      operationId: deleteSystemAlertRule
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
    get:
      description: Get System Alert Rule
      operationId: getSystemAlertRule
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
    patch:
      description: Update System Alert Rules
      operationId: updateSystemAlertRule
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update System Alert Rules
      tags:
      - system
      x-doc-tags:
      - Alerts
  /systems/{systemId}/alert-rules/{alertRuleId}/run:
    get:
      description: Run System Alert Rule and return an alert object if the rule condition
        is met
      operationId: runSystemAlertRule
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Run System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
  /systems/{systemId}/app-users:
    get:
      description: Returns a list of Team App Users associated with the System
      operationId: listSystemTeamAppUsers
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List System Team App Users
      tags:
      - system
      x-doc-tags:
      - App Users
  /systems/{systemId}/app-users/{teamAppUserId}:
    delete:
      description: Unassign a Team App User from a System
      operationId: unAssignSystemTeamAppUser
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign Team App User from System
      tags:
      - system
      x-doc-tags:
      - App Users
    post:
      description: Assign a Team App User to a System. This operation is idempotent;
        if an App User is already assigned to the System the assignment will be updated
        with the new role
      operationId: assignSystemTeamAppUser
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign Team App User to System
      tags:
      - system
      x-doc-tags:
      - App Users
  /systems/{systemId}/connections:
    get:
      description: List Connections
      operationId: listConnections
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: account
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subject
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConnectionsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Connections
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/import-account:
    post:
      description: Imports an existing account
      operationId: importAccount
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAccountImportRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Import Account
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/import-user:
    post:
      description: Imports an existing NATS user
      operationId: importUser
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUserImportRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Import User
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/limits:
    get:
      description: Get system total and allocated limits
      operationId: getSystemLimits
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemLimitsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get System Limits
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/logs:
    post:
      description: Download System Logs
      operationId: downloadSystemLogs
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/gzip:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Download Logs
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/nats-clusters:
    get:
      description: List cluster information
      operationId: listClusters
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsClusterListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Clusters
      tags:
      - system
      x-doc-tags:
      - Systems
  /systems/{systemId}/servers:
    get:
      description: List server information
      operationId: listServers
      parameters:
      - explode: false
        in: path
        name: systemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsServerListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Servers
      tags:
      - system
      x-doc-tags:
      - Systems
  /teams:
    get:
      description: Returns a list of Teams
      operationId: listTeams
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Teams
      tags:
      - session
      x-doc-tags:
      - Teams
    post:
      description: Create a Team
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Team
      tags:
      - session
      x-doc-tags:
      - Teams
  /teams/{teamId}:
    delete:
      description: Deletes Team
      operationId: deleteTeam
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Team
      tags:
      - team
      x-doc-tags:
      - Teams
    get:
      description: Returns a Team by ID
      operationId: getTeam
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Team
      tags:
      - team
      x-doc-tags:
      - Teams
    patch:
      description: Updates a Team
      operationId: updateTeam
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Team
      tags:
      - team
      x-doc-tags:
      - Teams
  /teams/{teamId}/accounts:
    get:
      description: Returns a list of Accounts directly associated with the current
        team
      operationId: listTeamAccounts
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Accounts
      tags:
      - team
      x-doc-tags:
      - Teams
  /teams/{teamId}/app-users:
    get:
      description: Returns a list of App Users associated with the Team
      operationId: listTeamAppUsers
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List App Users
      tags:
      - team
      x-doc-tags:
      - App Users
  /teams/{teamId}/app-users/{appUserId}:
    delete:
      description: Unassign an App User from a Team
      operationId: unAssignTeamAppUser
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign App User from Team
      tags:
      - team
      x-doc-tags:
      - App Users
    patch:
      description: Update an App User's assignment on a Team
      operationId: updateTeamAppUser
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appUserId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update App User Team Assignment
      tags:
      - team
      x-doc-tags:
      - App Users
  /teams/{teamId}/app-users/invitations:
    post:
      description: "Invites the specified User to join the Team. This operation is\
        \ idempotent, with the caveat that Roles will not be downgraded; if the User\
        \ is already assigned to the Team or Associated Resources and the requested\
        \ Role is more permissive than the existing Role, the Role will be updated."
      operationId: inviteAppUser
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserInvitationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserInvitationResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Invite App Users
      tags:
      - team
      x-doc-tags:
      - Invitations
  /teams/{teamId}/app-users/leave:
    post:
      description: Leave the specified team
      operationId: leaveTeam
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Leave Team
      tags:
      - team
      x-doc-tags:
      - Session
  /teams/{teamId}/import-system:
    post:
      description: Import a System
      operationId: importSystem
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemImportRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Import a System
      tags:
      - team
      x-doc-tags:
      - Teams
  /teams/{teamId}/nats-users:
    get:
      description: Returns a list of NATS Users directly associated with the current
        team
      operationId: listTeamNatsUsers
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List NATS Users
      tags:
      - team
      x-doc-tags:
      - Teams
  /teams/{teamId}/systems:
    get:
      description: Returns a list of Systems
      operationId: listTeamSystems
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Systems
      tags:
      - team
      x-doc-tags:
      - Systems
    post:
      description: Create a System
      operationId: createSystem
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create System
      tags:
      - team
      x-doc-tags:
      - Systems
  /teams/{teamId}/team-limits:
    get:
      description: Get team limits total and allocated
      operationId: getTeamLimits
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLimitsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Team Limits
      tags:
      - team
      x-doc-tags:
      - Teams
  /terms/accept:
    post:
      description: Accept terms
      operationId: acceptTerms
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptTermsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Accept terms
      tags:
      - session
      x-doc-tags:
      - Session
  /version:
    get:
      description: Returns information about the Synadia Control Plane Version
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Version
      tags:
      - session
      x-doc-tags:
      - Session
components:
  schemas:
    AcceptTermsResponse:
      example:
        ip_address: ip_address
        accepted_at: 2000-01-23T04:56:07.000+00:00
      properties:
        accepted_at:
          format: date-time
          type: string
        ip_address:
          type: string
      required:
      - accepted_at
      - ip_address
      type: object
    Account:
      allOf:
      - $ref: '#/components/schemas/Info'
      - $ref: '#/components/schemas/GenericFields'
      description: Account holds account specific claims data
      example:
        authorization:
          allowed_accounts:
          - allowed_accounts
          - allowed_accounts
          auth_users:
          - auth_users
          - auth_users
          xkey: xkey
        default_permissions:
          sub:
            allow:
            - allow
            - allow
            deny:
            - deny
            - deny
          resp: null
          pub:
            allow:
            - allow
            - allow
            deny:
            - deny
            - deny
        mappings:
          key:
          - cluster: cluster
            subject: subject
            weight: 237
          - cluster: cluster
            subject: subject
            weight: 237
        imports:
        - null
        - null
        revocations:
          key: 3
        exports:
        - null
        - null
        signing_keys:
        - signing_keys
        - signing_keys
        limits:
          tiered_limits:
            key:
              max_ack_pending: 5
              mem_max_stream_bytes: 5
              disk_max_stream_bytes: 6
              disk_storage: 1
              max_bytes_required: true
              streams: 7
              mem_storage: 2
              consumer: 0
      properties:
        authorization:
          $ref: '#/components/schemas/ExternalAuthorization'
        default_permissions:
          $ref: '#/components/schemas/Permissions'
        exports:
          description: Exports is a slice of exports
          items:
            $ref: '#/components/schemas/Exports_inner'
          type: array
        imports:
          description: Imports is a list of import structs
          items:
            $ref: '#/components/schemas/Imports_inner'
          type: array
        limits:
          $ref: '#/components/schemas/OperatorLimits'
        mappings:
          additionalProperties:
            items:
              $ref: '#/components/schemas/WeightedMapping'
            type: array
          type: object
        revocations:
          additionalProperties:
            format: int64
            type: integer
          description: RevocationList is used to store a mapping of public keys to
            unix timestamps
          type: object
        signing_keys:
          description: SigningKeys is a map keyed by a public account key
          items:
            type: string
          type: array
      type: object
    AccountChartType:
      enum:
      - NumLeafNodes
      - NumConnections
      - NumSubscriptions
      - BytesSent
      - BytesReceived
      - NumMessagesSent
      - NumMessagesReceived
      - JetStreamEnabled
      - NumStreams
      - NumStreamConsumers
      - JetStreamMemoryUsed
      - JetStreamStorageUsed
      - JetStreamMemoryReserved
      - JetStreamStorageReserved
      type: string
    AccountClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: AccountClaims defines the body of an account JWT
      example:
        nats:
          authorization:
            allowed_accounts:
            - allowed_accounts
            - allowed_accounts
            auth_users:
            - auth_users
            - auth_users
            xkey: xkey
          default_permissions:
            sub:
              allow:
              - allow
              - allow
              deny:
              - deny
              - deny
            resp: null
            pub:
              allow:
              - allow
              - allow
              deny:
              - deny
              - deny
          mappings:
            key:
            - cluster: cluster
              subject: subject
              weight: 237
            - cluster: cluster
              subject: subject
              weight: 237
          imports:
          - null
          - null
          revocations:
            key: 3
          exports:
          - null
          - null
          signing_keys:
          - signing_keys
          - signing_keys
          limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
      properties:
        nats:
          $ref: '#/components/schemas/Account'
      type: object
    AccountClaimsInfo:
      example:
        js_enabled: true
      properties:
        js_enabled:
          type: boolean
      required:
      - js_enabled
      type: object
    AccountConnectionsListResponse:
      example:
        items:
        - total: 5
          offset: 1
          now: 2000-01-23T04:56:07.000+00:00
          limit: 0
          num_connections: 6
          server_id: server_id
          connections:
          - null
          - null
        - total: 5
          offset: 1
          now: 2000-01-23T04:56:07.000+00:00
          limit: 0
          num_connections: 6
          server_id: server_id
          connections:
          - null
          - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connz'
          type: array
      required:
      - items
      type: object
    AccountCreateRequest:
      example:
        jwt_settings:
          authorization:
            allowed_accounts:
            - allowed_accounts
            - allowed_accounts
            auth_users:
            - auth_users
            - auth_users
            xkey: xkey
          mappings:
            key:
            - cluster: cluster
              subject: subject
              weight: 237
            - cluster: cluster
              subject: subject
              weight: 237
          revocations:
            key: 2
          limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
          tags:
          - tags
          - tags
        name: name
        user_jwt_expires_in_secs: 0
      properties:
        jwt_settings:
          $ref: '#/components/schemas/AccountJWTSettings'
        name:
          type: string
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - name
      type: object
    AccountInfo:
      example:
        account_public_key: account_public_key
        name: name
        user_jwt_expires_in_secs: 0
        id: id
        is_scp_account: true
        is_system_account: true
      properties:
        account_public_key:
          type: string
        id:
          type: string
        is_scp_account:
          type: boolean
        is_system_account:
          type: boolean
        name:
          type: string
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - account_public_key
      - id
      - is_scp_account
      - is_system_account
      - name
      - user_jwt_expires_in_secs
      type: object
    AccountJWTSettings:
      allOf:
      - $ref: '#/components/schemas/Info'
      example:
        authorization:
          allowed_accounts:
          - allowed_accounts
          - allowed_accounts
          auth_users:
          - auth_users
          - auth_users
          xkey: xkey
        mappings:
          key:
          - cluster: cluster
            subject: subject
            weight: 237
          - cluster: cluster
            subject: subject
            weight: 237
        revocations:
          key: 2
        limits:
          tiered_limits:
            key:
              max_ack_pending: 5
              mem_max_stream_bytes: 5
              disk_max_stream_bytes: 6
              disk_storage: 1
              max_bytes_required: true
              streams: 7
              mem_storage: 2
              consumer: 0
        tags:
        - tags
        - tags
      properties:
        authorization:
          $ref: '#/components/schemas/ExternalAuthorization'
        limits:
          $ref: '#/components/schemas/OperatorLimits'
        mappings:
          additionalProperties:
            items:
              $ref: '#/components/schemas/WeightedMapping'
            type: array
          type: object
        revocations:
          additionalProperties:
            format: int64
            type: integer
          description: RevocationList is used to store a mapping of public keys to
            unix timestamps
          type: object
        tags:
          description: |-
            TagList is a unique array of lower case strings
            All tag list methods lower case the strings in the arguments
          items:
            type: string
          nullable: true
          type: array
      type: object
    AccountLimits:
      properties:
        conn:
          format: int64
          type: integer
        disallow_bearer:
          type: boolean
        exports:
          format: int64
          type: integer
        imports:
          format: int64
          type: integer
        leaf:
          format: int64
          type: integer
        wildcards:
          type: boolean
      type: object
    AccountListResponse:
      example:
        items:
        - created: 2000-01-23T04:56:07.000+00:00
          jwt: jwt
          account_public_key: account_public_key
          user_jwt_expires_in_secs: 7
          team:
            name: name
            id: id
          nsc_managed: true
          is_scp_account: true
          is_system_account: true
          claims_info:
            js_enabled: true
          system:
            agent_type: agent_type
            jetstream_enabled: true
            is_tenant: true
            name: name
            server_urls: server_urls
            user_jwt_expires_in_secs: 4
            id: id
            state: null
            jetstream_domain: jetstream_domain
            jetstream_tiers:
            - jetstream_tiers
            - jetstream_tiers
          jwt_settings:
            authorization:
              allowed_accounts:
              - allowed_accounts
              - allowed_accounts
              auth_users:
              - auth_users
              - auth_users
              xkey: xkey
            mappings:
              key:
              - cluster: cluster
                subject: subject
                weight: 237
              - cluster: cluster
                subject: subject
                weight: 237
            revocations:
              key: 2
            limits:
              tiered_limits:
                key:
                  max_ack_pending: 5
                  mem_max_stream_bytes: 5
                  disk_max_stream_bytes: 6
                  disk_storage: 1
                  max_bytes_required: true
                  streams: 7
                  mem_storage: 2
                  consumer: 0
            tags:
            - tags
            - tags
          claims:
            nats:
              authorization:
                allowed_accounts:
                - allowed_accounts
                - allowed_accounts
                auth_users:
                - auth_users
                - auth_users
                xkey: xkey
              default_permissions:
                sub:
                  allow:
                  - allow
                  - allow
                  deny:
                  - deny
                  - deny
                resp: null
                pub:
                  allow:
                  - allow
                  - allow
                  deny:
                  - deny
                  - deny
              mappings:
                key:
                - cluster: cluster
                  subject: subject
                  weight: 237
                - cluster: cluster
                  subject: subject
                  weight: 237
              imports:
              - null
              - null
              revocations:
                key: 3
              exports:
              - null
              - null
              signing_keys:
              - signing_keys
              - signing_keys
              limits:
                tiered_limits:
                  key:
                    max_ack_pending: 5
                    mem_max_stream_bytes: 5
                    disk_max_stream_bytes: 6
                    disk_storage: 1
                    max_bytes_required: true
                    streams: 7
                    mem_storage: 2
                    consumer: 0
          name: name
          id: id
        - created: 2000-01-23T04:56:07.000+00:00
          jwt: jwt
          account_public_key: account_public_key
          user_jwt_expires_in_secs: 7
          team:
            name: name
            id: id
          nsc_managed: true
          is_scp_account: true
          is_system_account: true
          claims_info:
            js_enabled: true
          system:
            agent_type: agent_type
            jetstream_enabled: true
            is_tenant: true
            name: name
            server_urls: server_urls
            user_jwt_expires_in_secs: 4
            id: id
            state: null
            jetstream_domain: jetstream_domain
            jetstream_tiers:
            - jetstream_tiers
            - jetstream_tiers
          jwt_settings:
            authorization:
              allowed_accounts:
              - allowed_accounts
              - allowed_accounts
              auth_users:
              - auth_users
              - auth_users
              xkey: xkey
            mappings:
              key:
              - cluster: cluster
                subject: subject
                weight: 237
              - cluster: cluster
                subject: subject
                weight: 237
            revocations:
              key: 2
            limits:
              tiered_limits:
                key:
                  max_ack_pending: 5
                  mem_max_stream_bytes: 5
                  disk_max_stream_bytes: 6
                  disk_storage: 1
                  max_bytes_required: true
                  streams: 7
                  mem_storage: 2
                  consumer: 0
            tags:
            - tags
            - tags
          claims:
            nats:
              authorization:
                allowed_accounts:
                - allowed_accounts
                - allowed_accounts
                auth_users:
                - auth_users
                - auth_users
                xkey: xkey
              default_permissions:
                sub:
                  allow:
                  - allow
                  - allow
                  deny:
                  - deny
                  - deny
                resp: null
                pub:
                  allow:
                  - allow
                  - allow
                  deny:
                  - deny
                  - deny
              mappings:
                key:
                - cluster: cluster
                  subject: subject
                  weight: 237
                - cluster: cluster
                  subject: subject
                  weight: 237
              imports:
              - null
              - null
              revocations:
                key: 3
              exports:
              - null
              - null
              signing_keys:
              - signing_keys
              - signing_keys
              limits:
                tiered_limits:
                  key:
                    max_ack_pending: 5
                    mem_max_stream_bytes: 5
                    disk_max_stream_bytes: 6
                    disk_storage: 1
                    max_bytes_required: true
                    streams: 7
                    mem_storage: 2
                    consumer: 0
          name: name
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccountViewResponse'
          type: array
      required:
      - items
      type: object
    AccountMetrics:
      example:
        nats_core_account_bytes_sent: 6.027456183070403
        nats_core_account_jetstream_enabled: 5.637376656633329
        nats_core_account_jetstream_memory_used: 7.061401241503109
        nats_core_account_jetstream_storage_used: 3.616076749251911
        nats_core_account_leaf_count: 4.145608029883936
        nats_core_account_jetstream_memory_reserved: 2.3021358869347655
        nats_core_account_bytes_recv: 0.8008281904610115
        nats_core_account_jetstream_storage_reserved: 9.301444243932576
        nats_core_account_msgs_recv: 7.386281948385884
        nats_core_account_conn_count: 1.4658129805029452
        nats_core_account_jetstream_consumer_count: 5.962133916683182
        nats_core_account_jetstream_stream_count: 2.027123023002322
        nats_core_account_sub_count: 1.0246457001441578
        nats_core_account_msgs_sent: 1.2315135367772556
      properties:
        nats_core_account_bytes_recv:
          format: double
          type: number
        nats_core_account_bytes_sent:
          format: double
          type: number
        nats_core_account_conn_count:
          format: double
          type: number
        nats_core_account_jetstream_consumer_count:
          format: double
          type: number
        nats_core_account_jetstream_enabled:
          format: double
          type: number
        nats_core_account_jetstream_memory_reserved:
          format: double
          type: number
        nats_core_account_jetstream_memory_used:
          format: double
          type: number
        nats_core_account_jetstream_storage_reserved:
          format: double
          type: number
        nats_core_account_jetstream_storage_used:
          format: double
          type: number
        nats_core_account_jetstream_stream_count:
          format: double
          type: number
        nats_core_account_leaf_count:
          format: double
          type: number
        nats_core_account_msgs_recv:
          format: double
          type: number
        nats_core_account_msgs_sent:
          format: double
          type: number
        nats_core_account_sub_count:
          format: double
          type: number
      required:
      - nats_core_account_bytes_recv
      - nats_core_account_bytes_sent
      - nats_core_account_conn_count
      - nats_core_account_jetstream_consumer_count
      - nats_core_account_jetstream_enabled
      - nats_core_account_jetstream_memory_reserved
      - nats_core_account_jetstream_memory_used
      - nats_core_account_jetstream_storage_reserved
      - nats_core_account_jetstream_storage_used
      - nats_core_account_jetstream_stream_count
      - nats_core_account_leaf_count
      - nats_core_account_msgs_recv
      - nats_core_account_msgs_sent
      - nats_core_account_sub_count
      type: object
    AccountOverviewResponse:
      example:
        account_public_key: account_public_key
        metrics:
          JetStreamR1StorageUsed: 1.4658129805029452
          BytesReceived: 0.8008281904610115
          NumLeafNodes: 2.3021358869347655
          NumConnections: 5.637376656633329
          NumMessagesSent: 9.301444243932576
          BytesSent: 6.027456183070403
          JetStreamR3StorageUsed: 5.962133916683182
          NumMessagesReceived: 7.061401241503109
      properties:
        account_public_key:
          type: string
        metrics:
          $ref: '#/components/schemas/AccountOverviewResponse_metrics'
      required:
      - account_public_key
      - metrics
      type: object
    AccountSearch:
      example:
        account_public_key: account_public_key
        name: name
        id: id
        is_scp_account: true
        is_system_account: true
      properties:
        account_public_key:
          type: string
        id:
          type: string
        is_scp_account:
          type: boolean
        is_system_account:
          type: boolean
        name:
          type: string
      required:
      - account_public_key
      - id
      - is_scp_account
      - is_system_account
      - name
      type: object
    AccountSearchListResponse:
      example:
        items:
        - account_public_key: account_public_key
          name: name
          id: id
          is_scp_account: true
          is_system_account: true
        - account_public_key: account_public_key
          name: name
          id: id
          is_scp_account: true
          is_system_account: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccountSearch'
          type: array
      required:
      - items
      type: object
    AccountUpdateRequest:
      example:
        jwt_settings:
          authorization:
            allowed_accounts:
            - allowed_accounts
            - allowed_accounts
            auth_users:
            - auth_users
            - auth_users
            xkey: xkey
          mappings:
            key:
            - cluster: cluster
              subject: subject
              weight: 237
            - cluster: cluster
              subject: subject
              weight: 237
          revocations:
            key: 2
          limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
          tags:
          - tags
          - tags
        name: name
        user_jwt_expires_in_secs: 0
      properties:
        jwt_settings:
          $ref: '#/components/schemas/AccountJWTSettings'
        name:
          type: string
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      type: object
    AccountViewResponse:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        jwt: jwt
        account_public_key: account_public_key
        user_jwt_expires_in_secs: 7
        team:
          name: name
          id: id
        nsc_managed: true
        is_scp_account: true
        is_system_account: true
        claims_info:
          js_enabled: true
        system:
          agent_type: agent_type
          jetstream_enabled: true
          is_tenant: true
          name: name
          server_urls: server_urls
          user_jwt_expires_in_secs: 4
          id: id
          state: null
          jetstream_domain: jetstream_domain
          jetstream_tiers:
          - jetstream_tiers
          - jetstream_tiers
        jwt_settings:
          authorization:
            allowed_accounts:
            - allowed_accounts
            - allowed_accounts
            auth_users:
            - auth_users
            - auth_users
            xkey: xkey
          mappings:
            key:
            - cluster: cluster
              subject: subject
              weight: 237
            - cluster: cluster
              subject: subject
              weight: 237
          revocations:
            key: 2
          limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
          tags:
          - tags
          - tags
        claims:
          nats:
            authorization:
              allowed_accounts:
              - allowed_accounts
              - allowed_accounts
              auth_users:
              - auth_users
              - auth_users
              xkey: xkey
            default_permissions:
              sub:
                allow:
                - allow
                - allow
                deny:
                - deny
                - deny
              resp: null
              pub:
                allow:
                - allow
                - allow
                deny:
                - deny
                - deny
            mappings:
              key:
              - cluster: cluster
                subject: subject
                weight: 237
              - cluster: cluster
                subject: subject
                weight: 237
            imports:
            - null
            - null
            revocations:
              key: 3
            exports:
            - null
            - null
            signing_keys:
            - signing_keys
            - signing_keys
            limits:
              tiered_limits:
                key:
                  max_ack_pending: 5
                  mem_max_stream_bytes: 5
                  disk_max_stream_bytes: 6
                  disk_storage: 1
                  max_bytes_required: true
                  streams: 7
                  mem_storage: 2
                  consumer: 0
        name: name
        id: id
      properties:
        account_public_key:
          type: string
        claims:
          $ref: '#/components/schemas/AccountClaims'
        claims_info:
          $ref: '#/components/schemas/AccountClaimsInfo'
        created:
          format: date-time
          type: string
        id:
          type: string
        is_scp_account:
          type: boolean
        is_system_account:
          type: boolean
        jwt:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/AccountJWTSettings'
        name:
          type: string
        nsc_managed:
          type: boolean
        system:
          $ref: '#/components/schemas/SystemInfo'
        team:
          $ref: '#/components/schemas/TeamInfo'
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - account_public_key
      - claims
      - claims_info
      - created
      - id
      - is_scp_account
      - is_system_account
      - jwt
      - jwt_settings
      - name
      - nsc_managed
      - system
      - team
      - user_jwt_expires_in_secs
      type: object
    AccountsOverviewListResponse:
      example:
        items:
        - account_public_key: account_public_key
          metrics:
            JetStreamR1StorageUsed: 1.4658129805029452
            BytesReceived: 0.8008281904610115
            NumLeafNodes: 2.3021358869347655
            NumConnections: 5.637376656633329
            NumMessagesSent: 9.301444243932576
            BytesSent: 6.027456183070403
            JetStreamR3StorageUsed: 5.962133916683182
            NumMessagesReceived: 7.061401241503109
        - account_public_key: account_public_key
          metrics:
            JetStreamR1StorageUsed: 1.4658129805029452
            BytesReceived: 0.8008281904610115
            NumLeafNodes: 2.3021358869347655
            NumConnections: 5.637376656633329
            NumMessagesSent: 9.301444243932576
            BytesSent: 6.027456183070403
            JetStreamR3StorageUsed: 5.962133916683182
            NumMessagesReceived: 7.061401241503109
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccountOverviewResponse'
          type: array
      required:
      - items
      type: object
    AckPolicy:
      description: enums have been changed to match UnmarshalJSON in https://github.com/nats-io/jsm.go/blob/main/api/consumers.go
      enum:
      - none
      - all
      - explicit
      type: string
    Activation:
      allOf:
      - $ref: '#/components/schemas/GenericFields'
      description: Activation defines the custom parts of an activation claim
      example:
        kind: null
        subject: subject
        issuer_account: issuer_account
      properties:
        issuer_account:
          description: |-
            IssuerAccount stores the public key for the account the issuer represents.
            When set, the claim was issued by a signing key.
          type: string
        kind:
          $ref: '#/components/schemas/ExportType'
        subject:
          description: Subject is a string that represents a NATS subject
          type: string
      type: object
    ActivationClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: ActivationClaims holds the data specific to an activation JWT
      example:
        nats:
          kind: null
          subject: subject
          issuer_account: issuer_account
      properties:
        nats:
          $ref: '#/components/schemas/Activation'
      type: object
    AgentTokenCurrentResponse:
      allOf:
      - $ref: '#/components/schemas/AgentTokenViewResponse'
      - required:
        - token
        - url
      example:
        url: url
        token: token
      properties:
        token:
          type: string
        url:
          type: string
      type: object
    AgentTokenListResponse:
      example:
        items:
        - nkey_public: nkey_public
          created: 2000-01-23T04:56:07.000+00:00
          id: id
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          is_current: true
          rotated_at: 2000-01-23T04:56:07.000+00:00
        - nkey_public: nkey_public
          created: 2000-01-23T04:56:07.000+00:00
          id: id
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          is_current: true
          rotated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            $ref: '#/components/schemas/AgentTokenViewResponse'
          type: array
      required:
      - items
      type: object
    AgentTokenRotateRequest:
      type: object
    AgentTokenRotateResponse:
      example:
        id: id
        token: token
      properties:
        id:
          type: string
        token:
          type: string
      required:
      - id
      - token
      type: object
    AgentTokenViewResponse:
      example:
        nkey_public: nkey_public
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        last_accessed_at: 2000-01-23T04:56:07.000+00:00
        is_current: true
        rotated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        is_current:
          type: boolean
        last_accessed_at:
          format: date-time
          type: string
        nkey_public:
          type: string
        rotated_at:
          format: date-time
          type: string
      required:
      - created
      - id
      - is_current
      - nkey_public
      type: object
    AlertListResponse:
      example:
        items:
        - severity: null
          closed_at: closed_at
          created: 2000-01-23T04:56:07.000+00:00
          system_id: system_id
          metric_value: 0.8008281904610115
          message: message
          alert_rule:
            severity: null
            created: 2000-01-23T04:56:07.000+00:00
            system_id: system_id
            duration_in_secs: 0
            message: message
            threshold_expression: threshold_expression
            threshold_fixed_value: 6.027456183070403
            is_enabled: true
            account_id: account_id
            consumer_name: consumer_name
            rule_type: null
            stream_name: stream_name
            metric: metric
            threshold_operator: threshold_operator
            parent_rule_id: parent_rule_id
            id: id
          sample_values:
          - value: 1.4658129805029452
            timestamp: 6
          - value: 1.4658129805029452
            timestamp: 6
          is_acknowledged: true
          account_id: account_id
          consumer_name: consumer_name
          system: null
          stream_name: stream_name
          threshold_value: 5.962133916683182
          AcknowledgedByAppUserID: AcknowledgedByAppUserID
          id: id
          is_firing: true
          alert_rule_id: alert_rule_id
          account: null
          acknowledged_at: acknowledged_at
          is_closed: true
        - severity: null
          closed_at: closed_at
          created: 2000-01-23T04:56:07.000+00:00
          system_id: system_id
          metric_value: 0.8008281904610115
          message: message
          alert_rule:
            severity: null
            created: 2000-01-23T04:56:07.000+00:00
            system_id: system_id
            duration_in_secs: 0
            message: message
            threshold_expression: threshold_expression
            threshold_fixed_value: 6.027456183070403
            is_enabled: true
            account_id: account_id
            consumer_name: consumer_name
            rule_type: null
            stream_name: stream_name
            metric: metric
            threshold_operator: threshold_operator
            parent_rule_id: parent_rule_id
            id: id
          sample_values:
          - value: 1.4658129805029452
            timestamp: 6
          - value: 1.4658129805029452
            timestamp: 6
          is_acknowledged: true
          account_id: account_id
          consumer_name: consumer_name
          system: null
          stream_name: stream_name
          threshold_value: 5.962133916683182
          AcknowledgedByAppUserID: AcknowledgedByAppUserID
          id: id
          is_firing: true
          alert_rule_id: alert_rule_id
          account: null
          acknowledged_at: acknowledged_at
          is_closed: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/AlertViewResponse'
          type: array
      required:
      - items
      type: object
    AlertRuleAccountCreateRequest:
      allOf:
      - $ref: '#/components/schemas/AlertRuleBaseCreateRequest'
      - required:
        - rule_type
      example:
        consumer_name: consumer_name
        rule_type: Account
        stream_name: stream_name
      properties:
        consumer_name:
          nullable: true
          type: string
        rule_type:
          enum:
          - Account
          - Stream
          - Consumer
          type: string
        stream_name:
          nullable: true
          type: string
      type: object
    AlertRuleBaseCreateRequest:
      example:
        severity: null
        metric: metric
        threshold_operator: null
        duration_in_secs: 0
        message: message
        threshold_expression: threshold_expression
        threshold_fixed_value: 6.027456183070403
      properties:
        duration_in_secs:
          type: integer
        message:
          type: string
        metric:
          type: string
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        threshold_expression:
          nullable: true
          type: string
        threshold_fixed_value:
          nullable: true
          type: number
        threshold_operator:
          $ref: '#/components/schemas/AlertRuleOperator'
      required:
      - duration_in_secs
      - message
      - metric
      - severity
      - threshold_operator
      type: object
    AlertRuleListResponse:
      example:
        items:
        - severity: null
          created: 2000-01-23T04:56:07.000+00:00
          system_id: system_id
          duration_in_secs: 0
          message: message
          threshold_expression: threshold_expression
          threshold_fixed_value: 6.027456183070403
          is_enabled: true
          account_id: account_id
          consumer_name: consumer_name
          rule_type: null
          stream_name: stream_name
          metric: metric
          threshold_operator: threshold_operator
          parent_rule_id: parent_rule_id
          id: id
        - severity: null
          created: 2000-01-23T04:56:07.000+00:00
          system_id: system_id
          duration_in_secs: 0
          message: message
          threshold_expression: threshold_expression
          threshold_fixed_value: 6.027456183070403
          is_enabled: true
          account_id: account_id
          consumer_name: consumer_name
          rule_type: null
          stream_name: stream_name
          metric: metric
          threshold_operator: threshold_operator
          parent_rule_id: parent_rule_id
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/AlertRuleViewResponse'
          type: array
      required:
      - items
      type: object
    AlertRuleOperator:
      enum:
      - Greater Than
      - Less Than
      - Greater Than Or Equal
      - Less Than Or Equal
      - Equal
      - Not Equal
      type: string
    AlertRuleSeverity:
      enum:
      - Info
      - Warn
      - Error
      - Critical
      type: string
    AlertRuleSystemCreateRequest:
      $ref: '#/components/schemas/AlertRuleBaseCreateRequest'
    AlertRuleType:
      enum:
      - SystemDefault
      - System
      - AccountDefault
      - Account
      - Stream
      - Consumer
      type: string
    AlertRuleUpdateRequest:
      example:
        is_enabled: true
        severity: null
        metric: metric
        threshold_operator: null
        duration_in_secs: 0
        message: message
        threshold_expression: threshold_expression
        threshold_fixed_value: 6.027456183070403
      properties:
        duration_in_secs:
          type: integer
        is_enabled:
          type: boolean
        message:
          type: string
        metric:
          type: string
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        threshold_expression:
          nullable: true
          type: string
        threshold_fixed_value:
          nullable: true
          type: number
        threshold_operator:
          $ref: '#/components/schemas/AlertRuleOperator'
      required:
      - duration_in_secs
      - is_enabled
      - message
      - metric
      - severity
      - threshold_operator
      type: object
    AlertRuleViewResponse:
      example:
        severity: null
        created: 2000-01-23T04:56:07.000+00:00
        system_id: system_id
        duration_in_secs: 0
        message: message
        threshold_expression: threshold_expression
        threshold_fixed_value: 6.027456183070403
        is_enabled: true
        account_id: account_id
        consumer_name: consumer_name
        rule_type: null
        stream_name: stream_name
        metric: metric
        threshold_operator: threshold_operator
        parent_rule_id: parent_rule_id
        id: id
      properties:
        account_id:
          nullable: true
          type: string
        consumer_name:
          nullable: true
          type: string
        created:
          format: date-time
          type: string
        duration_in_secs:
          type: integer
        id:
          type: string
        is_enabled:
          type: boolean
        message:
          type: string
        metric:
          type: string
        parent_rule_id:
          nullable: true
          type: string
        rule_type:
          $ref: '#/components/schemas/AlertRuleType'
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        stream_name:
          nullable: true
          type: string
        system_id:
          nullable: true
          type: string
        threshold_expression:
          nullable: true
          type: string
        threshold_fixed_value:
          nullable: true
          type: number
        threshold_operator:
          type: string
      required:
      - created
      - duration_in_secs
      - id
      - is_enabled
      - message
      - metric
      - rule_type
      - severity
      - threshold_operator
      type: object
    AlertStatus:
      enum:
      - New
      - Open
      - Closed
      type: string
    AlertViewResponse:
      example:
        severity: null
        closed_at: closed_at
        created: 2000-01-23T04:56:07.000+00:00
        system_id: system_id
        metric_value: 0.8008281904610115
        message: message
        alert_rule:
          severity: null
          created: 2000-01-23T04:56:07.000+00:00
          system_id: system_id
          duration_in_secs: 0
          message: message
          threshold_expression: threshold_expression
          threshold_fixed_value: 6.027456183070403
          is_enabled: true
          account_id: account_id
          consumer_name: consumer_name
          rule_type: null
          stream_name: stream_name
          metric: metric
          threshold_operator: threshold_operator
          parent_rule_id: parent_rule_id
          id: id
        sample_values:
        - value: 1.4658129805029452
          timestamp: 6
        - value: 1.4658129805029452
          timestamp: 6
        is_acknowledged: true
        account_id: account_id
        consumer_name: consumer_name
        system: null
        stream_name: stream_name
        threshold_value: 5.962133916683182
        AcknowledgedByAppUserID: AcknowledgedByAppUserID
        id: id
        is_firing: true
        alert_rule_id: alert_rule_id
        account: null
        acknowledged_at: acknowledged_at
        is_closed: true
      properties:
        AcknowledgedByAppUserID:
          nullable: true
          type: string
        account:
          $ref: '#/components/schemas/AlertViewResponse_account'
        account_id:
          nullable: true
          type: string
        acknowledged_at:
          nullable: true
          type: string
        alert_rule:
          $ref: '#/components/schemas/AlertRuleViewResponse'
        alert_rule_id:
          type: string
        closed_at:
          nullable: true
          type: string
        consumer_name:
          nullable: true
          type: string
        created:
          format: date-time
          type: string
        id:
          type: string
        is_acknowledged:
          type: boolean
        is_closed:
          type: boolean
        is_firing:
          type: boolean
        message:
          type: string
        metric_value:
          format: double
          type: number
        sample_values:
          items:
            $ref: '#/components/schemas/PromSampleValue'
          type: array
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        stream_name:
          nullable: true
          type: string
        system:
          $ref: '#/components/schemas/AlertViewResponse_system'
        system_id:
          nullable: true
          type: string
        threshold_value:
          format: double
          type: number
      required:
      - alert_rule
      - alert_rule_id
      - created
      - id
      - is_acknowledged
      - is_closed
      - is_firing
      - message
      - metric_value
      - sample_values
      - severity
      - threshold_value
      type: object
    ApexCoordinate:
      properties:
        x:
          format: double
          type: number
        "y":
          format: double
          type: number
      required:
      - x
      - "y"
      type: object
    ApexSeries:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApexCoordinate'
          type: array
        name:
          type: string
      required:
      - data
      - name
      type: object
    AppPolicy:
      example:
        name: name
        description: description
        statements:
          key:
            resource:
            - resource
            - resource
            service: service
            effect:
            - null
            - null
            name: name
            action:
            - action
            - action
            operation_id: operation_id
      properties:
        description:
          type: string
        name:
          type: string
        statements:
          additionalProperties:
            $ref: '#/components/schemas/AppPolicyStatement'
          type: object
      required:
      - name
      - statements
      type: object
    AppPolicyStatement:
      example:
        resource:
        - resource
        - resource
        service: service
        effect:
        - null
        - null
        name: name
        action:
        - action
        - action
        operation_id: operation_id
      properties:
        action:
          items:
            type: string
          type: array
        effect:
          items:
            $ref: '#/components/schemas/AppRoleEffect'
          type: array
        name:
          type: string
        operation_id:
          type: string
        resource:
          items:
            type: string
          type: array
        service:
          type: string
      required:
      - action
      - effect
      - name
      - resource
      type: object
    AppRole:
      example:
        scope: null
        name: name
        policies:
        - policies
        - policies
        description: description
        id: id
        sort_order: 0.8008281904610115
        enabled: true
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: string
        name:
          type: string
        policies:
          items:
            type: string
          type: array
        scope:
          $ref: '#/components/schemas/AppRoleScope'
        sort_order:
          type: number
      required:
      - description
      - enabled
      - id
      - name
      - policies
      - scope
      - sort_order
      type: object
    AppRoleEffect:
      enum:
      - ALLOW
      - DENY
      type: string
    AppRoleScope:
      enum:
      - App
      - Team
      - System
      - Account
      - NatsUser
      type: string
    AppUserAccessTokenCreateRequest:
      example:
        expires: expires
        name: name
      properties:
        expires:
          nullable: true
          type: string
        name:
          type: string
      required:
      - expires
      - name
      type: object
    AppUserAccessTokenCreateResponse:
      example:
        expires: expires
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        token: token
      properties:
        created:
          format: date-time
          type: string
        expires:
          nullable: true
          type: string
        id:
          type: string
        name:
          type: string
        token:
          type: string
      required:
      - created
      - expires
      - id
      - name
      - token
      type: object
    AppUserAccessTokenListResponse:
      example:
        items:
        - expires: expires
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
        - expires: expires
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          type: array
      required:
      - items
      type: object
    AppUserAccessTokenUpdateRequest:
      example:
        expires: expires
        name: name
      properties:
        expires:
          nullable: true
          type: string
        name:
          type: string
      type: object
    AppUserAccessTokenViewResponse:
      example:
        expires: expires
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        created:
          format: date-time
          type: string
        expires:
          nullable: true
          type: string
        id:
          type: string
        name:
          type: string
      required:
      - created
      - expires
      - id
      - name
      type: object
    AppUserAssignListResponse:
      example:
        items:
        - role_name: role_name
          nats_user:
            user_public_key: user_public_key
            name: name
            id: id
          system:
            agent_type: agent_type
            jetstream_enabled: true
            is_tenant: true
            name: name
            server_urls: server_urls
            user_jwt_expires_in_secs: 4
            id: id
            state: null
            jetstream_domain: jetstream_domain
            jetstream_tiers:
            - jetstream_tiers
            - jetstream_tiers
          app_user:
            identifier: identifier
            name: name
            id: id
          role_id: role_id
          created: 2000-01-23T04:56:07.000+00:00
          scope: null
          team_app_user:
            role_name: role_name
            role_id: role_id
            pending_invitation: true
            id: id
          resource_id: resource_id
          team:
            name: name
            id: id
          account:
            account_public_key: account_public_key
            name: name
            user_jwt_expires_in_secs: 0
            id: id
            is_scp_account: true
            is_system_account: true
        - role_name: role_name
          nats_user:
            user_public_key: user_public_key
            name: name
            id: id
          system:
            agent_type: agent_type
            jetstream_enabled: true
            is_tenant: true
            name: name
            server_urls: server_urls
            user_jwt_expires_in_secs: 4
            id: id
            state: null
            jetstream_domain: jetstream_domain
            jetstream_tiers:
            - jetstream_tiers
            - jetstream_tiers
          app_user:
            identifier: identifier
            name: name
            id: id
          role_id: role_id
          created: 2000-01-23T04:56:07.000+00:00
          scope: null
          team_app_user:
            role_name: role_name
            role_id: role_id
            pending_invitation: true
            id: id
          resource_id: resource_id
          team:
            name: name
            id: id
          account:
            account_public_key: account_public_key
            name: name
            user_jwt_expires_in_secs: 0
            id: id
            is_scp_account: true
            is_system_account: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserAssignResponse'
          type: array
      required:
      - items
      type: object
    AppUserAssignRequest:
      example:
        role_id: role_id
      properties:
        role_id:
          type: string
      required:
      - role_id
      type: object
    AppUserAssignResponse:
      example:
        role_name: role_name
        nats_user:
          user_public_key: user_public_key
          name: name
          id: id
        system:
          agent_type: agent_type
          jetstream_enabled: true
          is_tenant: true
          name: name
          server_urls: server_urls
          user_jwt_expires_in_secs: 4
          id: id
          state: null
          jetstream_domain: jetstream_domain
          jetstream_tiers:
          - jetstream_tiers
          - jetstream_tiers
        app_user:
          identifier: identifier
          name: name
          id: id
        role_id: role_id
        created: 2000-01-23T04:56:07.000+00:00
        scope: null
        team_app_user:
          role_name: role_name
          role_id: role_id
          pending_invitation: true
          id: id
        resource_id: resource_id
        team:
          name: name
          id: id
        account:
          account_public_key: account_public_key
          name: name
          user_jwt_expires_in_secs: 0
          id: id
          is_scp_account: true
          is_system_account: true
      properties:
        account:
          $ref: '#/components/schemas/AccountInfo'
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        created:
          format: date-time
          type: string
        nats_user:
          $ref: '#/components/schemas/NatsUserInfo'
        resource_id:
          type: string
        role_id:
          type: string
        role_name:
          type: string
        scope:
          $ref: '#/components/schemas/AppRoleScope'
        system:
          $ref: '#/components/schemas/SystemInfo'
        team:
          $ref: '#/components/schemas/TeamInfo'
        team_app_user:
          $ref: '#/components/schemas/TeamAppUserInfo'
      required:
      - app_user
      - created
      - resource_id
      - role_id
      - role_name
      - scope
      - team_app_user
      type: object
    AppUserCreateRequest:
      example:
        identifier: identifier
        role_id: role_id
        name: name
      properties:
        identifier:
          type: string
        name:
          type: string
        role_id:
          type: string
      required:
      - identifier
      - name
      - role_id
      type: object
    AppUserCreateResponse:
      allOf:
      - $ref: '#/components/schemas/AppUserViewResponse'
      - required:
        - invitation_link
      example:
        invitation_link: invitation_link
      properties:
        invitation_link:
          type: string
      type: object
    AppUserInfo:
      example:
        identifier: identifier
        name: name
        id: id
      properties:
        id:
          type: string
        identifier:
          nullable: true
          type: string
        name:
          type: string
      required:
      - id
      - identifier
      - name
      type: object
    AppUserInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserInfo'
          type: array
      required:
      - items
      type: object
    AppUserInvitationRequest:
      example:
        associations:
        - role_id: role_id
          resource_type: null
          resource_id: resource_id
        - role_id: role_id
          resource_type: null
          resource_id: resource_id
        identifier: identifier
        role_id: role_id
        name: name
      properties:
        associations:
          items:
            $ref: '#/components/schemas/TeamAppUserAssociation'
          type: array
        identifier:
          type: string
        name:
          type: string
        role_id:
          type: string
      required:
      - identifier
      - name
      - role_id
      type: object
    AppUserInvitationResponse:
      example:
        app_user:
          identifier: identifier
          name: name
          id: id
        team_app_user:
          role_name: role_name
          role_id: role_id
          pending_invitation: true
          id: id
      properties:
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        team_app_user:
          $ref: '#/components/schemas/TeamAppUserInfo'
      required:
      - app_user
      - team_app_user
      type: object
    AppUserListResponse:
      example:
        items:
        - role_name: role_name
          identifier: identifier
          role_id: role_id
          created: 2000-01-23T04:56:07.000+00:00
          pending_creation: true
          name: name
          id: id
          type: null
        - role_name: role_name
          identifier: identifier
          role_id: role_id
          created: 2000-01-23T04:56:07.000+00:00
          pending_creation: true
          name: name
          id: id
          type: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserViewResponse'
          type: array
      required:
      - items
      type: object
    AppUserType:
      enum:
      - Person
      type: string
    AppUserUpdateRequest:
      example:
        role_id: role_id
        name: name
        reset_password: true
      properties:
        name:
          type: string
        reset_password:
          type: boolean
        role_id:
          type: string
      type: object
    AppUserUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/AppUserViewResponse'
      example:
        reset_password_link: reset_password_link
      properties:
        reset_password_link:
          type: string
      type: object
    AppUserViewResponse:
      example:
        role_name: role_name
        identifier: identifier
        role_id: role_id
        created: 2000-01-23T04:56:07.000+00:00
        pending_creation: true
        name: name
        id: id
        type: null
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        identifier:
          nullable: true
          type: string
        name:
          type: string
        pending_creation:
          type: boolean
        role_id:
          type: string
        role_name:
          type: string
        type:
          $ref: '#/components/schemas/AppUserType'
      required:
      - created
      - id
      - identifier
      - name
      - pending_creation
      - role_id
      - role_name
      - type
      type: object
    AuthzRequest:
      example:
        service: service
        resource_id: ""
      properties:
        resource_id:
          default: ""
          type: string
        service:
          type: string
      required:
      - resource_id
      - service
      type: object
    AuthzResponse:
      example:
        operations:
        - operations
        - operations
        service: service
        resource_id: resource_id
      properties:
        operations:
          items:
            type: string
          type: array
        resource_id:
          type: string
        service:
          type: string
      required:
      - operations
      - resource_id
      - service
      type: object
    AuthzViewRequest:
      items:
        $ref: '#/components/schemas/AuthzRequest'
      type: array
    AuthzViewResponse:
      items:
        $ref: '#/components/schemas/AuthzResponse'
      type: array
    CIDRList:
      items:
        type: string
      nullable: true
      type: array
    ClaimType:
      description: ClaimType is used to indicate the type of JWT being stored in a
        Claim
      type: string
    ClaimsData:
      description: ClaimsData is the base struct for all claims
      properties:
        aud:
          type: string
        exp:
          format: int64
          type: integer
        iat:
          format: int64
          type: integer
        iss:
          type: string
        jti:
          type: string
        name:
          type: string
        nbf:
          format: int64
          type: integer
        sub:
          type: string
      type: object
    ClusterChartType:
      enum:
      - NumConnections
      - NumSubscriptions
      - CPUUsage
      - MemoryUsage
      - NumSlowConsumer
      - BytesSent
      - BytesReceived
      - NumMessagesSent
      - NumMessagesReceived
      - GatewayBytesSent
      - GatewayBytesReceived
      - GatewayNumMessagesSent
      - GatewayNumMessagesReceived
      - RouteBytesSent
      - RouteBytesReceived
      - RouteNumMessagesSent
      - RouteNumMessagesReceived
      - RouteBytesPending
      type: string
    ClusterInfo:
      description: |-
        ClusterInfo shows information about the underlying set of servers
        that make up the stream or consumer.
      example:
        leader: leader
        replicas:
        - null
        - null
        name: name
      properties:
        leader:
          type: string
        name:
          type: string
        replicas:
          items:
            $ref: '#/components/schemas/ClusterInfo_replicas_inner'
          type: array
      type: object
    Compression:
      $ref: '#/components/schemas/S2Compression'
    ConnInfo:
      description: ConnInfo has detailed information on a per connection basis.
      properties:
        account:
          type: string
        authorized_user:
          type: string
        cid:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        idle:
          type: string
        in_bytes:
          format: int64
          type: integer
        in_msgs:
          format: int64
          type: integer
        ip:
          type: string
        issuer_key:
          type: string
        jwt:
          type: string
        kind:
          type: string
        lang:
          type: string
        last_activity:
          format: date-time
          type: string
        mqtt_client:
          type: string
        name:
          type: string
        name_tag:
          type: string
        out_bytes:
          format: int64
          type: integer
        out_msgs:
          format: int64
          type: integer
        pending_bytes:
          type: integer
        port:
          type: integer
        reason:
          type: string
        rtt:
          type: string
        start:
          format: date-time
          type: string
        stop:
          nullable: true
          type: string
        subscriptions:
          maximum: 4294967295
          minimum: 0
          type: integer
        subscriptions_list:
          items:
            type: string
          type: array
        subscriptions_list_detail:
          items:
            $ref: '#/components/schemas/SubDetail'
          type: array
        tags:
          description: |-
            TagList is a unique array of lower case strings
            All tag list methods lower case the strings in the arguments
          items:
            type: string
          nullable: true
          type: array
        tls_cipher_suite:
          type: string
        tls_peer_certs:
          items:
            $ref: '#/components/schemas/ConnInfo_tls_peer_certs_inner'
          type: array
        tls_version:
          type: string
        type:
          type: string
        uptime:
          type: string
        version:
          type: string
      required:
      - cid
      - idle
      - in_bytes
      - in_msgs
      - ip
      - last_activity
      - out_bytes
      - out_msgs
      - pending_bytes
      - port
      - start
      - subscriptions
      - uptime
      type: object
    Connz:
      description: Connz represents detailed information on current client connections.
      example:
        total: 5
        offset: 1
        now: 2000-01-23T04:56:07.000+00:00
        limit: 0
        num_connections: 6
        server_id: server_id
        connections:
        - null
        - null
      properties:
        connections:
          items:
            $ref: '#/components/schemas/Connz_connections_inner'
          type: array
        limit:
          type: integer
        now:
          format: date-time
          type: string
        num_connections:
          type: integer
        offset:
          type: integer
        server_id:
          type: string
        total:
          type: integer
      required:
      - connections
      - limit
      - now
      - num_connections
      - offset
      - server_id
      - total
      type: object
    ConsumerConfig:
      description: |-
        ConsumerConfig is the configuration for a JetStream consumes

        NATS Schema Type io.nats.jetstream.api.v1.consumer_configuration
      properties:
        ack_policy:
          $ref: '#/components/schemas/AckPolicy'
        ack_wait:
          format: int64
          type: integer
        backoff:
          items:
            format: int64
            type: integer
          type: array
        deliver_group:
          type: string
        deliver_policy:
          $ref: '#/components/schemas/DeliverPolicy'
        deliver_subject:
          type: string
        description:
          type: string
        direct:
          description: Don't add to general clients.
          type: boolean
        durable_name:
          type: string
        filter_subject:
          type: string
        filter_subjects:
          items:
            type: string
          type: array
        flow_control:
          type: boolean
        headers_only:
          type: boolean
        idle_heartbeat:
          format: int64
          type: integer
        inactive_threshold:
          format: int64
          type: integer
        max_ack_pending:
          type: integer
        max_batch:
          type: integer
        max_bytes:
          type: integer
        max_deliver:
          type: integer
        max_expires:
          format: int64
          type: integer
        max_waiting:
          type: integer
        mem_storage:
          type: boolean
        metadata:
          additionalProperties:
            type: string
          description: Metadata is additional metadata for the Consumer.
          type: object
        name:
          type: string
        num_replicas:
          type: integer
        opt_start_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        opt_start_time:
          nullable: true
          type: string
        rate_limit_bps:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        replay_policy:
          $ref: '#/components/schemas/ReplayPolicy'
        sample_freq:
          type: string
      required:
      - ack_policy
      - deliver_policy
      - num_replicas
      - replay_policy
      type: object
    ConsumerInfo:
      description: ConsumerInfo reports the current state of a consumer
      properties:
        ack_floor:
          $ref: '#/components/schemas/SequenceInfo'
        cluster:
          $ref: '#/components/schemas/ConsumerInfo_cluster'
        config:
          $ref: '#/components/schemas/ConsumerConfig'
        created:
          format: date-time
          type: string
        delivered:
          $ref: '#/components/schemas/SequenceInfo'
        name:
          type: string
        num_ack_pending:
          type: integer
        num_pending:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        num_redelivered:
          type: integer
        num_waiting:
          type: integer
        push_bound:
          type: boolean
        stream_name:
          type: string
        ts:
          format: date-time
          type: string
      required:
      - ack_floor
      - config
      - created
      - delivered
      - name
      - num_ack_pending
      - num_pending
      - num_redelivered
      - num_waiting
      - stream_name
      - ts
      type: object
    DataStats:
      description: DataStats reports how may msg and bytes. Applicable for both sent
        and received.
      example:
        msgs: 9
        bytes: 7
      properties:
        bytes:
          format: int64
          type: integer
        msgs:
          format: int64
          type: integer
      required:
      - bytes
      - msgs
      type: object
    DeliverPolicy:
      enum:
      - all
      - last
      - new
      - by_start_sequence
      - by_start_time
      - last_per_subject
      type: string
    DiscardPolicy:
      description: enums have been changed to match UnmarshalJSON in https://github.com/nats-io/jsm.go/blob/main/api/streams.go
      enum:
      - old
      - new
      type: string
    Export:
      allOf:
      - $ref: '#/components/schemas/Info'
      description: Export represents a single export
      example:
        revocations:
          key: 1
        account_token_position: 0
        subject: subject
        name: name
        response_type: null
        token_req: true
        type: null
        service_latency: "{}"
        advertise: true
        response_threshold: 6
      properties:
        account_token_position:
          minimum: 0
          type: integer
        advertise:
          type: boolean
        name:
          type: string
        response_threshold:
          format: int64
          type: integer
        response_type:
          $ref: '#/components/schemas/ResponseType'
        revocations:
          additionalProperties:
            format: int64
            type: integer
          description: RevocationList is used to store a mapping of public keys to
            unix timestamps
          type: object
        service_latency:
          allOf:
          - $ref: '#/components/schemas/ServiceLatency'
          nullable: true
          type: object
        subject:
          description: Subject is a string that represents a NATS subject
          type: string
        token_req:
          type: boolean
        type:
          $ref: '#/components/schemas/ExportType'
      type: object
    ExportType:
      description: ExportType defines the type of import/export.
      enum:
      - stream
      - service
      type: string
    Exports:
      description: Exports is a slice of exports
      items:
        $ref: '#/components/schemas/Exports_inner'
      type: array
    ExternalAuthorization:
      example:
        allowed_accounts:
        - allowed_accounts
        - allowed_accounts
        auth_users:
        - auth_users
        - auth_users
        xkey: xkey
      properties:
        allowed_accounts:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
        auth_users:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
        xkey:
          type: string
      required:
      - auth_users
      type: object
    ExternalStream:
      description: ExternalStream allows you to qualify access to a stream source
        in another account.
      properties:
        api:
          type: string
        deliver:
          type: string
      required:
      - api
      - deliver
      type: object
    GatewayStat:
      description: GatewayStat holds gateway statistics.
      properties:
        gwid:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        inbound_connections:
          type: integer
        name:
          type: string
        received:
          $ref: '#/components/schemas/DataStats'
        sent:
          $ref: '#/components/schemas/DataStats'
      required:
      - gwid
      - inbound_connections
      - name
      - received
      - sent
      type: object
    GenericFields:
      properties:
        tags:
          description: |-
            TagList is a unique array of lower case strings
            All tag list methods lower case the strings in the arguments
          items:
            type: string
          nullable: true
          type: array
        type:
          description: ClaimType is used to indicate the type of JWT being stored
            in a Claim
          type: string
        version:
          type: integer
      type: object
    Import:
      description: Import describes a mapping from another account into this one
      example:
        local_subject: local_subject
        subject: subject
        name: name
        share: true
        to: to
        type: null
        account: account
        token: token
      properties:
        account:
          type: string
        local_subject:
          description: Subject is a string that represents a NATS subject
          type: string
        name:
          type: string
        share:
          type: boolean
        subject:
          description: Subject is a string that represents a NATS subject
          type: string
        to:
          description: Subject is a string that represents a NATS subject
          type: string
        token:
          type: string
        type:
          $ref: '#/components/schemas/ExportType'
      type: object
    Imports:
      description: Imports is a list of import structs
      items:
        $ref: '#/components/schemas/Imports_inner'
      type: array
    Info:
      properties:
        description:
          type: string
        info_url:
          type: string
      type: object
    InvitationDecisionRequest:
      example:
        accept: true
      properties:
        accept:
          type: boolean
      required:
      - accept
      type: object
    InvitationListResponse:
      example:
        items:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamInfo'
          type: array
      required:
      - items
      type: object
    JSAcctStats:
      $ref: '#/components/schemas/JetStreamAccountStats'
    JSApiError:
      properties:
        code:
          type: integer
        description:
          type: string
        err_code:
          maximum: 65535
          minimum: 0
          type: integer
      required:
      - code
      type: object
    JSAssetInfoListResponse:
      example:
        items:
        - jetstream_type: null
          id: id
          config:
            discard: null
            sources:
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            deny_delete: true
            allow_rollup_hdrs: true
            description: description
            max_bytes: 5
            storage: null
            subject_transform:
              src: src
              dest: dest
            max_consumers: 5
            discard_new_per_subject: true
            max_msgs_per_subject: 9
            max_msgs: 7
            retention: null
            first_seq: 2147483647
            duplicate_window: 0
            sealed: true
            max_msg_size: 2
            allow_direct: true
            max_age: 1
            republish: null
            template_owner: template_owner
            no_ack: true
            num_replicas: 3
            deny_purge: true
            name: name
            placement: null
            compression: null
        - jetstream_type: null
          id: id
          config:
            discard: null
            sources:
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            deny_delete: true
            allow_rollup_hdrs: true
            description: description
            max_bytes: 5
            storage: null
            subject_transform:
              src: src
              dest: dest
            max_consumers: 5
            discard_new_per_subject: true
            max_msgs_per_subject: 9
            max_msgs: 7
            retention: null
            first_seq: 2147483647
            duplicate_window: 0
            sealed: true
            max_msg_size: 2
            allow_direct: true
            max_age: 1
            republish: null
            template_owner: template_owner
            no_ack: true
            num_replicas: 3
            deny_purge: true
            name: name
            placement: null
            compression: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSAssetInfoResponse'
          type: array
      required:
      - items
      type: object
    JSAssetInfoResponse:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamInfo'
      - required:
        - config
        - id
        - jetstream_type
      example:
        jetstream_type: null
        id: id
        config:
          discard: null
          sources:
          - opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          - opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          deny_delete: true
          allow_rollup_hdrs: true
          description: description
          max_bytes: 5
          storage: null
          subject_transform:
            src: src
            dest: dest
          max_consumers: 5
          discard_new_per_subject: true
          max_msgs_per_subject: 9
          max_msgs: 7
          retention: null
          first_seq: 2147483647
          duplicate_window: 0
          sealed: true
          max_msg_size: 2
          allow_direct: true
          max_age: 1
          republish: null
          template_owner: template_owner
          no_ack: true
          num_replicas: 3
          deny_purge: true
          name: name
          placement: null
          compression: null
      properties:
        config:
          $ref: '#/components/schemas/JSCommonStreamConfig'
        id:
          type: string
        jetstream_type:
          $ref: '#/components/schemas/JSType'
      type: object
    JSCommonConsumerConfigRequest:
      properties:
        ack_policy:
          $ref: '#/components/schemas/AckPolicy'
        ack_wait:
          format: int64
          type: integer
        backoff:
          items:
            format: int64
            type: integer
          type: array
        deliver_policy:
          $ref: '#/components/schemas/DeliverPolicy'
        description:
          type: string
        direct:
          type: boolean
        durable_name:
          type: string
        filter_subject:
          type: string
        inactive_threshold:
          format: int64
          type: integer
        max_ack_pending:
          type: integer
        max_deliver:
          type: integer
        mem_storage:
          type: boolean
        name:
          type: string
        num_replicas:
          type: integer
        opt_start_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        opt_start_time:
          nullable: true
          type: string
        replay_policy:
          $ref: '#/components/schemas/ReplayPolicy'
        sample_freq:
          type: string
      required:
      - ack_policy
      - deliver_policy
      - num_replicas
      - replay_policy
      type: object
    JSCommonStreamConfig:
      example:
        discard: null
        sources:
        - opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        - opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        deny_delete: true
        allow_rollup_hdrs: true
        description: description
        max_bytes: 5
        storage: null
        subject_transform:
          src: src
          dest: dest
        max_consumers: 5
        discard_new_per_subject: true
        max_msgs_per_subject: 9
        max_msgs: 7
        retention: null
        first_seq: 2147483647
        duplicate_window: 0
        sealed: true
        max_msg_size: 2
        allow_direct: true
        max_age: 1
        republish: null
        template_owner: template_owner
        no_ack: true
        num_replicas: 3
        deny_purge: true
        name: name
        placement: null
        compression: null
      properties:
        allow_direct:
          type: boolean
        allow_rollup_hdrs:
          type: boolean
        compression:
          $ref: '#/components/schemas/S2Compression'
        deny_delete:
          type: boolean
        deny_purge:
          type: boolean
        description:
          type: string
        discard:
          $ref: '#/components/schemas/DiscardPolicy'
        discard_new_per_subject:
          type: boolean
        duplicate_window:
          format: int64
          type: integer
        first_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        max_consumers:
          type: integer
        max_msg_size:
          format: int32
          type: integer
        max_msgs:
          format: int64
          type: integer
        max_msgs_per_subject:
          format: int64
          type: integer
        name:
          type: string
        no_ack:
          type: boolean
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/JSCommonStreamConfig_placement'
        republish:
          $ref: '#/components/schemas/JSCommonStreamConfig_republish'
        retention:
          $ref: '#/components/schemas/RetentionPolicy'
        sealed:
          type: boolean
        sources:
          items:
            $ref: '#/components/schemas/StreamSource'
          nullable: true
          type: array
        storage:
          $ref: '#/components/schemas/StorageType'
        subject_transform:
          $ref: '#/components/schemas/SubjectTransformConfig'
        template_owner:
          type: string
      required:
      - allow_direct
      - allow_rollup_hdrs
      - deny_delete
      - deny_purge
      - discard
      - max_age
      - max_bytes
      - max_consumers
      - max_msgs
      - max_msgs_per_subject
      - name
      - num_replicas
      - retention
      - sealed
      - storage
      type: object
    JSCommonStreamInfo:
      properties:
        alternates:
          items:
            $ref: '#/components/schemas/StreamAlternate'
          type: array
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
        created:
          format: date-time
          type: string
        sources:
          items:
            $ref: '#/components/schemas/StreamSourceInfo'
          type: array
        state:
          $ref: '#/components/schemas/StreamState'
      required:
      - created
      - state
      type: object
    JSConsumerInfoListResponse:
      example:
        items:
        - consumer_type: null
          id: id
        - consumer_type: null
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSConsumerInfoResponse'
          type: array
      required:
      - items
      type: object
    JSConsumerInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ConsumerInfo'
      - required:
        - consumer_type
        - id
      example:
        consumer_type: null
        id: id
      properties:
        consumer_type:
          $ref: '#/components/schemas/JSConsumerType'
        id:
          type: string
      type: object
    JSConsumerType:
      enum:
      - push
      - pull
      type: string
    JSKVBucketConfig:
      example:
        bucket: bucket
        max_age: 1
        mirror:
          opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        republish:
          src: src
          headers_only: true
          dest: dest
        sources:
        - opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        - opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        num_replicas: 2
        max_value_size: 5
        description: description
        history: 153
        max_bytes: 5
        placement:
          cluster: cluster
          tags:
          - tags
          - tags
        storage: null
      properties:
        bucket:
          type: string
        description:
          type: string
        history:
          default: 1
          maximum: 255
          minimum: 0
          type: integer
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        max_value_size:
          format: int32
          type: integer
        mirror:
          $ref: '#/components/schemas/StreamSource'
        num_replicas:
          default: 1
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        republish:
          $ref: '#/components/schemas/RePublish'
        sources:
          items:
            $ref: '#/components/schemas/StreamSource'
          type: array
        storage:
          $ref: '#/components/schemas/StorageType'
      required:
      - bucket
      - storage
      type: object
    JSKVBucketListResponse:
      example:
        items:
        - num_values: 2147483647
          stream_name: stream_name
          bytes: 2147483647
          id: id
          config:
            bucket: bucket
            max_age: 1
            mirror:
              opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            republish:
              src: src
              headers_only: true
              dest: dest
            sources:
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            num_replicas: 2
            max_value_size: 5
            description: description
            history: 153
            max_bytes: 5
            placement:
              cluster: cluster
              tags:
              - tags
              - tags
            storage: null
        - num_values: 2147483647
          stream_name: stream_name
          bytes: 2147483647
          id: id
          config:
            bucket: bucket
            max_age: 1
            mirror:
              opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            republish:
              src: src
              headers_only: true
              dest: dest
            sources:
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            - opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            num_replicas: 2
            max_value_size: 5
            description: description
            history: 153
            max_bytes: 5
            placement:
              cluster: cluster
              tags:
              - tags
              - tags
            storage: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSKVBucketViewResponse'
          type: array
      required:
      - items
      type: object
    JSKVBucketUpdateRequest:
      example:
        config:
          max_age: 6
          mirror:
            opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          republish:
            src: src
            headers_only: true
            dest: dest
          sources:
          - opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          - opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          num_replicas: 5
          max_value_size: 5
          description: description
          history: 20
          max_bytes: 1
          placement:
            cluster: cluster
            tags:
            - tags
            - tags
      properties:
        config:
          $ref: '#/components/schemas/UpdatableKVBucketConfig'
      required:
      - config
      type: object
    JSKVBucketViewResponse:
      example:
        num_values: 2147483647
        stream_name: stream_name
        bytes: 2147483647
        id: id
        config:
          bucket: bucket
          max_age: 1
          mirror:
            opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          republish:
            src: src
            headers_only: true
            dest: dest
          sources:
          - opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          - opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          num_replicas: 2
          max_value_size: 5
          description: description
          history: 153
          max_bytes: 5
          placement:
            cluster: cluster
            tags:
            - tags
            - tags
          storage: null
      properties:
        bytes:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        config:
          $ref: '#/components/schemas/JSKVBucketConfig'
        id:
          type: string
        num_values:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        stream_name:
          type: string
      required:
      - bytes
      - config
      - id
      - num_values
      - stream_name
      type: object
    JSMirrorConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamConfig'
      - required:
        - mirror
        - mirror_direct
      example:
        mirror:
          opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        mirror_direct: true
      properties:
        mirror:
          $ref: '#/components/schemas/StreamSource'
        mirror_direct:
          type: boolean
      type: object
    JSMirrorConfigResponse:
      $ref: '#/components/schemas/JSMirrorConfigRequest'
    JSMirrorInfoListResponse:
      example:
        items:
        - shared: true
          mirror:
            external: null
            lag: 2147483647
            name: name
            active: 0
            subject_transform_dest: subject_transform_dest
            error: null
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          id: id
          config:
            mirror:
              opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            mirror_direct: true
        - shared: true
          mirror:
            external: null
            lag: 2147483647
            name: name
            active: 0
            subject_transform_dest: subject_transform_dest
            error: null
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          id: id
          config:
            mirror:
              opt_start_time: opt_start_time
              external: null
              opt_start_seq: 2147483647
              name: name
              filter_subject: filter_subject
              subject_transforms:
              - src: src
                dest: dest
              - src: src
                dest: dest
            mirror_direct: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSMirrorInfoResponse'
          type: array
      required:
      - items
      type: object
    JSMirrorInfoResponse:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamInfo'
      - required:
        - config
        - id
        - shared
      example:
        shared: true
        mirror:
          external: null
          lag: 2147483647
          name: name
          active: 0
          subject_transform_dest: subject_transform_dest
          error: null
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        id: id
        config:
          mirror:
            opt_start_time: opt_start_time
            external: null
            opt_start_seq: 2147483647
            name: name
            filter_subject: filter_subject
            subject_transforms:
            - src: src
              dest: dest
            - src: src
              dest: dest
          mirror_direct: true
      properties:
        config:
          $ref: '#/components/schemas/JSMirrorConfigRequest'
        id:
          type: string
        mirror:
          $ref: '#/components/schemas/StreamSourceInfo'
        shared:
          type: boolean
      type: object
    JSObjectBucketConfig:
      allOf:
      - $ref: '#/components/schemas/ObjectStoreConfig'
      example:
        storage: null
      properties:
        storage:
          $ref: '#/components/schemas/StorageType'
      type: object
    JSObjectBucketListResponse:
      example:
        items:
        - stream_name: stream_name
          bytes: 2147483647
          id: id
          config:
            storage: null
        - stream_name: stream_name
          bytes: 2147483647
          id: id
          config:
            storage: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSObjectBucketViewResponse'
          type: array
      required:
      - items
      type: object
    JSObjectBucketUpdateRequest:
      example:
        sealed: true
        really_sealed: true
        config:
          max_age: 0
          metadata:
            key: metadata
          num_replicas: 1
          description: description
          max_bytes: 6
          placement:
            cluster: cluster
            tags:
            - tags
            - tags
      properties:
        config:
          $ref: '#/components/schemas/UpdatableObjectBucketConfig'
        really_sealed:
          type: boolean
        sealed:
          type: boolean
      required:
      - config
      type: object
    JSObjectBucketViewResponse:
      example:
        stream_name: stream_name
        bytes: 2147483647
        id: id
        config:
          storage: null
      properties:
        bytes:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        config:
          $ref: '#/components/schemas/JSObjectBucketConfig'
        id:
          type: string
        stream_name:
          type: string
      required:
      - bytes
      - config
      - id
      - stream_name
      type: object
    JSPlacementOptionsResponse:
      example:
        num_replicas:
        - 0
        - 0
        clusters:
        - clusters
        - clusters
        tags:
        - tags
        - tags
      properties:
        clusters:
          items:
            type: string
          type: array
        num_replicas:
          items:
            type: integer
          type: array
        tags:
          items:
            type: string
          type: array
      required:
      - clusters
      - num_replicas
      - tags
      type: object
    JSPullConsumerConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonConsumerConfigRequest'
      example:
        max_waiting: 2
        max_expires: 5
        max_bytes: 5
        max_batch: 1
      properties:
        max_batch:
          type: integer
        max_bytes:
          type: integer
        max_expires:
          format: int64
          type: integer
        max_waiting:
          description: Pull based options.
          type: integer
      type: object
    JSPullConsumerInfoResponse:
      example:
        cluster:
          leader: leader
          replicas:
          - null
          - null
          name: name
        num_redelivered: 3
        stream_name: stream_name
        created: 2000-01-23T04:56:07.000+00:00
        num_pending: 2147483647
        num_waiting: 2
        name: name
        delivered:
          consumer_seq: 2147483647
          last_active: last_active
          stream_seq: 2147483647
        id: id
        num_ack_pending: 7
        config:
          max_waiting: 2
          max_expires: 5
          max_bytes: 5
          max_batch: 1
        ack_floor:
          consumer_seq: 2147483647
          last_active: last_active
          stream_seq: 2147483647
      properties:
        ack_floor:
          $ref: '#/components/schemas/SequenceInfo'
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
        config:
          $ref: '#/components/schemas/JSPullConsumerConfigRequest'
        created:
          format: date-time
          type: string
        delivered:
          $ref: '#/components/schemas/SequenceInfo'
        id:
          type: string
        name:
          type: string
        num_ack_pending:
          type: integer
        num_pending:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        num_redelivered:
          type: integer
        num_waiting:
          type: integer
        stream_name:
          type: string
      required:
      - ack_floor
      - created
      - delivered
      - id
      - name
      - num_ack_pending
      - num_pending
      - num_redelivered
      - num_waiting
      - stream_name
      type: object
    JSPullConsumerUpdateRequest:
      example:
        max_ack_pending: 1
        sample_freq: sample_freq
        backoff:
        - 6
        - 6
        ack_wait: 0
        description: description
        max_deliver: 5
        filter_subject: filter_subject
      properties:
        ack_wait:
          format: int64
          type: integer
        backoff:
          items:
            format: int64
            type: integer
          type: array
        description:
          type: string
        filter_subject:
          type: string
        max_ack_pending:
          type: integer
        max_deliver:
          type: integer
        sample_freq:
          type: string
      type: object
    JSPushConsumerConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonConsumerConfigRequest'
      example:
        deliver_group: deliver_group
        deliver_subject: deliver_subject
        rate_limit_bps: 2147483647
        headers_only: true
        flow_control: true
        idle_heartbeat: 0
      properties:
        deliver_group:
          type: string
        deliver_subject:
          description: Push based options.
          type: string
        flow_control:
          type: boolean
        headers_only:
          type: boolean
        idle_heartbeat:
          format: int64
          type: integer
        rate_limit_bps:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
      type: object
    JSPushConsumerInfoResponse:
      example:
        cluster:
          leader: leader
          replicas:
          - null
          - null
          name: name
        num_redelivered: 5
        push_bound: true
        stream_name: stream_name
        created: 2000-01-23T04:56:07.000+00:00
        num_pending: 2147483647
        name: name
        delivered:
          consumer_seq: 2147483647
          last_active: last_active
          stream_seq: 2147483647
        id: id
        num_ack_pending: 1
        config:
          deliver_group: deliver_group
          deliver_subject: deliver_subject
          rate_limit_bps: 2147483647
          headers_only: true
          flow_control: true
          idle_heartbeat: 0
        ack_floor:
          consumer_seq: 2147483647
          last_active: last_active
          stream_seq: 2147483647
      properties:
        ack_floor:
          $ref: '#/components/schemas/SequenceInfo'
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
        config:
          $ref: '#/components/schemas/JSPushConsumerConfigRequest'
        created:
          format: date-time
          type: string
        delivered:
          $ref: '#/components/schemas/SequenceInfo'
        id:
          type: string
        name:
          type: string
        num_ack_pending:
          type: integer
        num_pending:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        num_redelivered:
          type: integer
        push_bound:
          type: boolean
        stream_name:
          type: string
      required:
      - ack_floor
      - created
      - delivered
      - id
      - name
      - num_ack_pending
      - num_pending
      - num_redelivered
      - stream_name
      type: object
    JSPushConsumerUpdateRequest:
      example:
        max_ack_pending: 1
        sample_freq: sample_freq
        backoff:
        - 6
        - 6
        ack_wait: 0
        description: description
        max_deliver: 5
        headers_only: true
        filter_subject: filter_subject
      properties:
        ack_wait:
          format: int64
          type: integer
        backoff:
          items:
            format: int64
            type: integer
          type: array
        description:
          type: string
        filter_subject:
          type: string
        headers_only:
          type: boolean
        max_ack_pending:
          type: integer
        max_deliver:
          type: integer
        sample_freq:
          type: string
      type: object
    JSShareRequest:
      type: object
    JSStreamConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamConfig'
      example:
        subjects:
        - subjects
        - subjects
      properties:
        subjects:
          items:
            type: string
          type: array
      type: object
    JSStreamConfigResponse:
      $ref: '#/components/schemas/JSStreamConfigRequest'
    JSStreamInfoListResponse:
      example:
        items:
        - id: id
          config:
            subjects:
            - subjects
            - subjects
        - id: id
          config:
            subjects:
            - subjects
            - subjects
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSStreamInfoResponse'
          type: array
      required:
      - items
      type: object
    JSStreamInfoResponse:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamInfo'
      - required:
        - config
        - id
      example:
        id: id
        config:
          subjects:
          - subjects
          - subjects
      properties:
        config:
          $ref: '#/components/schemas/JSStreamConfigRequest'
        id:
          type: string
      type: object
    JSType:
      enum:
      - stream
      - mirror
      - kv-bucket
      - object-bucket
      type: string
    JetStreamAPIStats:
      example:
        total: 2147483647
        errors: 2147483647
      properties:
        errors:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        total:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
      required:
      - errors
      - total
      type: object
    JetStreamAccountLimits:
      example:
        max_ack_pending: 6
        memory_max_stream_bytes: 7
        max_consumers: 1
        max_streams: 2
        max_bytes_required: true
        max_storage: 5
        storage_max_stream_bytes: 9
        max_memory: 5
      properties:
        max_ack_pending:
          type: integer
        max_bytes_required:
          type: boolean
        max_consumers:
          type: integer
        max_memory:
          format: int64
          type: integer
        max_storage:
          format: int64
          type: integer
        max_streams:
          type: integer
        memory_max_stream_bytes:
          format: int64
          type: integer
        storage_max_stream_bytes:
          format: int64
          type: integer
      required:
      - max_ack_pending
      - max_bytes_required
      - max_consumers
      - max_memory
      - max_storage
      - max_streams
      - memory_max_stream_bytes
      - storage_max_stream_bytes
      type: object
    JetStreamAccountStats:
      description: JetStreamAccountStats returns current statistics about the account's
        JetStream usage.
      example:
        tiers:
          key:
            memory: 2147483647
            streams: 4
            consumers: 0
            storage: 2147483647
            limits:
              max_ack_pending: 6
              memory_max_stream_bytes: 7
              max_consumers: 1
              max_streams: 2
              max_bytes_required: true
              max_storage: 5
              storage_max_stream_bytes: 9
              max_memory: 5
        domain: domain
        JetStreamTier:
          memory: 2147483647
          streams: 4
          consumers: 0
          storage: 2147483647
          limits:
            max_ack_pending: 6
            memory_max_stream_bytes: 7
            max_consumers: 1
            max_streams: 2
            max_bytes_required: true
            max_storage: 5
            storage_max_stream_bytes: 9
            max_memory: 5
        api:
          total: 2147483647
          errors: 2147483647
      properties:
        JetStreamTier:
          $ref: '#/components/schemas/JetStreamTier'
        api:
          $ref: '#/components/schemas/JetStreamAPIStats'
        domain:
          type: string
        tiers:
          additionalProperties:
            $ref: '#/components/schemas/JetStreamTier'
          type: object
      required:
      - JetStreamTier
      - api
      type: object
    JetStreamConfig:
      description: |-
        JetStreamConfig determines this server's configuration.
        MaxMemory and MaxStore are in bytes.
      properties:
        compress_ok:
          type: boolean
        domain:
          type: string
        max_memory:
          format: int64
          type: integer
        max_storage:
          format: int64
          type: integer
        store_dir:
          type: string
      required:
      - max_memory
      - max_storage
      type: object
    JetStreamLimits:
      example:
        max_ack_pending: 5
        mem_max_stream_bytes: 5
        disk_max_stream_bytes: 6
        disk_storage: 1
        max_bytes_required: true
        streams: 7
        mem_storage: 2
        consumer: 0
      properties:
        consumer:
          format: int64
          type: integer
        disk_max_stream_bytes:
          format: int64
          type: integer
        disk_storage:
          format: int64
          type: integer
        max_ack_pending:
          format: int64
          type: integer
        max_bytes_required:
          type: boolean
        mem_max_stream_bytes:
          format: int64
          type: integer
        mem_storage:
          format: int64
          type: integer
        streams:
          format: int64
          type: integer
      type: object
    JetStreamStats:
      description: Statistics about JetStream for this server.
      properties:
        accounts:
          type: integer
        api:
          $ref: '#/components/schemas/JetStreamAPIStats'
        ha_assets:
          type: integer
        memory:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        reserved_memory:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        reserved_storage:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        storage:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
      required:
      - accounts
      - api
      - ha_assets
      - memory
      - reserved_memory
      - reserved_storage
      - storage
      type: object
    JetStreamTier:
      example:
        memory: 2147483647
        streams: 4
        consumers: 0
        storage: 2147483647
        limits:
          max_ack_pending: 6
          memory_max_stream_bytes: 7
          max_consumers: 1
          max_streams: 2
          max_bytes_required: true
          max_storage: 5
          storage_max_stream_bytes: 9
          max_memory: 5
      properties:
        consumers:
          type: integer
        limits:
          $ref: '#/components/schemas/JetStreamAccountLimits'
        memory:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        storage:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        streams:
          type: integer
      required:
      - consumers
      - limits
      - memory
      - storage
      - streams
      type: object
    JetStreamTieredLimits:
      additionalProperties:
        $ref: '#/components/schemas/JetStreamLimits'
      type: object
    JetStreamVarz:
      description: JetStreamVarz contains basic runtime information about jetstream
      properties:
        config:
          $ref: '#/components/schemas/JetStreamVarz_config'
        meta:
          $ref: '#/components/schemas/JetStreamVarz_meta'
        stats:
          $ref: '#/components/schemas/JetStreamVarz_stats'
      type: object
    LostStreamData:
      description: LostStreamData indicates msgs that have been lost during file checks
        and recover due to corruption
      properties:
        bytes:
          description: How many bytes were lost
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        msgs:
          description: Message IDs of lost messages
          items:
            maximum: 18446744073709551615
            minimum: 0
            type: integer
          type: array
      required:
      - bytes
      - msgs
      type: object
    Mapping:
      additionalProperties:
        items:
          $ref: '#/components/schemas/WeightedMapping'
        type: array
      type: object
    MetaClusterInfo:
      description: MetaClusterInfo shows information about the meta group.
      properties:
        cluster_size:
          type: integer
        leader:
          type: string
        name:
          type: string
        replicas:
          items:
            $ref: '#/components/schemas/ClusterInfo_replicas_inner'
          type: array
      required:
      - cluster_size
      type: object
    NatsCluster:
      example:
        incomingGateways: 6
        name: name
        nodeCount: 1
        outgoingGateways: 5
        connections: 0
      properties:
        connections:
          type: integer
        incomingGateways:
          type: integer
        name:
          type: string
        nodeCount:
          type: integer
        outgoingGateways:
          type: integer
      required:
      - connections
      - incomingGateways
      - name
      - nodeCount
      - outgoingGateways
      type: object
    NatsClusterListResponse:
      example:
        items:
        - incomingGateways: 6
          name: name
          nodeCount: 1
          outgoingGateways: 5
          connections: 0
        - incomingGateways: 6
          name: name
          nodeCount: 1
          outgoingGateways: 5
          connections: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/NatsCluster'
          type: array
      required:
      - items
      type: object
    NatsLimits:
      properties:
        data:
          format: int64
          type: integer
        payload:
          format: int64
          type: integer
        subs:
          format: int64
          type: integer
      type: object
    NatsServerInfoListResponse:
      example:
        items:
        - cluster: cluster
          ver: ver
          domain: domain
          host: host
          name: name
          id: id
          time: 2000-01-23T04:56:07.000+00:00
          jetstream: true
          seq: 2147483647
          tags:
          - tags
          - tags
        - cluster: cluster
          ver: ver
          domain: domain
          host: host
          name: name
          id: id
          time: 2000-01-23T04:56:07.000+00:00
          jetstream: true
          seq: 2147483647
          tags:
          - tags
          - tags
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServerInfo'
          type: array
      required:
      - items
      type: object
    NatsServerListResponse:
      example:
        items:
        - server:
            cluster: cluster
            ver: ver
            domain: domain
            host: host
            name: name
            id: id
            time: 2000-01-23T04:56:07.000+00:00
            jetstream: true
            seq: 2147483647
            tags:
            - tags
            - tags
          statsz:
            gateways:
            - null
            - null
            subscriptions: 870642708
            start: 2000-01-23T04:56:07.000+00:00
            cpu: 5.637376656633329
            received:
              msgs: 9
              bytes: 7
            jetstream: null
            sent:
              msgs: 9
              bytes: 7
            routes:
            - null
            - null
            total_connections: 2147483647
            cores: 5
            mem: 2
            active_accounts: 0
            slow_consumers: 3
            active_servers: 6
            connections: 1
        - server:
            cluster: cluster
            ver: ver
            domain: domain
            host: host
            name: name
            id: id
            time: 2000-01-23T04:56:07.000+00:00
            jetstream: true
            seq: 2147483647
            tags:
            - tags
            - tags
          statsz:
            gateways:
            - null
            - null
            subscriptions: 870642708
            start: 2000-01-23T04:56:07.000+00:00
            cpu: 5.637376656633329
            received:
              msgs: 9
              bytes: 7
            jetstream: null
            sent:
              msgs: 9
              bytes: 7
            routes:
            - null
            - null
            total_connections: 2147483647
            cores: 5
            mem: 2
            active_accounts: 0
            slow_consumers: 3
            active_servers: 6
            connections: 1
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServerStatsMsg'
          type: array
      required:
      - items
      type: object
    NatsUserConnectionsListResponse:
      example:
        items:
        - total: 5
          offset: 1
          now: 2000-01-23T04:56:07.000+00:00
          limit: 0
          num_connections: 6
          server_id: server_id
          connections:
          - null
          - null
        - total: 5
          offset: 1
          now: 2000-01-23T04:56:07.000+00:00
          limit: 0
          num_connections: 6
          server_id: server_id
          connections:
          - null
          - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connz'
          type: array
      required:
      - items
      type: object
    NatsUserCopyRequest:
      example:
        sk_group_id: sk_group_id
        name: name
      properties:
        name:
          type: string
        sk_group_id:
          type: string
      required:
      - name
      - sk_group_id
      type: object
    NatsUserCreateRequest:
      example:
        sk_group_id: sk_group_id
        jwt_settings: null
        name: name
        jwt_expires_in_secs: 0
      properties:
        jwt_expires_in_secs:
          format: int64
          type: integer
        jwt_settings:
          $ref: '#/components/schemas/NatsUserJwtSettings'
        name:
          type: string
        sk_group_id:
          type: string
      required:
      - name
      - sk_group_id
      type: object
    NatsUserInfo:
      example:
        user_public_key: user_public_key
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        user_public_key:
          type: string
      required:
      - id
      - name
      - user_public_key
      type: object
    NatsUserIssuanceEvent:
      example:
        app_user:
          identifier: identifier
          name: name
          id: id
        exp: 0
        type: null
        iat: 6
        jti: jti
      properties:
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        exp:
          format: int64
          type: integer
        iat:
          format: int64
          type: integer
        jti:
          type: string
        type:
          $ref: '#/components/schemas/NatsUserIssuanceEventType'
      required:
      - app_user
      - iat
      - jti
      - type
      type: object
    NatsUserIssuanceEventType:
      enum:
      - Import
      - Download
      type: string
    NatsUserIssuanceInfo:
      example:
        exp_max: 6
        sub: sub
        iat_max: 1
        events_count: 0
        created: 2000-01-23T04:56:07.000+00:00
        iss: iss
        name: name
        id: id
      properties:
        created:
          format: date-time
          type: string
        events_count:
          type: integer
        exp_max:
          format: int64
          type: integer
        iat_max:
          format: int64
          type: integer
        id:
          type: string
        iss:
          type: string
        name:
          type: string
        sub:
          type: string
      required:
      - created
      - events_count
      - iat_max
      - id
      - iss
      - name
      - sub
      type: object
    NatsUserIssuanceViewResponse:
      example:
        exp_max: 1
        nats:
          issuer_account: issuer_account
        sub: sub
        iat_max: 5
        created: 2000-01-23T04:56:07.000+00:00
        checksum: checksum
        iss: iss
        name: name
        id: id
        events:
        - app_user:
            identifier: identifier
            name: name
            id: id
          exp: 0
          type: null
          iat: 6
          jti: jti
        - app_user:
            identifier: identifier
            name: name
            id: id
          exp: 0
          type: null
          iat: 6
          jti: jti
      properties:
        checksum:
          type: string
        created:
          format: date-time
          type: string
        events:
          items:
            $ref: '#/components/schemas/NatsUserIssuanceEvent'
          type: array
        exp_max:
          format: int64
          type: integer
        iat_max:
          format: int64
          type: integer
        id:
          type: string
        iss:
          type: string
        name:
          type: string
        nats:
          $ref: '#/components/schemas/User'
        sub:
          type: string
      required:
      - checksum
      - created
      - events
      - iat_max
      - id
      - iss
      - name
      - nats
      - sub
      type: object
    NatsUserIssuancesListResponse:
      example:
        items:
        - exp_max: 6
          sub: sub
          iat_max: 1
          events_count: 0
          created: 2000-01-23T04:56:07.000+00:00
          iss: iss
          name: name
          id: id
        - exp_max: 6
          sub: sub
          iat_max: 1
          events_count: 0
          created: 2000-01-23T04:56:07.000+00:00
          iss: iss
          name: name
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/NatsUserIssuanceInfo'
          type: array
      required:
      - items
      type: object
    NatsUserJwtSettings:
      allOf:
      - $ref: '#/components/schemas/jwtGenericFieldsEditable'
      - $ref: '#/components/schemas/UserPermissionLimits'
      description: filter jwt.User to editable fields only
      type: object
    NatsUserListResponse:
      example:
        items:
        - sk_group_id: sk_group_id
          user_public_key: user_public_key
          created: 2000-01-23T04:56:07.000+00:00
          jwt: jwt
          team:
            name: name
            id: id
          revoked: true
          jwt_expires_at_max: 0
          system:
            agent_type: agent_type
            jetstream_enabled: true
            is_tenant: true
            name: name
            server_urls: server_urls
            user_jwt_expires_in_secs: 4
            id: id
            state: null
            jetstream_domain: jetstream_domain
            jetstream_tiers:
            - jetstream_tiers
            - jetstream_tiers
          jwt_settings: null
          claims:
            nats:
              issuer_account: issuer_account
          name: name
          jwt_expires_in_secs: 6
          id: id
          account:
            account_public_key: account_public_key
            name: name
            user_jwt_expires_in_secs: 0
            id: id
            is_scp_account: true
            is_system_account: true
        - sk_group_id: sk_group_id
          user_public_key: user_public_key
          created: 2000-01-23T04:56:07.000+00:00
          jwt: jwt
          team:
            name: name
            id: id
          revoked: true
          jwt_expires_at_max: 0
          system:
            agent_type: agent_type
            jetstream_enabled: true
            is_tenant: true
            name: name
            server_urls: server_urls
            user_jwt_expires_in_secs: 4
            id: id
            state: null
            jetstream_domain: jetstream_domain
            jetstream_tiers:
            - jetstream_tiers
            - jetstream_tiers
          jwt_settings: null
          claims:
            nats:
              issuer_account: issuer_account
          name: name
          jwt_expires_in_secs: 6
          id: id
          account:
            account_public_key: account_public_key
            name: name
            user_jwt_expires_in_secs: 0
            id: id
            is_scp_account: true
            is_system_account: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/NatsUserViewResponse'
          type: array
      required:
      - items
      type: object
    NatsUserUpdateRequest:
      example:
        jwt_settings: null
        name: name
        jwt_expires_in_secs: 0
        revoked: true
      properties:
        jwt_expires_in_secs:
          format: int64
          type: integer
        jwt_settings:
          $ref: '#/components/schemas/NatsUserJwtSettings'
        name:
          type: string
        revoked:
          type: boolean
      type: object
    NatsUserViewResponse:
      example:
        sk_group_id: sk_group_id
        user_public_key: user_public_key
        created: 2000-01-23T04:56:07.000+00:00
        jwt: jwt
        team:
          name: name
          id: id
        revoked: true
        jwt_expires_at_max: 0
        system:
          agent_type: agent_type
          jetstream_enabled: true
          is_tenant: true
          name: name
          server_urls: server_urls
          user_jwt_expires_in_secs: 4
          id: id
          state: null
          jetstream_domain: jetstream_domain
          jetstream_tiers:
          - jetstream_tiers
          - jetstream_tiers
        jwt_settings: null
        claims:
          nats:
            issuer_account: issuer_account
        name: name
        jwt_expires_in_secs: 6
        id: id
        account:
          account_public_key: account_public_key
          name: name
          user_jwt_expires_in_secs: 0
          id: id
          is_scp_account: true
          is_system_account: true
      properties:
        account:
          $ref: '#/components/schemas/AccountInfo'
        claims:
          $ref: '#/components/schemas/UserClaims'
        created:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        jwt_expires_at_max:
          format: int64
          type: integer
        jwt_expires_in_secs:
          format: int64
          type: integer
        jwt_settings:
          $ref: '#/components/schemas/NatsUserJwtSettings'
        name:
          type: string
        revoked:
          type: boolean
        sk_group_id:
          type: string
        system:
          $ref: '#/components/schemas/SystemInfo'
        team:
          $ref: '#/components/schemas/TeamInfo'
        user_public_key:
          type: string
      required:
      - account
      - claims
      - created
      - id
      - jwt
      - jwt_expires_at_max
      - jwt_expires_in_secs
      - jwt_settings
      - name
      - revoked
      - system
      - team
      - user_public_key
      type: object
    ObjectStoreConfig:
      description: ObjectStoreConfig is the config for the object store.
      properties:
        bucket:
          type: string
        description:
          type: string
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          description: |-
            Bucket-specific metadata
            NOTE: Metadata requires nats-server v2.10.0+
          type: object
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        storage:
          $ref: '#/components/schemas/StorageType'
      required:
      - bucket
      type: object
    Operator:
      allOf:
      - $ref: '#/components/schemas/GenericFields'
      description: Operator specific claims
      example:
        system_account: system_account
        signing_keys:
        - signing_keys
        - signing_keys
        strict_signing_key_usage: true
        operator_service_urls:
        - operator_service_urls
        - operator_service_urls
        assert_server_version: assert_server_version
        account_server_url: account_server_url
      properties:
        account_server_url:
          description: |-
            AccountServerURL is a partial URL like "https://host.domain.org:<port>/jwt/v1"
            tools will use the prefix and build queries by appending /accounts/<account_id>
            or /operator to the path provided. Note this assumes that the account server
            can handle requests in a account-server compatible way. See
            https://github.com/nats-io/account-server.
          type: string
        assert_server_version:
          description: Min Server version
          type: string
        operator_service_urls:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
        signing_keys:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
        strict_signing_key_usage:
          description: Signing of subordinate objects will require signing keys
          type: boolean
        system_account:
          description: Identity of the system account
          type: string
      type: object
    OperatorClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: OperatorClaims define the data for an operator JWT
      example:
        nats:
          system_account: system_account
          signing_keys:
          - signing_keys
          - signing_keys
          strict_signing_key_usage: true
          operator_service_urls:
          - operator_service_urls
          - operator_service_urls
          assert_server_version: assert_server_version
          account_server_url: account_server_url
      properties:
        nats:
          $ref: '#/components/schemas/Operator'
      type: object
    OperatorLimits:
      allOf:
      - $ref: '#/components/schemas/NatsLimits'
      - $ref: '#/components/schemas/AccountLimits'
      - $ref: '#/components/schemas/JetStreamLimits'
      description: OperatorLimits are used to limit access by an account
      example:
        tiered_limits:
          key:
            max_ack_pending: 5
            mem_max_stream_bytes: 5
            disk_max_stream_bytes: 6
            disk_storage: 1
            max_bytes_required: true
            streams: 7
            mem_storage: 2
            consumer: 0
      properties:
        tiered_limits:
          additionalProperties:
            $ref: '#/components/schemas/JetStreamLimits'
          type: object
      type: object
    PeerInfo:
      description: |-
        PeerInfo shows information about all the peers in the cluster that
        are supporting the stream or consumer.
      properties:
        active:
          format: int64
          type: integer
        current:
          type: boolean
        lag:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        name:
          type: string
        offline:
          type: boolean
      required:
      - active
      - current
      - name
      type: object
    Permission:
      description: Permission defines allow/deny subjects
      example:
        allow:
        - allow
        - allow
        deny:
        - deny
        - deny
      properties:
        allow:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
        deny:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
      type: object
    Permissions:
      description: "Permissions are used to restrict subject access, either on a user\
        \ or for everyone on a server by default"
      example:
        sub:
          allow:
          - allow
          - allow
          deny:
          - deny
          - deny
        resp: null
        pub:
          allow:
          - allow
          - allow
          deny:
          - deny
          - deny
      properties:
        pub:
          $ref: '#/components/schemas/Permission'
        resp:
          $ref: '#/components/schemas/Permissions_resp'
        sub:
          $ref: '#/components/schemas/Permission'
      type: object
    Placement:
      description: Placement describes stream placement requirements for a stream
      example:
        cluster: cluster
        tags:
        - tags
        - tags
      properties:
        cluster:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - cluster
      type: object
    PolicyListResponse:
      example:
        items:
        - name: name
          description: description
          statements:
            key:
              resource:
              - resource
              - resource
              service: service
              effect:
              - null
              - null
              name: name
              action:
              - action
              - action
              operation_id: operation_id
        - name: name
          description: description
          statements:
            key:
              resource:
              - resource
              - resource
              service: service
              effect:
              - null
              - null
              name: name
              action:
              - action
              - action
              operation_id: operation_id
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppPolicy'
          type: array
      required:
      - items
      type: object
    PromSampleValue:
      example:
        value: 1.4658129805029452
        timestamp: 6
      properties:
        timestamp:
          format: int64
          type: integer
        value:
          format: double
          type: number
      required:
      - timestamp
      - value
      type: object
    RePublish:
      description: RePublish allows a source subject to be mapped to a destination
        subject for republishing.
      example:
        src: src
        headers_only: true
        dest: dest
      properties:
        dest:
          type: string
        headers_only:
          type: boolean
        src:
          type: string
      required:
      - dest
      type: object
    RenamingSubject:
      $ref: '#/components/schemas/Subject'
    ReplayPolicy:
      enum:
      - instant
      - original
      type: string
    ResponsePermission:
      description: |-
        ResponsePermission can be used to allow responses to any reply subject
        that is received on a valid subscription.
      properties:
        max:
          type: integer
        ttl:
          format: int64
          type: integer
      required:
      - max
      - ttl
      type: object
    ResponseType:
      description: ResponseType is used to store an export response type
      enum:
      - Singleton
      - Stream
      - Chunked
      type: string
    RetentionPolicy:
      enum:
      - limits
      - interest
      - workqueue
      type: string
    RevocationList:
      additionalProperties:
        format: int64
        type: integer
      description: RevocationList is used to store a mapping of public keys to unix
        timestamps
      type: object
    RoleListResponse:
      example:
        items:
        - scope: null
          name: name
          policies:
          - policies
          - policies
          description: description
          id: id
          sort_order: 0.8008281904610115
          enabled: true
        - scope: null
          name: name
          policies:
          - policies
          - policies
          description: description
          id: id
          sort_order: 0.8008281904610115
          enabled: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppRole'
          type: array
      required:
      - items
      type: object
    RouteStat:
      description: RouteStat holds route statistics.
      properties:
        name:
          type: string
        pending:
          type: integer
        received:
          $ref: '#/components/schemas/DataStats'
        rid:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        sent:
          $ref: '#/components/schemas/DataStats'
      required:
      - pending
      - received
      - rid
      - sent
      type: object
    S2Compression:
      enum:
      - s2
      type: string
    SamplingRate:
      maximum: 100
      minimum: 0
      type: integer
    SequenceInfo:
      description: SequenceInfo is the consumer and stream sequence that uniquely
        identify a message
      example:
        consumer_seq: 2147483647
        last_active: last_active
        stream_seq: 2147483647
      properties:
        consumer_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        last_active:
          nullable: true
          type: string
        stream_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
      required:
      - consumer_seq
      - stream_seq
      type: object
    ServerInfo:
      description: ServerInfo identifies remote servers.
      example:
        cluster: cluster
        ver: ver
        domain: domain
        host: host
        name: name
        id: id
        time: 2000-01-23T04:56:07.000+00:00
        jetstream: true
        seq: 2147483647
        tags:
        - tags
        - tags
      properties:
        cluster:
          type: string
        domain:
          type: string
        host:
          type: string
        id:
          type: string
        jetstream:
          type: boolean
        name:
          type: string
        seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
        time:
          format: date-time
          type: string
        ver:
          type: string
      required:
      - host
      - id
      - jetstream
      - name
      - seq
      - time
      - ver
      type: object
    ServerStats:
      description: ServerStats hold various statistics that we will periodically send
        out.
      example:
        gateways:
        - null
        - null
        subscriptions: 870642708
        start: 2000-01-23T04:56:07.000+00:00
        cpu: 5.637376656633329
        received:
          msgs: 9
          bytes: 7
        jetstream: null
        sent:
          msgs: 9
          bytes: 7
        routes:
        - null
        - null
        total_connections: 2147483647
        cores: 5
        mem: 2
        active_accounts: 0
        slow_consumers: 3
        active_servers: 6
        connections: 1
      properties:
        active_accounts:
          type: integer
        active_servers:
          type: integer
        connections:
          type: integer
        cores:
          type: integer
        cpu:
          format: double
          type: number
        gateways:
          items:
            $ref: '#/components/schemas/ServerStats_gateways_inner'
          type: array
        jetstream:
          $ref: '#/components/schemas/ServerStats_jetstream'
        mem:
          format: int64
          type: integer
        received:
          $ref: '#/components/schemas/DataStats'
        routes:
          items:
            $ref: '#/components/schemas/ServerStats_routes_inner'
          type: array
        sent:
          $ref: '#/components/schemas/DataStats'
        slow_consumers:
          format: int64
          type: integer
        start:
          format: date-time
          type: string
        subscriptions:
          maximum: 4294967295
          minimum: 0
          type: integer
        total_connections:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
      required:
      - active_accounts
      - connections
      - cores
      - cpu
      - mem
      - received
      - sent
      - slow_consumers
      - start
      - subscriptions
      - total_connections
      type: object
    ServerStatsMsg:
      description: ServerStatsMsg is sent periodically with stats updates.
      example:
        server:
          cluster: cluster
          ver: ver
          domain: domain
          host: host
          name: name
          id: id
          time: 2000-01-23T04:56:07.000+00:00
          jetstream: true
          seq: 2147483647
          tags:
          - tags
          - tags
        statsz:
          gateways:
          - null
          - null
          subscriptions: 870642708
          start: 2000-01-23T04:56:07.000+00:00
          cpu: 5.637376656633329
          received:
            msgs: 9
            bytes: 7
          jetstream: null
          sent:
            msgs: 9
            bytes: 7
          routes:
          - null
          - null
          total_connections: 2147483647
          cores: 5
          mem: 2
          active_accounts: 0
          slow_consumers: 3
          active_servers: 6
          connections: 1
      properties:
        server:
          $ref: '#/components/schemas/ServerInfo'
        statsz:
          $ref: '#/components/schemas/ServerStats'
      required:
      - server
      - statsz
      type: object
    ServiceLatency:
      description: |-
        ServiceLatency is used when observing and exported service for
        latency measurements.
        Sampling 1-100, represents sampling rate, defaults to 100.
        Results is the subject where the latency metrics are published.
        A metric will be defined by the nats-server's ServiceLatency. Time durations
        are in nanoseconds.
        see https://github.com/nats-io/nats-server/blob/main/server/accounts.go#L524
        e.g.
        {
         "app": "dlc22",
         "start": "2019-09-16T21:46:23.636869585-07:00",
         "svc": 219732,
         "nats": {
           "req": 320415,
           "resp": 228268,
           "sys": 0
         },
         "total": 768415
        }
      properties:
        results:
          description: Subject is a string that represents a NATS subject
          type: string
        sampling:
          maximum: 100
          minimum: 0
          type: integer
      required:
      - results
      - sampling
      type: object
    SigningKeyGroupCopyRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    SigningKeyGroupCreateRequest:
      example:
        seed: seed
        scope:
          bearer_token: true
          allowed_connection_types:
          - allowed_connection_types
          - allowed_connection_types
        name: name
      properties:
        name:
          type: string
        scope:
          $ref: '#/components/schemas/UserPermissionLimits'
        seed:
          type: string
      required:
      - name
      type: object
    SigningKeyGroupListResponse:
      example:
        items:
        - created: 2000-01-23T04:56:07.000+00:00
          disabled_at: 2000-01-23T04:56:07.000+00:00
          scope:
            bearer_token: true
            allowed_connection_types:
            - allowed_connection_types
            - allowed_connection_types
          is_scoped: true
          name: name
          disabled: true
          id: id
        - created: 2000-01-23T04:56:07.000+00:00
          disabled_at: 2000-01-23T04:56:07.000+00:00
          scope:
            bearer_token: true
            allowed_connection_types:
            - allowed_connection_types
            - allowed_connection_types
          is_scoped: true
          name: name
          disabled: true
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          type: array
      required:
      - items
      type: object
    SigningKeyGroupUpdateRequest:
      example:
        scope:
          bearer_token: true
          allowed_connection_types:
          - allowed_connection_types
          - allowed_connection_types
        name: name
        disabled: true
      properties:
        disabled:
          type: boolean
        name:
          type: string
        scope:
          $ref: '#/components/schemas/UserPermissionLimits'
      type: object
    SigningKeyGroupViewResponse:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        disabled_at: 2000-01-23T04:56:07.000+00:00
        scope:
          bearer_token: true
          allowed_connection_types:
          - allowed_connection_types
          - allowed_connection_types
        is_scoped: true
        name: name
        disabled: true
        id: id
      properties:
        created:
          format: date-time
          type: string
        disabled:
          type: boolean
        disabled_at:
          format: date-time
          type: string
        id:
          type: string
        is_scoped:
          type: boolean
        name:
          type: string
        scope:
          $ref: '#/components/schemas/UserPermissionLimits'
      required:
      - created
      - disabled
      - id
      - is_scoped
      - name
      type: object
    SigningKeyListResponse:
      example:
        items:
        - public_key: public_key
          current: true
          group_id: group_id
          created: 2000-01-23T04:56:07.000+00:00
          disabled_at: 2000-01-23T04:56:07.000+00:00
          rotated: true
          disabled: true
          id: id
          rotated_at: 2000-01-23T04:56:07.000+00:00
        - public_key: public_key
          current: true
          group_id: group_id
          created: 2000-01-23T04:56:07.000+00:00
          disabled_at: 2000-01-23T04:56:07.000+00:00
          rotated: true
          disabled: true
          id: id
          rotated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            $ref: '#/components/schemas/SigningKeyViewResponse'
          type: array
      required:
      - items
      type: object
    SigningKeyUpdateRequest:
      example:
        seed: seed
        disabled: true
      properties:
        disabled:
          type: boolean
        seed:
          type: string
      required:
      - disabled
      type: object
    SigningKeyViewResponse:
      example:
        public_key: public_key
        current: true
        group_id: group_id
        created: 2000-01-23T04:56:07.000+00:00
        disabled_at: 2000-01-23T04:56:07.000+00:00
        rotated: true
        disabled: true
        id: id
        rotated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          format: date-time
          type: string
        current:
          type: boolean
        disabled:
          type: boolean
        disabled_at:
          format: date-time
          type: string
        group_id:
          type: string
        id:
          type: string
        public_key:
          type: string
        rotated:
          type: boolean
        rotated_at:
          format: date-time
          type: string
      required:
      - created
      - current
      - disabled
      - group_id
      - id
      - public_key
      - rotated
      type: object
    SigningKeys:
      description: SigningKeys is a map keyed by a public account key
      items:
        type: string
      type: array
    StorageType:
      enum:
      - file
      - memory
      type: string
    StreamAlternate:
      properties:
        cluster:
          type: string
        domain:
          type: string
        name:
          type: string
      required:
      - cluster
      - name
      type: object
    StreamExportCreateRequest:
      example:
        stream_name: stream_name
        is_public: true
      properties:
        is_public:
          type: boolean
        stream_name:
          type: string
      required:
      - is_public
      - stream_name
      type: object
    StreamExportListResponse:
      example:
        items:
        - account_id: account_id
          stream_name: stream_name
          created: 2000-01-23T04:56:07.000+00:00
          js_subject_prefix: js_subject_prefix
          is_public: true
          deliver_subject_prefix: deliver_subject_prefix
          id: id
        - account_id: account_id
          stream_name: stream_name
          created: 2000-01-23T04:56:07.000+00:00
          js_subject_prefix: js_subject_prefix
          is_public: true
          deliver_subject_prefix: deliver_subject_prefix
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamExportViewResponse'
          type: array
      required:
      - items
      type: object
    StreamExportSharedListResponse:
      example:
        items:
        - remote_account_nkey_public: remote_account_nkey_public
          stream_name: stream_name
          js_subject_prefix: js_subject_prefix
          is_public: true
          deliver_subject_prefix: deliver_subject_prefix
        - remote_account_nkey_public: remote_account_nkey_public
          stream_name: stream_name
          js_subject_prefix: js_subject_prefix
          is_public: true
          deliver_subject_prefix: deliver_subject_prefix
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamExportSharedViewResponse'
          type: array
      required:
      - items
      type: object
    StreamExportSharedViewResponse:
      example:
        remote_account_nkey_public: remote_account_nkey_public
        stream_name: stream_name
        js_subject_prefix: js_subject_prefix
        is_public: true
        deliver_subject_prefix: deliver_subject_prefix
      properties:
        deliver_subject_prefix:
          type: string
        is_public:
          type: boolean
        js_subject_prefix:
          type: string
        remote_account_nkey_public:
          type: string
        stream_name:
          type: string
      required:
      - deliver_subject_prefix
      - is_public
      - js_subject_prefix
      - remote_account_nkey_public
      - stream_name
      type: object
    StreamExportViewResponse:
      example:
        account_id: account_id
        stream_name: stream_name
        created: 2000-01-23T04:56:07.000+00:00
        js_subject_prefix: js_subject_prefix
        is_public: true
        deliver_subject_prefix: deliver_subject_prefix
        id: id
      properties:
        account_id:
          type: string
        created:
          format: date-time
          type: string
        deliver_subject_prefix:
          type: string
        id:
          type: string
        is_public:
          type: boolean
        js_subject_prefix:
          type: string
        stream_name:
          type: string
      required:
      - account_id
      - created
      - deliver_subject_prefix
      - id
      - is_public
      - js_subject_prefix
      - stream_name
      type: object
    StreamImportCreateRequest:
      example:
        remote_account_nkey_public: remote_account_nkey_public
        stream_name: stream_name
        js_subject_prefix: js_subject_prefix
        is_public: true
        deliver_subject_prefix: deliver_subject_prefix
      properties:
        deliver_subject_prefix:
          type: string
        is_public:
          type: boolean
        js_subject_prefix:
          type: string
        remote_account_nkey_public:
          type: string
        stream_name:
          type: string
      required:
      - deliver_subject_prefix
      - is_public
      - js_subject_prefix
      - remote_account_nkey_public
      - stream_name
      type: object
    StreamImportListResponse:
      example:
        items:
        - remote_account_nkey_public: remote_account_nkey_public
          account_id: account_id
          deliver_subject: deliver_subject
          stream_name: stream_name
          created: 2000-01-23T04:56:07.000+00:00
          js_subject_prefix: js_subject_prefix
          id: id
        - remote_account_nkey_public: remote_account_nkey_public
          account_id: account_id
          deliver_subject: deliver_subject
          stream_name: stream_name
          created: 2000-01-23T04:56:07.000+00:00
          js_subject_prefix: js_subject_prefix
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamImportViewResponse'
          type: array
      required:
      - items
      type: object
    StreamImportViewResponse:
      example:
        remote_account_nkey_public: remote_account_nkey_public
        account_id: account_id
        deliver_subject: deliver_subject
        stream_name: stream_name
        created: 2000-01-23T04:56:07.000+00:00
        js_subject_prefix: js_subject_prefix
        id: id
      properties:
        account_id:
          type: string
        created:
          format: date-time
          type: string
        deliver_subject:
          type: string
        id:
          type: string
        js_subject_prefix:
          type: string
        remote_account_nkey_public:
          type: string
        stream_name:
          type: string
      required:
      - account_id
      - created
      - deliver_subject
      - id
      - js_subject_prefix
      - remote_account_nkey_public
      - stream_name
      type: object
    StreamShareCreateRequest:
      example:
        target_account_nkey_public: target_account_nkey_public
      properties:
        target_account_nkey_public:
          type: string
      required:
      - target_account_nkey_public
      type: object
    StreamShareListResponse:
      example:
        items:
        - target_account_nkey_public: target_account_nkey_public
        - target_account_nkey_public: target_account_nkey_public
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamShareViewResponse'
          type: array
      required:
      - items
      type: object
    StreamShareViewResponse:
      example:
        target_account_nkey_public: target_account_nkey_public
      properties:
        target_account_nkey_public:
          type: string
      required:
      - target_account_nkey_public
      type: object
    StreamSource:
      description: StreamSource dictates how streams can source from other streams.
      example:
        opt_start_time: opt_start_time
        external: null
        opt_start_seq: 2147483647
        name: name
        filter_subject: filter_subject
        subject_transforms:
        - src: src
          dest: dest
        - src: src
          dest: dest
      properties:
        external:
          $ref: '#/components/schemas/StreamSource_external'
        filter_subject:
          type: string
        name:
          type: string
        opt_start_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        opt_start_time:
          nullable: true
          type: string
        subject_transforms:
          items:
            $ref: '#/components/schemas/SubjectTransformConfig'
          type: array
      required:
      - name
      type: object
    StreamSourceInfo:
      description: StreamSourceInfo shows information about an upstream stream source.
      example:
        external: null
        lag: 2147483647
        name: name
        active: 0
        subject_transform_dest: subject_transform_dest
        error: null
        filter_subject: filter_subject
        subject_transforms:
        - src: src
          dest: dest
        - src: src
          dest: dest
      properties:
        active:
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/StreamSourceInfo_error'
        external:
          $ref: '#/components/schemas/StreamSource_external'
        filter_subject:
          type: string
        lag:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        name:
          type: string
        subject_transform_dest:
          type: string
        subject_transforms:
          items:
            $ref: '#/components/schemas/SubjectTransformConfig'
          type: array
      required:
      - active
      - lag
      - name
      type: object
    StreamState:
      properties:
        bytes:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        consumer_count:
          type: integer
        deleted:
          items:
            maximum: 18446744073709551615
            minimum: 0
            type: integer
          type: array
        first_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        first_ts:
          format: date-time
          type: string
        last_seq:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        last_ts:
          format: date-time
          type: string
        lost:
          $ref: '#/components/schemas/StreamState_lost'
        messages:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        num_deleted:
          type: integer
        num_subjects:
          type: integer
        subjects:
          additionalProperties:
            maximum: 18446744073709551615
            minimum: 0
            type: integer
          type: object
      required:
      - bytes
      - consumer_count
      - first_seq
      - first_ts
      - last_seq
      - last_ts
      - messages
      type: object
    StringList:
      description: StringList is a wrapper for an array of strings
      items:
        type: string
      nullable: true
      type: array
    SubDetail:
      description: SubDetail is for verbose information for subscriptions.
      properties:
        account:
          type: string
        cid:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
        max:
          format: int64
          type: integer
        msgs:
          format: int64
          type: integer
        qgroup:
          type: string
        sid:
          type: string
        subject:
          type: string
      required:
      - cid
      - msgs
      - sid
      - subject
      type: object
    Subject:
      description: Subject is a string that represents a NATS subject
      type: string
    SubjectExportChartTypes:
      enum:
      - ServiceLatency
      - SystemLatency
      - TotalLatency
      - Throughput
      - ErrorRate
      type: string
    SubjectExportCreateRequest:
      example:
        jwt_settings:
          revocations:
            key: 1
          account_token_position: 0
          subject: subject
          name: name
          response_type: null
          token_req: true
          type: null
          service_latency: "{}"
          advertise: true
          response_threshold: 6
        metrics_sampling_percentage: 0
        metrics_enabled: true
      properties:
        jwt_settings:
          $ref: '#/components/schemas/Export'
        metrics_enabled:
          type: boolean
        metrics_sampling_percentage:
          format: int64
          type: integer
      required:
      - jwt_settings
      - metrics_enabled
      - metrics_sampling_percentage
      type: object
    SubjectExportListResponse:
      example:
        items:
        - share_sk_public: share_sk_public
          stream_export_id: stream_export_id
          created: 2000-01-23T04:56:07.000+00:00
          subject: subject
          jwt_settings:
            revocations:
              key: 1
            account_token_position: 0
            subject: subject
            name: name
            response_type: null
            token_req: true
            type: null
            service_latency: "{}"
            advertise: true
            response_threshold: 6
          is_public: true
          name: name
          id: id
          metrics_sampling_percentage: 5
          metrics_enabled: true
          account:
            account_public_key: account_public_key
            name: name
            user_jwt_expires_in_secs: 0
            id: id
            is_scp_account: true
            is_system_account: true
        - share_sk_public: share_sk_public
          stream_export_id: stream_export_id
          created: 2000-01-23T04:56:07.000+00:00
          subject: subject
          jwt_settings:
            revocations:
              key: 1
            account_token_position: 0
            subject: subject
            name: name
            response_type: null
            token_req: true
            type: null
            service_latency: "{}"
            advertise: true
            response_threshold: 6
          is_public: true
          name: name
          id: id
          metrics_sampling_percentage: 5
          metrics_enabled: true
          account:
            account_public_key: account_public_key
            name: name
            user_jwt_expires_in_secs: 0
            id: id
            is_scp_account: true
            is_system_account: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectExportViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectExportSharedListResponse:
      example:
        items:
        - jwt_settings:
            local_subject: local_subject
            subject: subject
            name: name
            share: true
            to: to
            type: null
            account: account
            token: token
          export_id: export_id
        - jwt_settings:
            local_subject: local_subject
            subject: subject
            name: name
            share: true
            to: to
            type: null
            account: account
            token: token
          export_id: export_id
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectExportSharedViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectExportSharedViewResponse:
      example:
        jwt_settings:
          local_subject: local_subject
          subject: subject
          name: name
          share: true
          to: to
          type: null
          account: account
          token: token
        export_id: export_id
      properties:
        export_id:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/Import'
      required:
      - export_id
      - jwt_settings
      type: object
    SubjectExportUpdateRequest:
      example:
        jwt_settings:
          revocations:
            key: 1
          account_token_position: 0
          subject: subject
          name: name
          response_type: null
          token_req: true
          type: null
          service_latency: "{}"
          advertise: true
          response_threshold: 6
        metrics_sampling_percentage: 0
        metrics_enabled: true
      properties:
        jwt_settings:
          $ref: '#/components/schemas/Export'
        metrics_enabled:
          type: boolean
        metrics_sampling_percentage:
          format: int64
          type: integer
      type: object
    SubjectExportViewResponse:
      example:
        share_sk_public: share_sk_public
        stream_export_id: stream_export_id
        created: 2000-01-23T04:56:07.000+00:00
        subject: subject
        jwt_settings:
          revocations:
            key: 1
          account_token_position: 0
          subject: subject
          name: name
          response_type: null
          token_req: true
          type: null
          service_latency: "{}"
          advertise: true
          response_threshold: 6
        is_public: true
        name: name
        id: id
        metrics_sampling_percentage: 5
        metrics_enabled: true
        account:
          account_public_key: account_public_key
          name: name
          user_jwt_expires_in_secs: 0
          id: id
          is_scp_account: true
          is_system_account: true
      properties:
        account:
          $ref: '#/components/schemas/AccountInfo'
        created:
          format: date-time
          type: string
        id:
          type: string
        is_public:
          type: boolean
        jwt_settings:
          $ref: '#/components/schemas/Export'
        metrics_enabled:
          type: boolean
        metrics_sampling_percentage:
          format: int64
          type: integer
        name:
          nullable: true
          type: string
        share_sk_public:
          nullable: true
          type: string
        stream_export_id:
          nullable: true
          type: string
        subject:
          type: string
      required:
      - account
      - created
      - id
      - is_public
      - jwt_settings
      - metrics_enabled
      - metrics_sampling_percentage
      - name
      - share_sk_public
      - stream_export_id
      - subject
      type: object
    SubjectImportCreateRequest:
      example:
        jwt_settings:
          local_subject: local_subject
          subject: subject
          name: name
          share: true
          to: to
          type: null
          account: account
          token: token
      properties:
        jwt_settings:
          $ref: '#/components/schemas/Import'
      required:
      - jwt_settings
      type: object
    SubjectImportListResponse:
      example:
        items:
        - remote_account_nkey_public: remote_account_nkey_public
          remote_subject: remote_subject
          created: 2000-01-23T04:56:07.000+00:00
          jwt_settings:
            local_subject: local_subject
            subject: subject
            name: name
            share: true
            to: to
            type: null
            account: account
            token: token
          name: name
          id: id
        - remote_account_nkey_public: remote_account_nkey_public
          remote_subject: remote_subject
          created: 2000-01-23T04:56:07.000+00:00
          jwt_settings:
            local_subject: local_subject
            subject: subject
            name: name
            share: true
            to: to
            type: null
            account: account
            token: token
          name: name
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectImportViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectImportUpdateRequest:
      example:
        jwt_settings:
          local_subject: local_subject
          subject: subject
          name: name
          share: true
          to: to
          type: null
          account: account
          token: token
      properties:
        jwt_settings:
          $ref: '#/components/schemas/Import'
      type: object
    SubjectImportViewResponse:
      example:
        remote_account_nkey_public: remote_account_nkey_public
        remote_subject: remote_subject
        created: 2000-01-23T04:56:07.000+00:00
        jwt_settings:
          local_subject: local_subject
          subject: subject
          name: name
          share: true
          to: to
          type: null
          account: account
          token: token
        name: name
        id: id
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/Import'
        name:
          type: string
        remote_account_nkey_public:
          type: string
        remote_subject:
          type: string
      required:
      - created
      - id
      - jwt_settings
      - name
      - remote_account_nkey_public
      - remote_subject
      type: object
    SubjectShareCreateRequest:
      example:
        target_account_nkey_public: target_account_nkey_public
      properties:
        target_account_nkey_public:
          type: string
      required:
      - target_account_nkey_public
      type: object
    SubjectShareListResponse:
      example:
        items:
        - subject_export_id: subject_export_id
          created: 2000-01-23T04:56:07.000+00:00
          jwt: jwt
          id: id
          target_account_nkey_public: target_account_nkey_public
          jwt_claims:
            nats:
              kind: null
              subject: subject
              issuer_account: issuer_account
        - subject_export_id: subject_export_id
          created: 2000-01-23T04:56:07.000+00:00
          jwt: jwt
          id: id
          target_account_nkey_public: target_account_nkey_public
          jwt_claims:
            nats:
              kind: null
              subject: subject
              issuer_account: issuer_account
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectShareViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectShareViewResponse:
      example:
        subject_export_id: subject_export_id
        created: 2000-01-23T04:56:07.000+00:00
        jwt: jwt
        id: id
        target_account_nkey_public: target_account_nkey_public
        jwt_claims:
          nats:
            kind: null
            subject: subject
            issuer_account: issuer_account
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        jwt_claims:
          $ref: '#/components/schemas/ActivationClaims'
        subject_export_id:
          type: string
        target_account_nkey_public:
          type: string
      required:
      - created
      - id
      - jwt
      - jwt_claims
      - subject_export_id
      - target_account_nkey_public
      type: object
    SubjectTransformConfig:
      description: |-
        SubjectTransformConfig is for applying a subject transform (to matching messages) before doing anything else
        when a new message is received
      example:
        src: src
        dest: dest
      properties:
        dest:
          type: string
        src:
          type: string
      required:
      - dest
      - src
      type: object
    SystemAccountImportRequest:
      example:
        seed: seed
        jwt: jwt
        signing_keys:
        - signing_keys
        - signing_keys
      properties:
        jwt:
          type: string
        seed:
          type: string
        signing_keys:
          items:
            type: string
          type: array
      required:
      - jwt
      - seed
      type: object
    SystemConnectionsListResponse:
      example:
        items:
        - total: 5
          offset: 1
          now: 2000-01-23T04:56:07.000+00:00
          limit: 0
          num_connections: 6
          server_id: server_id
          connections:
          - null
          - null
        - total: 5
          offset: 1
          now: 2000-01-23T04:56:07.000+00:00
          limit: 0
          num_connections: 6
          server_id: server_id
          connections:
          - null
          - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connz'
          type: array
      required:
      - items
      type: object
    SystemCreateRequest:
      example:
        jetstream_enabled: true
        name: name
        team_id: team_id
        jetstream_domain: jetstream_domain
        url: url
      properties:
        jetstream_domain:
          nullable: true
          type: string
        jetstream_enabled:
          default: true
          type: boolean
        name:
          type: string
        team_id:
          type: string
        url:
          nullable: true
          type: string
      required:
      - name
      - team_id
      type: object
    SystemImportRequest:
      example:
        jetstream_enabled: true
        system_jwt: system_jwt
        operator_jwt: operator_jwt
        system_key: system_key
        team_id: team_id
        jetstream_domain: jetstream_domain
        operator_key: operator_key
      properties:
        jetstream_domain:
          nullable: true
          type: string
        jetstream_enabled:
          default: true
          type: boolean
        operator_jwt:
          type: string
        operator_key:
          type: string
        system_jwt:
          type: string
        system_key:
          type: string
        team_id:
          type: string
      required:
      - operator_jwt
      - operator_key
      - system_jwt
      - system_key
      - team_id
      type: object
    SystemInfo:
      example:
        agent_type: agent_type
        jetstream_enabled: true
        is_tenant: true
        name: name
        server_urls: server_urls
        user_jwt_expires_in_secs: 4
        id: id
        state: null
        jetstream_domain: jetstream_domain
        jetstream_tiers:
        - jetstream_tiers
        - jetstream_tiers
      properties:
        agent_type:
          type: string
        id:
          type: string
        is_tenant:
          type: boolean
        jetstream_domain:
          nullable: true
          type: string
        jetstream_enabled:
          type: boolean
        jetstream_tiers:
          items:
            type: string
          type: array
        name:
          type: string
        server_urls:
          type: string
        state:
          $ref: '#/components/schemas/SystemState'
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - agent_type
      - id
      - is_tenant
      - jetstream_enabled
      - name
      - state
      - user_jwt_expires_in_secs
      type: object
    SystemLimitsResponse:
      example:
        total:
          num_accounts: 0
          resource_limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
        available:
          num_accounts: 0
          resource_limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
        allocated:
          num_accounts: 0
          resource_limits:
            tiered_limits:
              key:
                max_ack_pending: 5
                mem_max_stream_bytes: 5
                disk_max_stream_bytes: 6
                disk_storage: 1
                max_bytes_required: true
                streams: 7
                mem_storage: 2
                consumer: 0
      properties:
        allocated:
          $ref: '#/components/schemas/TenantLimits'
        available:
          $ref: '#/components/schemas/TenantLimits'
        total:
          $ref: '#/components/schemas/TenantLimits'
      required:
      - allocated
      - available
      - total
      type: object
    SystemListResponse:
      example:
        items:
        - jetstream_enabled: true
          is_tenant: true
          system_account_jwt: system_account_jwt
          operator_jwt: operator_jwt
          user_jwt_expires_in_secs: 0
          operator_claims:
            nats:
              system_account: system_account
              signing_keys:
              - signing_keys
              - signing_keys
              strict_signing_key_usage: true
              operator_service_urls:
              - operator_service_urls
              - operator_service_urls
              assert_server_version: assert_server_version
              account_server_url: account_server_url
          team:
            name: name
            id: id
          has_managed_operator: true
          has_managed_system_account: true
          jetstream_tiers:
          - jetstream_tiers
          - jetstream_tiers
          agent_type: agent_type
          host_system_id: host_system_id
          name: name
          id: id
          state: null
          jetstream_domain: jetstream_domain
        - jetstream_enabled: true
          is_tenant: true
          system_account_jwt: system_account_jwt
          operator_jwt: operator_jwt
          user_jwt_expires_in_secs: 0
          operator_claims:
            nats:
              system_account: system_account
              signing_keys:
              - signing_keys
              - signing_keys
              strict_signing_key_usage: true
              operator_service_urls:
              - operator_service_urls
              - operator_service_urls
              assert_server_version: assert_server_version
              account_server_url: account_server_url
          team:
            name: name
            id: id
          has_managed_operator: true
          has_managed_system_account: true
          jetstream_tiers:
          - jetstream_tiers
          - jetstream_tiers
          agent_type: agent_type
          host_system_id: host_system_id
          name: name
          id: id
          state: null
          jetstream_domain: jetstream_domain
      properties:
        items:
          items:
            $ref: '#/components/schemas/SystemViewResponse'
          type: array
      required:
      - items
      type: object
    SystemState:
      enum:
      - Provisioning
      - Connected
      - Disconnected
      type: string
    SystemUpdateRequest:
      example:
        jetstream_enabled: true
        name: name
        jetstream_domain: jetstream_domain
        url: url
      properties:
        jetstream_domain:
          nullable: true
          type: string
        jetstream_enabled:
          type: boolean
        name:
          type: string
        url:
          nullable: true
          type: string
      type: object
    SystemUserImportRequest:
      example:
        credential: credential
        seed: seed
        jwt: jwt
      properties:
        credential:
          type: string
        jwt:
          type: string
        seed:
          type: string
      type: object
    SystemViewResponse:
      example:
        jetstream_enabled: true
        is_tenant: true
        system_account_jwt: system_account_jwt
        operator_jwt: operator_jwt
        user_jwt_expires_in_secs: 0
        operator_claims:
          nats:
            system_account: system_account
            signing_keys:
            - signing_keys
            - signing_keys
            strict_signing_key_usage: true
            operator_service_urls:
            - operator_service_urls
            - operator_service_urls
            assert_server_version: assert_server_version
            account_server_url: account_server_url
        team:
          name: name
          id: id
        has_managed_operator: true
        has_managed_system_account: true
        jetstream_tiers:
        - jetstream_tiers
        - jetstream_tiers
        agent_type: agent_type
        host_system_id: host_system_id
        name: name
        id: id
        state: null
        jetstream_domain: jetstream_domain
      properties:
        agent_type:
          type: string
        has_managed_operator:
          type: boolean
        has_managed_system_account:
          type: boolean
        host_system_id:
          nullable: true
          type: string
        id:
          type: string
        is_tenant:
          type: boolean
        jetstream_domain:
          nullable: true
          type: string
        jetstream_enabled:
          type: boolean
        jetstream_tiers:
          items:
            type: string
          type: array
        name:
          type: string
        operator_claims:
          $ref: '#/components/schemas/OperatorClaims'
        operator_jwt:
          type: string
        state:
          $ref: '#/components/schemas/SystemState'
        system_account_jwt:
          type: string
        team:
          $ref: '#/components/schemas/TeamInfo'
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - agent_type
      - has_managed_operator
      - has_managed_system_account
      - id
      - is_tenant
      - jetstream_enabled
      - name
      - state
      - team
      - user_jwt_expires_in_secs
      type: object
    TLSPeerCert:
      description: TLSPeerCert contains basic information about a TLS peer certificate
      properties:
        cert_sha256:
          type: string
        spki_sha256:
          type: string
        subject:
          type: string
      type: object
    TagList:
      description: |-
        TagList is a unique array of lower case strings
        All tag list methods lower case the strings in the arguments
      items:
        type: string
      nullable: true
      type: array
    TeamAppUserAssociation:
      example:
        role_id: role_id
        resource_type: null
        resource_id: resource_id
      properties:
        resource_id:
          type: string
        resource_type:
          $ref: '#/components/schemas/TeamAppUserResourceType'
        role_id:
          type: string
      required:
      - resource_id
      - resource_type
      - role_id
      type: object
    TeamAppUserInfo:
      example:
        role_name: role_name
        role_id: role_id
        pending_invitation: true
        id: id
      properties:
        id:
          type: string
        pending_invitation:
          type: boolean
        role_id:
          type: string
        role_name:
          type: string
      required:
      - id
      - pending_invitation
      - role_id
      - role_name
      type: object
    TeamAppUserListResponse:
      example:
        items:
        - role_name: role_name
          app_user:
            identifier: identifier
            name: name
            id: id
          role_id: role_id
          created: 2000-01-23T04:56:07.000+00:00
          pending_invitation: true
          id: id
          team:
            name: name
            id: id
        - role_name: role_name
          app_user:
            identifier: identifier
            name: name
            id: id
          role_id: role_id
          created: 2000-01-23T04:56:07.000+00:00
          pending_invitation: true
          id: id
          team:
            name: name
            id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamAppUserViewResponse'
          type: array
      required:
      - items
      type: object
    TeamAppUserResourceType:
      enum:
      - System
      - Account
      - NatsUser
      type: string
    TeamAppUserViewResponse:
      example:
        role_name: role_name
        app_user:
          identifier: identifier
          name: name
          id: id
        role_id: role_id
        created: 2000-01-23T04:56:07.000+00:00
        pending_invitation: true
        id: id
        team:
          name: name
          id: id
      properties:
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        created:
          format: date-time
          type: string
        id:
          type: string
        pending_invitation:
          type: boolean
        role_id:
          type: string
        role_name:
          type: string
        team:
          $ref: '#/components/schemas/TeamInfo'
      required:
      - app_user
      - created
      - id
      - pending_invitation
      - role_id
      - role_name
      - team
      type: object
    TeamCreateRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    TeamInfo:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    TeamLimits:
      example:
        num_users: 0
      properties:
        num_users:
          type: integer
      required:
      - num_users
      type: object
    TeamLimitsResponse:
      example:
        total:
          num_users: 0
        available:
          num_users: 0
        allocated:
          num_users: 0
      properties:
        allocated:
          $ref: '#/components/schemas/TeamLimits'
        available:
          $ref: '#/components/schemas/TeamLimits'
        total:
          $ref: '#/components/schemas/TeamLimits'
      required:
      - allocated
      - available
      - total
      type: object
    TeamListResponse:
      example:
        items:
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          limits:
            num_users: 0
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          limits:
            num_users: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamViewResponse'
          type: array
      required:
      - items
      type: object
    TeamUpdateRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    TeamViewResponse:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        limits:
          num_users: 0
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        limits:
          $ref: '#/components/schemas/TeamLimits'
        name:
          type: string
      required:
      - created
      - id
      - name
      type: object
    TenantLimits:
      example:
        num_accounts: 0
        resource_limits:
          tiered_limits:
            key:
              max_ack_pending: 5
              mem_max_stream_bytes: 5
              disk_max_stream_bytes: 6
              disk_storage: 1
              max_bytes_required: true
              streams: 7
              mem_storage: 2
              consumer: 0
      properties:
        num_accounts:
          type: integer
        resource_limits:
          $ref: '#/components/schemas/OperatorLimits'
      required:
      - num_accounts
      - resource_limits
      type: object
    TimeRange:
      description: TimeRange is used to represent a start and end time
      properties:
        end:
          type: string
        start:
          type: string
      type: object
    UpdatableKVBucketConfig:
      example:
        max_age: 6
        mirror:
          opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        republish:
          src: src
          headers_only: true
          dest: dest
        sources:
        - opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        - opt_start_time: opt_start_time
          external: null
          opt_start_seq: 2147483647
          name: name
          filter_subject: filter_subject
          subject_transforms:
          - src: src
            dest: dest
          - src: src
            dest: dest
        num_replicas: 5
        max_value_size: 5
        description: description
        history: 20
        max_bytes: 1
        placement:
          cluster: cluster
          tags:
          - tags
          - tags
      properties:
        description:
          type: string
        history:
          maximum: 255
          minimum: 0
          type: integer
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        max_value_size:
          format: int32
          type: integer
        mirror:
          $ref: '#/components/schemas/StreamSource'
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        republish:
          $ref: '#/components/schemas/RePublish'
        sources:
          items:
            $ref: '#/components/schemas/StreamSource'
          type: array
      type: object
    UpdatableObjectBucketConfig:
      description: ObjectStoreConfig is the config for the object store.
      example:
        max_age: 0
        metadata:
          key: metadata
        num_replicas: 1
        description: description
        max_bytes: 6
        placement:
          cluster: cluster
          tags:
          - tags
          - tags
      properties:
        description:
          type: string
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          description: |-
            Bucket-specific metadata
            NOTE: Metadata requires nats-server v2.10.0+
          type: object
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/GenericFields'
      - $ref: '#/components/schemas/UserPermissionLimits'
      description: User defines the user specific data in a user JWT
      example:
        issuer_account: issuer_account
      properties:
        issuer_account:
          description: |-
            IssuerAccount stores the public key for the account the issuer represents.
            When set, the claim was issued by a signing key.
          type: string
      type: object
    UserClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: UserClaims defines a user JWT
      example:
        nats:
          issuer_account: issuer_account
      properties:
        nats:
          $ref: '#/components/schemas/User'
      type: object
    UserLimits:
      description: Src is a comma separated list of CIDR specifications
      properties:
        src:
          items:
            type: string
          nullable: true
          type: array
        times:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        times_location:
          type: string
      type: object
    UserPermissionLimits:
      allOf:
      - $ref: '#/components/schemas/Permissions'
      - $ref: '#/components/schemas/UserLimits'
      - $ref: '#/components/schemas/NatsLimits'
      example:
        bearer_token: true
        allowed_connection_types:
        - allowed_connection_types
        - allowed_connection_types
      properties:
        allowed_connection_types:
          description: StringList is a wrapper for an array of strings
          items:
            type: string
          nullable: true
          type: array
        bearer_token:
          type: boolean
      type: object
    VersionResponse:
      example:
        date: date
        commit: commit
        version: version
      properties:
        commit:
          type: string
        date:
          type: string
        version:
          type: string
      required:
      - commit
      - date
      - version
      type: object
    WeightedMapping:
      description: Mapping for publishes
      example:
        cluster: cluster
        subject: subject
        weight: 237
      properties:
        cluster:
          type: string
        subject:
          description: Subject is a string that represents a NATS subject
          type: string
        weight:
          maximum: 255
          minimum: 0
          type: integer
      required:
      - subject
      type: object
    jwtAccountClaims:
      $ref: '#/components/schemas/AccountClaims'
    jwtGenericFieldsEditable:
      description: filter jwt.#GenericFields to editable fields only
      properties:
        tags:
          description: |-
            TagList is a unique array of lower case strings
            All tag list methods lower case the strings in the arguments
          items:
            type: string
          nullable: true
          type: array
      type: object
    jwtUserClaims:
      $ref: '#/components/schemas/UserClaims'
    AccountOverviewResponse_metrics:
      example:
        JetStreamR1StorageUsed: 1.4658129805029452
        BytesReceived: 0.8008281904610115
        NumLeafNodes: 2.3021358869347655
        NumConnections: 5.637376656633329
        NumMessagesSent: 9.301444243932576
        BytesSent: 6.027456183070403
        JetStreamR3StorageUsed: 5.962133916683182
        NumMessagesReceived: 7.061401241503109
      properties:
        BytesReceived:
          format: double
          type: number
        BytesSent:
          format: double
          type: number
        JetStreamR1StorageUsed:
          format: double
          type: number
        JetStreamR3StorageUsed:
          format: double
          type: number
        NumConnections:
          format: double
          type: number
        NumLeafNodes:
          format: double
          type: number
        NumMessagesReceived:
          format: double
          type: number
        NumMessagesSent:
          format: double
          type: number
      required:
      - BytesReceived
      - BytesSent
      - JetStreamR1StorageUsed
      - JetStreamR3StorageUsed
      - NumConnections
      - NumLeafNodes
      - NumMessagesReceived
      - NumMessagesSent
      type: object
    AlertViewResponse_account:
      allOf:
      - $ref: '#/components/schemas/AccountInfo'
      nullable: true
      type: object
    AlertViewResponse_system:
      allOf:
      - $ref: '#/components/schemas/SystemInfo'
      nullable: true
      type: object
    ClusterInfo_replicas_inner:
      allOf:
      - $ref: '#/components/schemas/PeerInfo'
      nullable: true
      type: object
    ConnInfo_tls_peer_certs_inner:
      allOf:
      - $ref: '#/components/schemas/TLSPeerCert'
      nullable: true
      type: object
    Connz_connections_inner:
      allOf:
      - $ref: '#/components/schemas/ConnInfo'
      nullable: true
      type: object
    ConsumerInfo_cluster:
      allOf:
      - $ref: '#/components/schemas/ClusterInfo'
      nullable: true
      type: object
    Exports_inner:
      allOf:
      - $ref: '#/components/schemas/Export'
      nullable: true
      type: object
    Imports_inner:
      allOf:
      - $ref: '#/components/schemas/Import'
      nullable: true
      type: object
    JSCommonStreamConfig_placement:
      allOf:
      - $ref: '#/components/schemas/Placement'
      nullable: true
      type: object
    JSCommonStreamConfig_republish:
      allOf:
      - $ref: '#/components/schemas/RePublish'
      nullable: true
      type: object
    JetStreamVarz_config:
      allOf:
      - $ref: '#/components/schemas/JetStreamConfig'
      nullable: true
      type: object
    JetStreamVarz_meta:
      allOf:
      - $ref: '#/components/schemas/MetaClusterInfo'
      nullable: true
      type: object
    JetStreamVarz_stats:
      allOf:
      - $ref: '#/components/schemas/JetStreamStats'
      nullable: true
      type: object
    Permissions_resp:
      allOf:
      - $ref: '#/components/schemas/ResponsePermission'
      nullable: true
      type: object
    ServerStats_gateways_inner:
      allOf:
      - $ref: '#/components/schemas/GatewayStat'
      nullable: true
      type: object
    ServerStats_jetstream:
      allOf:
      - $ref: '#/components/schemas/JetStreamVarz'
      nullable: true
      type: object
    ServerStats_routes_inner:
      allOf:
      - $ref: '#/components/schemas/RouteStat'
      nullable: true
      type: object
    StreamSource_external:
      allOf:
      - $ref: '#/components/schemas/ExternalStream'
      nullable: true
      type: object
    StreamSourceInfo_error:
      allOf:
      - $ref: '#/components/schemas/JSApiError'
      nullable: true
      type: object
    StreamState_lost:
      allOf:
      - $ref: '#/components/schemas/LostStreamData'
      nullable: true
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: Personal Access Token
      scheme: bearer
      type: http
