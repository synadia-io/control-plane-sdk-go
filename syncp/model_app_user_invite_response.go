/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
)

// checks if the AppUserInviteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppUserInviteResponse{}

// AppUserInviteResponse struct for AppUserInviteResponse
type AppUserInviteResponse struct {
	AppUser            AppUserInfo     `json:"app_user"`
	AppUserCreated     bool            `json:"app_user_created"`
	AutoAccepted       bool            `json:"auto_accepted"`
	TeamAppUser        TeamAppUserInfo `json:"team_app_user"`
	TeamAppUserCreated bool            `json:"team_app_user_created"`
}

type _AppUserInviteResponse AppUserInviteResponse

// NewAppUserInviteResponse instantiates a new AppUserInviteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUserInviteResponse(appUser AppUserInfo, appUserCreated bool, autoAccepted bool, teamAppUser TeamAppUserInfo, teamAppUserCreated bool) *AppUserInviteResponse {
	this := AppUserInviteResponse{}
	this.AppUser = appUser
	this.AppUserCreated = appUserCreated
	this.AutoAccepted = autoAccepted
	this.TeamAppUser = teamAppUser
	this.TeamAppUserCreated = teamAppUserCreated
	return &this
}

// NewAppUserInviteResponseWithDefaults instantiates a new AppUserInviteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUserInviteResponseWithDefaults() *AppUserInviteResponse {
	this := AppUserInviteResponse{}
	return &this
}

// GetAppUser returns the AppUser field value
func (o *AppUserInviteResponse) GetAppUser() AppUserInfo {
	if o == nil {
		var ret AppUserInfo
		return ret
	}

	return o.AppUser
}

// GetAppUserOk returns a tuple with the AppUser field value
// and a boolean to check if the value has been set.
func (o *AppUserInviteResponse) GetAppUserOk() (*AppUserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUser, true
}

// SetAppUser sets field value
func (o *AppUserInviteResponse) SetAppUser(v AppUserInfo) {
	o.AppUser = v
}

// GetAppUserCreated returns the AppUserCreated field value
func (o *AppUserInviteResponse) GetAppUserCreated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AppUserCreated
}

// GetAppUserCreatedOk returns a tuple with the AppUserCreated field value
// and a boolean to check if the value has been set.
func (o *AppUserInviteResponse) GetAppUserCreatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppUserCreated, true
}

// SetAppUserCreated sets field value
func (o *AppUserInviteResponse) SetAppUserCreated(v bool) {
	o.AppUserCreated = v
}

// GetAutoAccepted returns the AutoAccepted field value
func (o *AppUserInviteResponse) GetAutoAccepted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoAccepted
}

// GetAutoAcceptedOk returns a tuple with the AutoAccepted field value
// and a boolean to check if the value has been set.
func (o *AppUserInviteResponse) GetAutoAcceptedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoAccepted, true
}

// SetAutoAccepted sets field value
func (o *AppUserInviteResponse) SetAutoAccepted(v bool) {
	o.AutoAccepted = v
}

// GetTeamAppUser returns the TeamAppUser field value
func (o *AppUserInviteResponse) GetTeamAppUser() TeamAppUserInfo {
	if o == nil {
		var ret TeamAppUserInfo
		return ret
	}

	return o.TeamAppUser
}

// GetTeamAppUserOk returns a tuple with the TeamAppUser field value
// and a boolean to check if the value has been set.
func (o *AppUserInviteResponse) GetTeamAppUserOk() (*TeamAppUserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamAppUser, true
}

// SetTeamAppUser sets field value
func (o *AppUserInviteResponse) SetTeamAppUser(v TeamAppUserInfo) {
	o.TeamAppUser = v
}

// GetTeamAppUserCreated returns the TeamAppUserCreated field value
func (o *AppUserInviteResponse) GetTeamAppUserCreated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TeamAppUserCreated
}

// GetTeamAppUserCreatedOk returns a tuple with the TeamAppUserCreated field value
// and a boolean to check if the value has been set.
func (o *AppUserInviteResponse) GetTeamAppUserCreatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamAppUserCreated, true
}

// SetTeamAppUserCreated sets field value
func (o *AppUserInviteResponse) SetTeamAppUserCreated(v bool) {
	o.TeamAppUserCreated = v
}

func (o AppUserInviteResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppUserInviteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_user"] = o.AppUser
	toSerialize["app_user_created"] = o.AppUserCreated
	toSerialize["auto_accepted"] = o.AutoAccepted
	toSerialize["team_app_user"] = o.TeamAppUser
	toSerialize["team_app_user_created"] = o.TeamAppUserCreated
	return toSerialize, nil
}

func (o *AppUserInviteResponse) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"app_user",
		"app_user_created",
		"auto_accepted",
		"team_app_user",
		"team_app_user_created",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppUserInviteResponse := _AppUserInviteResponse{}

	err = json.Unmarshal(bytes, &varAppUserInviteResponse)

	if err != nil {
		return err
	}

	*o = AppUserInviteResponse(varAppUserInviteResponse)

	return err
}

type NullableAppUserInviteResponse struct {
	value *AppUserInviteResponse
	isSet bool
}

func (v NullableAppUserInviteResponse) Get() *AppUserInviteResponse {
	return v.value
}

func (v *NullableAppUserInviteResponse) Set(val *AppUserInviteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUserInviteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUserInviteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUserInviteResponse(val *AppUserInviteResponse) *NullableAppUserInviteResponse {
	return &NullableAppUserInviteResponse{value: val, isSet: true}
}

func (v NullableAppUserInviteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUserInviteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
