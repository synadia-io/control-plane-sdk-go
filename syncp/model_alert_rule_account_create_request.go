/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
)

// checks if the AlertRuleAccountCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleAccountCreateRequest{}

// AlertRuleAccountCreateRequest struct for AlertRuleAccountCreateRequest
type AlertRuleAccountCreateRequest struct {
	DurationInSecs      int32             `json:"duration_in_secs"`
	Message             string            `json:"message"`
	Metric              string            `json:"metric"`
	Severity            AlertRuleSeverity `json:"severity"`
	ThresholdExpression NullableString    `json:"threshold_expression,omitempty"`
	ThresholdFixedValue NullableFloat32   `json:"threshold_fixed_value,omitempty"`
	ThresholdOperator   AlertRuleOperator `json:"threshold_operator"`
	ConsumerName        NullableString    `json:"consumer_name,omitempty"`
	RuleType            string            `json:"rule_type"`
	StreamName          NullableString    `json:"stream_name,omitempty"`
}

type _AlertRuleAccountCreateRequest AlertRuleAccountCreateRequest

// NewAlertRuleAccountCreateRequest instantiates a new AlertRuleAccountCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleAccountCreateRequest(durationInSecs int32, message string, metric string, severity AlertRuleSeverity, thresholdOperator AlertRuleOperator, ruleType string) *AlertRuleAccountCreateRequest {
	this := AlertRuleAccountCreateRequest{}
	this.DurationInSecs = durationInSecs
	this.Message = message
	this.Metric = metric
	this.Severity = severity
	this.ThresholdOperator = thresholdOperator
	this.RuleType = ruleType
	return &this
}

// NewAlertRuleAccountCreateRequestWithDefaults instantiates a new AlertRuleAccountCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleAccountCreateRequestWithDefaults() *AlertRuleAccountCreateRequest {
	this := AlertRuleAccountCreateRequest{}
	return &this
}

// GetDurationInSecs returns the DurationInSecs field value
func (o *AlertRuleAccountCreateRequest) GetDurationInSecs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DurationInSecs
}

// GetDurationInSecsOk returns a tuple with the DurationInSecs field value
// and a boolean to check if the value has been set.
func (o *AlertRuleAccountCreateRequest) GetDurationInSecsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationInSecs, true
}

// SetDurationInSecs sets field value
func (o *AlertRuleAccountCreateRequest) SetDurationInSecs(v int32) {
	o.DurationInSecs = v
}

// GetMessage returns the Message field value
func (o *AlertRuleAccountCreateRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AlertRuleAccountCreateRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AlertRuleAccountCreateRequest) SetMessage(v string) {
	o.Message = v
}

// GetMetric returns the Metric field value
func (o *AlertRuleAccountCreateRequest) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *AlertRuleAccountCreateRequest) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *AlertRuleAccountCreateRequest) SetMetric(v string) {
	o.Metric = v
}

// GetSeverity returns the Severity field value
func (o *AlertRuleAccountCreateRequest) GetSeverity() AlertRuleSeverity {
	if o == nil {
		var ret AlertRuleSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AlertRuleAccountCreateRequest) GetSeverityOk() (*AlertRuleSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AlertRuleAccountCreateRequest) SetSeverity(v AlertRuleSeverity) {
	o.Severity = v
}

// GetThresholdExpression returns the ThresholdExpression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertRuleAccountCreateRequest) GetThresholdExpression() string {
	if o == nil || IsNil(o.ThresholdExpression.Get()) {
		var ret string
		return ret
	}
	return *o.ThresholdExpression.Get()
}

// GetThresholdExpressionOk returns a tuple with the ThresholdExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertRuleAccountCreateRequest) GetThresholdExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThresholdExpression.Get(), o.ThresholdExpression.IsSet()
}

// HasThresholdExpression returns a boolean if a field has been set.
func (o *AlertRuleAccountCreateRequest) HasThresholdExpression() bool {
	if o != nil && o.ThresholdExpression.IsSet() {
		return true
	}

	return false
}

// SetThresholdExpression gets a reference to the given NullableString and assigns it to the ThresholdExpression field.
func (o *AlertRuleAccountCreateRequest) SetThresholdExpression(v string) {
	o.ThresholdExpression.Set(&v)
}

// SetThresholdExpressionNil sets the value for ThresholdExpression to be an explicit nil
func (o *AlertRuleAccountCreateRequest) SetThresholdExpressionNil() {
	o.ThresholdExpression.Set(nil)
}

// UnsetThresholdExpression ensures that no value is present for ThresholdExpression, not even an explicit nil
func (o *AlertRuleAccountCreateRequest) UnsetThresholdExpression() {
	o.ThresholdExpression.Unset()
}

// GetThresholdFixedValue returns the ThresholdFixedValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertRuleAccountCreateRequest) GetThresholdFixedValue() float32 {
	if o == nil || IsNil(o.ThresholdFixedValue.Get()) {
		var ret float32
		return ret
	}
	return *o.ThresholdFixedValue.Get()
}

// GetThresholdFixedValueOk returns a tuple with the ThresholdFixedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertRuleAccountCreateRequest) GetThresholdFixedValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThresholdFixedValue.Get(), o.ThresholdFixedValue.IsSet()
}

// HasThresholdFixedValue returns a boolean if a field has been set.
func (o *AlertRuleAccountCreateRequest) HasThresholdFixedValue() bool {
	if o != nil && o.ThresholdFixedValue.IsSet() {
		return true
	}

	return false
}

// SetThresholdFixedValue gets a reference to the given NullableFloat32 and assigns it to the ThresholdFixedValue field.
func (o *AlertRuleAccountCreateRequest) SetThresholdFixedValue(v float32) {
	o.ThresholdFixedValue.Set(&v)
}

// SetThresholdFixedValueNil sets the value for ThresholdFixedValue to be an explicit nil
func (o *AlertRuleAccountCreateRequest) SetThresholdFixedValueNil() {
	o.ThresholdFixedValue.Set(nil)
}

// UnsetThresholdFixedValue ensures that no value is present for ThresholdFixedValue, not even an explicit nil
func (o *AlertRuleAccountCreateRequest) UnsetThresholdFixedValue() {
	o.ThresholdFixedValue.Unset()
}

// GetThresholdOperator returns the ThresholdOperator field value
func (o *AlertRuleAccountCreateRequest) GetThresholdOperator() AlertRuleOperator {
	if o == nil {
		var ret AlertRuleOperator
		return ret
	}

	return o.ThresholdOperator
}

// GetThresholdOperatorOk returns a tuple with the ThresholdOperator field value
// and a boolean to check if the value has been set.
func (o *AlertRuleAccountCreateRequest) GetThresholdOperatorOk() (*AlertRuleOperator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThresholdOperator, true
}

// SetThresholdOperator sets field value
func (o *AlertRuleAccountCreateRequest) SetThresholdOperator(v AlertRuleOperator) {
	o.ThresholdOperator = v
}

// GetConsumerName returns the ConsumerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertRuleAccountCreateRequest) GetConsumerName() string {
	if o == nil || IsNil(o.ConsumerName.Get()) {
		var ret string
		return ret
	}
	return *o.ConsumerName.Get()
}

// GetConsumerNameOk returns a tuple with the ConsumerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertRuleAccountCreateRequest) GetConsumerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConsumerName.Get(), o.ConsumerName.IsSet()
}

// HasConsumerName returns a boolean if a field has been set.
func (o *AlertRuleAccountCreateRequest) HasConsumerName() bool {
	if o != nil && o.ConsumerName.IsSet() {
		return true
	}

	return false
}

// SetConsumerName gets a reference to the given NullableString and assigns it to the ConsumerName field.
func (o *AlertRuleAccountCreateRequest) SetConsumerName(v string) {
	o.ConsumerName.Set(&v)
}

// SetConsumerNameNil sets the value for ConsumerName to be an explicit nil
func (o *AlertRuleAccountCreateRequest) SetConsumerNameNil() {
	o.ConsumerName.Set(nil)
}

// UnsetConsumerName ensures that no value is present for ConsumerName, not even an explicit nil
func (o *AlertRuleAccountCreateRequest) UnsetConsumerName() {
	o.ConsumerName.Unset()
}

// GetRuleType returns the RuleType field value
func (o *AlertRuleAccountCreateRequest) GetRuleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value
// and a boolean to check if the value has been set.
func (o *AlertRuleAccountCreateRequest) GetRuleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleType, true
}

// SetRuleType sets field value
func (o *AlertRuleAccountCreateRequest) SetRuleType(v string) {
	o.RuleType = v
}

// GetStreamName returns the StreamName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertRuleAccountCreateRequest) GetStreamName() string {
	if o == nil || IsNil(o.StreamName.Get()) {
		var ret string
		return ret
	}
	return *o.StreamName.Get()
}

// GetStreamNameOk returns a tuple with the StreamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertRuleAccountCreateRequest) GetStreamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamName.Get(), o.StreamName.IsSet()
}

// HasStreamName returns a boolean if a field has been set.
func (o *AlertRuleAccountCreateRequest) HasStreamName() bool {
	if o != nil && o.StreamName.IsSet() {
		return true
	}

	return false
}

// SetStreamName gets a reference to the given NullableString and assigns it to the StreamName field.
func (o *AlertRuleAccountCreateRequest) SetStreamName(v string) {
	o.StreamName.Set(&v)
}

// SetStreamNameNil sets the value for StreamName to be an explicit nil
func (o *AlertRuleAccountCreateRequest) SetStreamNameNil() {
	o.StreamName.Set(nil)
}

// UnsetStreamName ensures that no value is present for StreamName, not even an explicit nil
func (o *AlertRuleAccountCreateRequest) UnsetStreamName() {
	o.StreamName.Unset()
}

func (o AlertRuleAccountCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleAccountCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration_in_secs"] = o.DurationInSecs
	toSerialize["message"] = o.Message
	toSerialize["metric"] = o.Metric
	toSerialize["severity"] = o.Severity
	if o.ThresholdExpression.IsSet() {
		toSerialize["threshold_expression"] = o.ThresholdExpression.Get()
	}
	if o.ThresholdFixedValue.IsSet() {
		toSerialize["threshold_fixed_value"] = o.ThresholdFixedValue.Get()
	}
	toSerialize["threshold_operator"] = o.ThresholdOperator
	if o.ConsumerName.IsSet() {
		toSerialize["consumer_name"] = o.ConsumerName.Get()
	}
	toSerialize["rule_type"] = o.RuleType
	if o.StreamName.IsSet() {
		toSerialize["stream_name"] = o.StreamName.Get()
	}
	return toSerialize, nil
}

func (o *AlertRuleAccountCreateRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration_in_secs",
		"message",
		"metric",
		"severity",
		"threshold_operator",
		"rule_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleAccountCreateRequest := _AlertRuleAccountCreateRequest{}

	err = json.Unmarshal(bytes, &varAlertRuleAccountCreateRequest)

	if err != nil {
		return err
	}

	*o = AlertRuleAccountCreateRequest(varAlertRuleAccountCreateRequest)

	return err
}

type NullableAlertRuleAccountCreateRequest struct {
	value *AlertRuleAccountCreateRequest
	isSet bool
}

func (v NullableAlertRuleAccountCreateRequest) Get() *AlertRuleAccountCreateRequest {
	return v.value
}

func (v *NullableAlertRuleAccountCreateRequest) Set(val *AlertRuleAccountCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleAccountCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleAccountCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleAccountCreateRequest(val *AlertRuleAccountCreateRequest) *NullableAlertRuleAccountCreateRequest {
	return &NullableAlertRuleAccountCreateRequest{value: val, isSet: true}
}

func (v NullableAlertRuleAccountCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleAccountCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
