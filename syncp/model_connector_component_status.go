/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// ConnectorComponentStatus the model 'ConnectorComponentStatus'
type ConnectorComponentStatus string

// List of ConnectorComponentStatus
const (
	CONNECTORCOMPONENTSTATUS_DEPRECATED   ConnectorComponentStatus = "deprecated"
	CONNECTORCOMPONENTSTATUS_EXPERIMENTAL ConnectorComponentStatus = "experimental"
	CONNECTORCOMPONENTSTATUS_PREVIEW      ConnectorComponentStatus = "preview"
	CONNECTORCOMPONENTSTATUS_STABLE       ConnectorComponentStatus = "stable"
)

// All allowed values of ConnectorComponentStatus enum
var AllowedConnectorComponentStatusEnumValues = []ConnectorComponentStatus{
	"deprecated",
	"experimental",
	"preview",
	"stable",
}

func (v *ConnectorComponentStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectorComponentStatus(value)
	for _, existing := range AllowedConnectorComponentStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectorComponentStatus", value)
}

// NewConnectorComponentStatusFromValue returns a pointer to a valid ConnectorComponentStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectorComponentStatusFromValue(v string) (*ConnectorComponentStatus, error) {
	ev := ConnectorComponentStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectorComponentStatus: valid values are %v", v, AllowedConnectorComponentStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectorComponentStatus) IsValid() bool {
	for _, existing := range AllowedConnectorComponentStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConnectorComponentStatus value
func (v ConnectorComponentStatus) Ptr() *ConnectorComponentStatus {
	return &v
}
