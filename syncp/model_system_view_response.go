/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"time"
)

// checks if the SystemViewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemViewResponse{}

// SystemViewResponse struct for SystemViewResponse
type SystemViewResponse struct {
	ConnectionType          SystemConnectionType            `json:"connection_type"`
	Created                 time.Time                       `json:"created"`
	DirectConnectionOpts    *SystemDirectConnectionOpts     `json:"direct_connection_opts,omitempty"`
	HasManagedOperator      bool                            `json:"has_managed_operator"`
	HasManagedSystemAccount bool                            `json:"has_managed_system_account"`
	HostSystemId            *string                         `json:"host_system_id,omitempty"`
	Id                      string                          `json:"id"`
	IsTenant                bool                            `json:"is_tenant"`
	JetstreamDomain         *string                         `json:"jetstream_domain,omitempty"`
	JetstreamEnabled        bool                            `json:"jetstream_enabled"`
	JetstreamTiers          []string                        `json:"jetstream_tiers,omitempty"`
	Limited                 bool                            `json:"limited"`
	LogForwardingOpts       *SystemLogForwardingOpts        `json:"log_forwarding_opts,omitempty"`
	ManagedBy               *SystemManagedBy                `json:"managed_by,omitempty"`
	MaxNodes                *int64                          `json:"max_nodes,omitempty"`
	Name                    string                          `json:"name"`
	NatsAlertingConfig      *NatsAlertingConfig             `json:"nats_alerting_config,omitempty"`
	OperatorClaims          *OperatorClaims                 `json:"operator_claims,omitempty"`
	OperatorJwt             *string                         `json:"operator_jwt,omitempty"`
	PlatformComponents      *PlatformComponentsViewResponse `json:"platform_components,omitempty"`
	State                   SystemState                     `json:"state"`
	SystemAccountJwt        *string                         `json:"system_account_jwt,omitempty"`
	Team                    TeamInfo                        `json:"team"`
	UpdatesAvailable        map[string]Update               `json:"updates_available"`
	UserJwtExpiresInSecs    int64                           `json:"user_jwt_expires_in_secs"`
}

func (o SystemViewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connection_type"] = o.ConnectionType
	toSerialize["created"] = o.Created
	if o.DirectConnectionOpts != nil {
		toSerialize["direct_connection_opts"] = o.DirectConnectionOpts
	}
	toSerialize["has_managed_operator"] = o.HasManagedOperator
	toSerialize["has_managed_system_account"] = o.HasManagedSystemAccount
	if o.HostSystemId != nil {
		toSerialize["host_system_id"] = o.HostSystemId
	}
	toSerialize["id"] = o.Id
	toSerialize["is_tenant"] = o.IsTenant
	if o.JetstreamDomain != nil {
		toSerialize["jetstream_domain"] = o.JetstreamDomain
	}
	toSerialize["jetstream_enabled"] = o.JetstreamEnabled
	if len(o.JetstreamTiers) != 0 {
		toSerialize["jetstream_tiers"] = o.JetstreamTiers
	}
	toSerialize["limited"] = o.Limited
	if o.LogForwardingOpts != nil {
		toSerialize["log_forwarding_opts"] = o.LogForwardingOpts
	}
	if o.ManagedBy != nil {
		toSerialize["managed_by"] = o.ManagedBy
	}
	if o.MaxNodes != nil {
		toSerialize["max_nodes"] = o.MaxNodes
	}
	toSerialize["name"] = o.Name
	if o.NatsAlertingConfig != nil {
		toSerialize["nats_alerting_config"] = o.NatsAlertingConfig
	}
	if o.OperatorClaims != nil {
		toSerialize["operator_claims"] = o.OperatorClaims
	}
	if o.OperatorJwt != nil {
		toSerialize["operator_jwt"] = o.OperatorJwt
	}
	if o.PlatformComponents != nil {
		toSerialize["platform_components"] = o.PlatformComponents
	}
	toSerialize["state"] = o.State
	if o.SystemAccountJwt != nil {
		toSerialize["system_account_jwt"] = o.SystemAccountJwt
	}
	toSerialize["team"] = o.Team
	toSerialize["updates_available"] = o.UpdatesAvailable
	toSerialize["user_jwt_expires_in_secs"] = o.UserJwtExpiresInSecs
	return toSerialize, nil
}
