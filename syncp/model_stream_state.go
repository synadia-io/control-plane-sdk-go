/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"time"
)

// checks if the StreamState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamState{}

// StreamState struct for StreamState
type StreamState struct {
	Bytes         uint64                    `json:"bytes"`
	ConsumerCount int64                     `json:"consumer_count"`
	Deleted       []uint64                  `json:"deleted,omitempty"`
	FirstSeq      uint64                    `json:"first_seq"`
	FirstTs       time.Time                 `json:"first_ts"`
	LastSeq       uint64                    `json:"last_seq"`
	LastTs        time.Time                 `json:"last_ts"`
	Lost          *Nullable[LostStreamData] `json:"lost,omitempty"`
	Messages      uint64                    `json:"messages"`
	NumDeleted    *int64                    `json:"num_deleted,omitempty"`
	NumSubjects   *int64                    `json:"num_subjects,omitempty"`
	Subjects      map[string]uint64         `json:"subjects,omitempty"`
}

func (o StreamState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bytes"] = o.Bytes
	toSerialize["consumer_count"] = o.ConsumerCount
	if len(o.Deleted) != 0 {
		toSerialize["deleted"] = o.Deleted
	}
	toSerialize["first_seq"] = o.FirstSeq
	toSerialize["first_ts"] = o.FirstTs
	toSerialize["last_seq"] = o.LastSeq
	toSerialize["last_ts"] = o.LastTs
	if o.Lost != nil && !o.Lost.IsNull() {
		toSerialize["lost"] = o.Lost.Val
	}
	toSerialize["messages"] = o.Messages
	if o.NumDeleted != nil {
		toSerialize["num_deleted"] = o.NumDeleted
	}
	if o.NumSubjects != nil {
		toSerialize["num_subjects"] = o.NumSubjects
	}
	if len(o.Subjects) != 0 {
		toSerialize["subjects"] = o.Subjects
	}
	return toSerialize, nil
}
