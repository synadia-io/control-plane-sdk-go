/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// ServiceAccountResourceScope the model 'ServiceAccountResourceScope'
type ServiceAccountResourceScope string

// List of ServiceAccountResourceScope
const (
	SERVICEACCOUNTRESOURCESCOPE_TEAM      ServiceAccountResourceScope = "Team"
	SERVICEACCOUNTRESOURCESCOPE_SYSTEM    ServiceAccountResourceScope = "System"
	SERVICEACCOUNTRESOURCESCOPE_ACCOUNT   ServiceAccountResourceScope = "Account"
	SERVICEACCOUNTRESOURCESCOPE_NATS_USER ServiceAccountResourceScope = "NatsUser"
)

// All allowed values of ServiceAccountResourceScope enum
var AllowedServiceAccountResourceScopeEnumValues = []ServiceAccountResourceScope{
	"Team",
	"System",
	"Account",
	"NatsUser",
}

func (v *ServiceAccountResourceScope) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceAccountResourceScope(value)
	for _, existing := range AllowedServiceAccountResourceScopeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceAccountResourceScope", value)
}

// NewServiceAccountResourceScopeFromValue returns a pointer to a valid ServiceAccountResourceScope
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceAccountResourceScopeFromValue(v string) (*ServiceAccountResourceScope, error) {
	ev := ServiceAccountResourceScope(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceAccountResourceScope: valid values are %v", v, AllowedServiceAccountResourceScopeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceAccountResourceScope) IsValid() bool {
	for _, existing := range AllowedServiceAccountResourceScopeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceAccountResourceScope value
func (v ServiceAccountResourceScope) Ptr() *ServiceAccountResourceScope {
	return &v
}
