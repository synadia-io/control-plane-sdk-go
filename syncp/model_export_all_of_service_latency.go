/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
)

// checks if the ExportAllOfServiceLatency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportAllOfServiceLatency{}

// ExportAllOfServiceLatency struct for ExportAllOfServiceLatency
type ExportAllOfServiceLatency struct {
	// Subject is a string that represents a NATS subject
	Results  string                 `json:"results"`
	Sampling map[string]interface{} `json:"sampling"`
}

type _ExportAllOfServiceLatency ExportAllOfServiceLatency

// NewExportAllOfServiceLatency instantiates a new ExportAllOfServiceLatency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportAllOfServiceLatency(results string, sampling map[string]interface{}) *ExportAllOfServiceLatency {
	this := ExportAllOfServiceLatency{}
	this.Results = results
	this.Sampling = sampling
	return &this
}

// NewExportAllOfServiceLatencyWithDefaults instantiates a new ExportAllOfServiceLatency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportAllOfServiceLatencyWithDefaults() *ExportAllOfServiceLatency {
	this := ExportAllOfServiceLatency{}
	return &this
}

// GetResults returns the Results field value
func (o *ExportAllOfServiceLatency) GetResults() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *ExportAllOfServiceLatency) GetResultsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *ExportAllOfServiceLatency) SetResults(v string) {
	o.Results = v
}

// GetSampling returns the Sampling field value
func (o *ExportAllOfServiceLatency) GetSampling() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Sampling
}

// GetSamplingOk returns a tuple with the Sampling field value
// and a boolean to check if the value has been set.
func (o *ExportAllOfServiceLatency) GetSamplingOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Sampling, true
}

// SetSampling sets field value
func (o *ExportAllOfServiceLatency) SetSampling(v map[string]interface{}) {
	o.Sampling = v
}

func (o ExportAllOfServiceLatency) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportAllOfServiceLatency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["sampling"] = o.Sampling
	return toSerialize, nil
}

func (o *ExportAllOfServiceLatency) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"sampling",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExportAllOfServiceLatency := _ExportAllOfServiceLatency{}

	err = json.Unmarshal(bytes, &varExportAllOfServiceLatency)

	if err != nil {
		return err
	}

	*o = ExportAllOfServiceLatency(varExportAllOfServiceLatency)

	return err
}

type NullableExportAllOfServiceLatency struct {
	value *ExportAllOfServiceLatency
	isSet bool
}

func (v NullableExportAllOfServiceLatency) Get() *ExportAllOfServiceLatency {
	return v.value
}

func (v *NullableExportAllOfServiceLatency) Set(val *ExportAllOfServiceLatency) {
	v.value = val
	v.isSet = true
}

func (v NullableExportAllOfServiceLatency) IsSet() bool {
	return v.isSet
}

func (v *NullableExportAllOfServiceLatency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportAllOfServiceLatency(val *ExportAllOfServiceLatency) *NullableExportAllOfServiceLatency {
	return &NullableExportAllOfServiceLatency{value: val, isSet: true}
}

func (v NullableExportAllOfServiceLatency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportAllOfServiceLatency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
