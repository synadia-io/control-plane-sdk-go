/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"time"
)

// checks if the SigningKeyViewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SigningKeyViewResponse{}

// SigningKeyViewResponse struct for SigningKeyViewResponse
type SigningKeyViewResponse struct {
	Created    time.Time  `json:"created"`
	Current    bool       `json:"current"`
	Disabled   bool       `json:"disabled"`
	DisabledAt *time.Time `json:"disabled_at,omitempty"`
	GroupId    string     `json:"group_id"`
	Id         string     `json:"id"`
	PublicKey  string     `json:"public_key"`
	Rotated    bool       `json:"rotated"`
	RotatedAt  *time.Time `json:"rotated_at,omitempty"`
}

// NewSigningKeyViewResponse instantiates a new SigningKeyViewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSigningKeyViewResponse(created time.Time, current bool, disabled bool, groupId string, id string, publicKey string, rotated bool) *SigningKeyViewResponse {
	this := SigningKeyViewResponse{}
	this.Created = created
	this.Current = current
	this.Disabled = disabled
	this.GroupId = groupId
	this.Id = id
	this.PublicKey = publicKey
	this.Rotated = rotated
	return &this
}

// NewSigningKeyViewResponseWithDefaults instantiates a new SigningKeyViewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSigningKeyViewResponseWithDefaults() *SigningKeyViewResponse {
	this := SigningKeyViewResponse{}
	return &this
}

// GetCreated returns the Created field value
func (o *SigningKeyViewResponse) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *SigningKeyViewResponse) SetCreated(v time.Time) {
	o.Created = v
}

// GetCurrent returns the Current field value
func (o *SigningKeyViewResponse) GetCurrent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetCurrentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Current, true
}

// SetCurrent sets field value
func (o *SigningKeyViewResponse) SetCurrent(v bool) {
	o.Current = v
}

// GetDisabled returns the Disabled field value
func (o *SigningKeyViewResponse) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *SigningKeyViewResponse) SetDisabled(v bool) {
	o.Disabled = v
}

// GetDisabledAt returns the DisabledAt field value if set, zero value otherwise.
func (o *SigningKeyViewResponse) GetDisabledAt() time.Time {
	if o == nil || IsNil(o.DisabledAt) {
		var ret time.Time
		return ret
	}
	return *o.DisabledAt
}

// GetDisabledAtOk returns a tuple with the DisabledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetDisabledAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DisabledAt) {
		return nil, false
	}
	return o.DisabledAt, true
}

// HasDisabledAt returns a boolean if a field has been set.
func (o *SigningKeyViewResponse) HasDisabledAt() bool {
	if o != nil && !IsNil(o.DisabledAt) {
		return true
	}

	return false
}

// SetDisabledAt gets a reference to the given time.Time and assigns it to the DisabledAt field.
func (o *SigningKeyViewResponse) SetDisabledAt(v time.Time) {
	o.DisabledAt = &v
}

// GetGroupId returns the GroupId field value
func (o *SigningKeyViewResponse) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *SigningKeyViewResponse) SetGroupId(v string) {
	o.GroupId = v
}

// GetId returns the Id field value
func (o *SigningKeyViewResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SigningKeyViewResponse) SetId(v string) {
	o.Id = v
}

// GetPublicKey returns the PublicKey field value
func (o *SigningKeyViewResponse) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *SigningKeyViewResponse) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetRotated returns the Rotated field value
func (o *SigningKeyViewResponse) GetRotated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Rotated
}

// GetRotatedOk returns a tuple with the Rotated field value
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetRotatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rotated, true
}

// SetRotated sets field value
func (o *SigningKeyViewResponse) SetRotated(v bool) {
	o.Rotated = v
}

// GetRotatedAt returns the RotatedAt field value if set, zero value otherwise.
func (o *SigningKeyViewResponse) GetRotatedAt() time.Time {
	if o == nil || IsNil(o.RotatedAt) {
		var ret time.Time
		return ret
	}
	return *o.RotatedAt
}

// GetRotatedAtOk returns a tuple with the RotatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigningKeyViewResponse) GetRotatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RotatedAt) {
		return nil, false
	}
	return o.RotatedAt, true
}

// HasRotatedAt returns a boolean if a field has been set.
func (o *SigningKeyViewResponse) HasRotatedAt() bool {
	if o != nil && !IsNil(o.RotatedAt) {
		return true
	}

	return false
}

// SetRotatedAt gets a reference to the given time.Time and assigns it to the RotatedAt field.
func (o *SigningKeyViewResponse) SetRotatedAt(v time.Time) {
	o.RotatedAt = &v
}

func (o SigningKeyViewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SigningKeyViewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["current"] = o.Current
	toSerialize["disabled"] = o.Disabled
	if !IsNil(o.DisabledAt) {
		toSerialize["disabled_at"] = o.DisabledAt
	}
	toSerialize["group_id"] = o.GroupId
	toSerialize["id"] = o.Id
	toSerialize["public_key"] = o.PublicKey
	toSerialize["rotated"] = o.Rotated
	if !IsNil(o.RotatedAt) {
		toSerialize["rotated_at"] = o.RotatedAt
	}
	return toSerialize, nil
}

type NullableSigningKeyViewResponse struct {
	value *SigningKeyViewResponse
	isSet bool
}

func (v NullableSigningKeyViewResponse) Get() *SigningKeyViewResponse {
	return v.value
}

func (v *NullableSigningKeyViewResponse) Set(val *SigningKeyViewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSigningKeyViewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSigningKeyViewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSigningKeyViewResponse(val *SigningKeyViewResponse) *NullableSigningKeyViewResponse {
	return &NullableSigningKeyViewResponse{value: val, isSet: true}
}

func (v NullableSigningKeyViewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSigningKeyViewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
