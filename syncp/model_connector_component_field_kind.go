/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// ConnectorComponentFieldKind the model 'ConnectorComponentFieldKind'
type ConnectorComponentFieldKind string

// List of ConnectorComponentFieldKind
const (
	CONNECTORCOMPONENTFIELDKIND_SCALAR ConnectorComponentFieldKind = "scalar"
	CONNECTORCOMPONENTFIELDKIND_MAP    ConnectorComponentFieldKind = "map"
	CONNECTORCOMPONENTFIELDKIND_LIST   ConnectorComponentFieldKind = "list"
)

// All allowed values of ConnectorComponentFieldKind enum
var AllowedConnectorComponentFieldKindEnumValues = []ConnectorComponentFieldKind{
	"scalar",
	"map",
	"list",
}

func (v *ConnectorComponentFieldKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectorComponentFieldKind(value)
	for _, existing := range AllowedConnectorComponentFieldKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectorComponentFieldKind", value)
}

// NewConnectorComponentFieldKindFromValue returns a pointer to a valid ConnectorComponentFieldKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectorComponentFieldKindFromValue(v string) (*ConnectorComponentFieldKind, error) {
	ev := ConnectorComponentFieldKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectorComponentFieldKind: valid values are %v", v, AllowedConnectorComponentFieldKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectorComponentFieldKind) IsValid() bool {
	for _, existing := range AllowedConnectorComponentFieldKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConnectorComponentFieldKind value
func (v ConnectorComponentFieldKind) Ptr() *ConnectorComponentFieldKind {
	return &v
}
