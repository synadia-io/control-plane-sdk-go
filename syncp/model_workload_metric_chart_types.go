/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// WorkloadMetricChartTypes the model 'WorkloadMetricChartTypes'
type WorkloadMetricChartTypes string

// List of WorkloadMetricChartTypes
const (
	WORKLOADMETRICCHARTTYPES_WORKLOADS_DENO_ISOLATE_CONNECTED_TRIGGERS_BY_NAMESPACE      WorkloadMetricChartTypes = "WorkloadsDenoIsolateConnectedTriggersByNamespace"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_DENO_ISOLATE_RUNNING_WORKLOADS_BY_NAMESPACE       WorkloadMetricChartTypes = "WorkloadsDenoIsolateRunningWorkloadsByNamespace"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_DENO_ISOLATE_INVOCATION_COUNT_BY_WORKLOAD         WorkloadMetricChartTypes = "WorkloadsDenoIsolateInvocationCountByWorkload"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_DENO_ISOLATE_EXECUTION_TIME_BY_WORKLOAD           WorkloadMetricChartTypes = "WorkloadsDenoIsolateExecutionTimeByWorkload"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_DENO_ISOLATE_EXECUTION_TIME_BY_WORKLOAD_HISTOGRAM WorkloadMetricChartTypes = "WorkloadsDenoIsolateExecutionTimeByWorkloadHistogram"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_BLOCK_INPUT_TOTAL                WorkloadMetricChartTypes = "WorkloadsPodmanContainerBlockInputTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_BLOCK_OUTPUT_TOTAL               WorkloadMetricChartTypes = "WorkloadsPodmanContainerBlockOutputTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_CPU_SECONDS_TOTAL                WorkloadMetricChartTypes = "WorkloadsPodmanContainerCpuSecondsTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_CPU_SYSTEM_SECONDS_TOTAL         WorkloadMetricChartTypes = "WorkloadsPodmanContainerCpuSystemSecondsTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_CREATED_SECONDS                  WorkloadMetricChartTypes = "WorkloadsPodmanContainerCreatedSeconds"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_EXIT_CODE                        WorkloadMetricChartTypes = "WorkloadsPodmanContainerExitCode"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_EXITED_SECONDS                   WorkloadMetricChartTypes = "WorkloadsPodmanContainerExitedSeconds"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_HEALTH                           WorkloadMetricChartTypes = "WorkloadsPodmanContainerHealth"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_INFO                             WorkloadMetricChartTypes = "WorkloadsPodmanContainerInfo"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_MEM_LIMIT_BYTES                  WorkloadMetricChartTypes = "WorkloadsPodmanContainerMemLimitBytes"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_MEM_USAGE_BYTES                  WorkloadMetricChartTypes = "WorkloadsPodmanContainerMemUsageBytes"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_INPUT_DROPPED_TOTAL          WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetInputDroppedTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_INPUT_ERRORS_TOTAL           WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetInputErrorsTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_INPUT_PACKETS_TOTAL          WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetInputPacketsTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_INPUT_TOTAL                  WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetInputTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_OUTPUT_DROPPED_TOTAL         WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetOutputDroppedTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_OUTPUT_ERRORS_TOTAL          WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetOutputErrorsTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_OUTPUT_PACKETS_TOTAL         WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetOutputPacketsTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_NET_OUTPUT_TOTAL                 WorkloadMetricChartTypes = "WorkloadsPodmanContainerNetOutputTotal"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_PIDS                             WorkloadMetricChartTypes = "WorkloadsPodmanContainerPids"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_ROOTFS_SIZE_BYTES                WorkloadMetricChartTypes = "WorkloadsPodmanContainerRootfsSizeBytes"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_RW_SIZE_BYTES                    WorkloadMetricChartTypes = "WorkloadsPodmanContainerRwSizeBytes"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_STARTED_SECONDS                  WorkloadMetricChartTypes = "WorkloadsPodmanContainerStartedSeconds"
	WORKLOADMETRICCHARTTYPES_WORKLOADS_PODMAN_CONTAINER_STATE                            WorkloadMetricChartTypes = "WorkloadsPodmanContainerState"
)

// All allowed values of WorkloadMetricChartTypes enum
var AllowedWorkloadMetricChartTypesEnumValues = []WorkloadMetricChartTypes{
	"WorkloadsDenoIsolateConnectedTriggersByNamespace",
	"WorkloadsDenoIsolateRunningWorkloadsByNamespace",
	"WorkloadsDenoIsolateInvocationCountByWorkload",
	"WorkloadsDenoIsolateExecutionTimeByWorkload",
	"WorkloadsDenoIsolateExecutionTimeByWorkloadHistogram",
	"WorkloadsPodmanContainerBlockInputTotal",
	"WorkloadsPodmanContainerBlockOutputTotal",
	"WorkloadsPodmanContainerCpuSecondsTotal",
	"WorkloadsPodmanContainerCpuSystemSecondsTotal",
	"WorkloadsPodmanContainerCreatedSeconds",
	"WorkloadsPodmanContainerExitCode",
	"WorkloadsPodmanContainerExitedSeconds",
	"WorkloadsPodmanContainerHealth",
	"WorkloadsPodmanContainerInfo",
	"WorkloadsPodmanContainerMemLimitBytes",
	"WorkloadsPodmanContainerMemUsageBytes",
	"WorkloadsPodmanContainerNetInputDroppedTotal",
	"WorkloadsPodmanContainerNetInputErrorsTotal",
	"WorkloadsPodmanContainerNetInputPacketsTotal",
	"WorkloadsPodmanContainerNetInputTotal",
	"WorkloadsPodmanContainerNetOutputDroppedTotal",
	"WorkloadsPodmanContainerNetOutputErrorsTotal",
	"WorkloadsPodmanContainerNetOutputPacketsTotal",
	"WorkloadsPodmanContainerNetOutputTotal",
	"WorkloadsPodmanContainerPids",
	"WorkloadsPodmanContainerRootfsSizeBytes",
	"WorkloadsPodmanContainerRwSizeBytes",
	"WorkloadsPodmanContainerStartedSeconds",
	"WorkloadsPodmanContainerState",
}

func (v *WorkloadMetricChartTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkloadMetricChartTypes(value)
	for _, existing := range AllowedWorkloadMetricChartTypesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkloadMetricChartTypes", value)
}

// NewWorkloadMetricChartTypesFromValue returns a pointer to a valid WorkloadMetricChartTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkloadMetricChartTypesFromValue(v string) (*WorkloadMetricChartTypes, error) {
	ev := WorkloadMetricChartTypes(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkloadMetricChartTypes: valid values are %v", v, AllowedWorkloadMetricChartTypesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkloadMetricChartTypes) IsValid() bool {
	for _, existing := range AllowedWorkloadMetricChartTypesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkloadMetricChartTypes value
func (v WorkloadMetricChartTypes) Ptr() *WorkloadMetricChartTypes {
	return &v
}
