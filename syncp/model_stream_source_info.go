/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

// checks if the StreamSourceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamSourceInfo{}

// StreamSourceInfo StreamSourceInfo shows information about an upstream stream source.
type StreamSourceInfo struct {
	Active               int64                     `json:"active"`
	Error                *Nullable[JSApiError]     `json:"error,omitempty"`
	External             *Nullable[ExternalStream] `json:"external,omitempty"`
	FilterSubject        *string                   `json:"filter_subject,omitempty"`
	Lag                  uint64                    `json:"lag"`
	Name                 string                    `json:"name"`
	SubjectTransformDest *string                   `json:"subject_transform_dest,omitempty"`
	SubjectTransforms    []SubjectTransformConfig  `json:"subject_transforms,omitempty"`
}

func (o StreamSourceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	if o.Error != nil && !o.Error.IsNull() {
		toSerialize["error"] = o.Error.Val
	}
	if o.External != nil && !o.External.IsNull() {
		toSerialize["external"] = o.External.Val
	}
	if o.FilterSubject != nil {
		toSerialize["filter_subject"] = o.FilterSubject
	}
	toSerialize["lag"] = o.Lag
	toSerialize["name"] = o.Name
	if o.SubjectTransformDest != nil {
		toSerialize["subject_transform_dest"] = o.SubjectTransformDest
	}
	if len(o.SubjectTransforms) != 0 {
		toSerialize["subject_transforms"] = o.SubjectTransforms
	}
	return toSerialize, nil
}
