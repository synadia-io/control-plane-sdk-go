/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the StreamExportSharedViewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamExportSharedViewResponse{}

// StreamExportSharedViewResponse struct for StreamExportSharedViewResponse
type StreamExportSharedViewResponse struct {
	DeliverSubjectPrefix    string `json:"deliver_subject_prefix"`
	IsPublic                bool   `json:"is_public"`
	JsSubjectPrefix         string `json:"js_subject_prefix"`
	RemoteAccountNkeyPublic string `json:"remote_account_nkey_public"`
	StreamName              string `json:"stream_name"`
}

// NewStreamExportSharedViewResponse instantiates a new StreamExportSharedViewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamExportSharedViewResponse(deliverSubjectPrefix string, isPublic bool, jsSubjectPrefix string, remoteAccountNkeyPublic string, streamName string) *StreamExportSharedViewResponse {
	this := StreamExportSharedViewResponse{}
	this.DeliverSubjectPrefix = deliverSubjectPrefix
	this.IsPublic = isPublic
	this.JsSubjectPrefix = jsSubjectPrefix
	this.RemoteAccountNkeyPublic = remoteAccountNkeyPublic
	this.StreamName = streamName
	return &this
}

// NewStreamExportSharedViewResponseWithDefaults instantiates a new StreamExportSharedViewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamExportSharedViewResponseWithDefaults() *StreamExportSharedViewResponse {
	this := StreamExportSharedViewResponse{}
	return &this
}

// GetDeliverSubjectPrefix returns the DeliverSubjectPrefix field value
func (o *StreamExportSharedViewResponse) GetDeliverSubjectPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeliverSubjectPrefix
}

// GetDeliverSubjectPrefixOk returns a tuple with the DeliverSubjectPrefix field value
// and a boolean to check if the value has been set.
func (o *StreamExportSharedViewResponse) GetDeliverSubjectPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliverSubjectPrefix, true
}

// SetDeliverSubjectPrefix sets field value
func (o *StreamExportSharedViewResponse) SetDeliverSubjectPrefix(v string) {
	o.DeliverSubjectPrefix = v
}

// GetIsPublic returns the IsPublic field value
func (o *StreamExportSharedViewResponse) GetIsPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *StreamExportSharedViewResponse) GetIsPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *StreamExportSharedViewResponse) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetJsSubjectPrefix returns the JsSubjectPrefix field value
func (o *StreamExportSharedViewResponse) GetJsSubjectPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsSubjectPrefix
}

// GetJsSubjectPrefixOk returns a tuple with the JsSubjectPrefix field value
// and a boolean to check if the value has been set.
func (o *StreamExportSharedViewResponse) GetJsSubjectPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsSubjectPrefix, true
}

// SetJsSubjectPrefix sets field value
func (o *StreamExportSharedViewResponse) SetJsSubjectPrefix(v string) {
	o.JsSubjectPrefix = v
}

// GetRemoteAccountNkeyPublic returns the RemoteAccountNkeyPublic field value
func (o *StreamExportSharedViewResponse) GetRemoteAccountNkeyPublic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteAccountNkeyPublic
}

// GetRemoteAccountNkeyPublicOk returns a tuple with the RemoteAccountNkeyPublic field value
// and a boolean to check if the value has been set.
func (o *StreamExportSharedViewResponse) GetRemoteAccountNkeyPublicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteAccountNkeyPublic, true
}

// SetRemoteAccountNkeyPublic sets field value
func (o *StreamExportSharedViewResponse) SetRemoteAccountNkeyPublic(v string) {
	o.RemoteAccountNkeyPublic = v
}

// GetStreamName returns the StreamName field value
func (o *StreamExportSharedViewResponse) GetStreamName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StreamName
}

// GetStreamNameOk returns a tuple with the StreamName field value
// and a boolean to check if the value has been set.
func (o *StreamExportSharedViewResponse) GetStreamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreamName, true
}

// SetStreamName sets field value
func (o *StreamExportSharedViewResponse) SetStreamName(v string) {
	o.StreamName = v
}

func (o StreamExportSharedViewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamExportSharedViewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deliver_subject_prefix"] = o.DeliverSubjectPrefix
	toSerialize["is_public"] = o.IsPublic
	toSerialize["js_subject_prefix"] = o.JsSubjectPrefix
	toSerialize["remote_account_nkey_public"] = o.RemoteAccountNkeyPublic
	toSerialize["stream_name"] = o.StreamName
	return toSerialize, nil
}

type NullableStreamExportSharedViewResponse struct {
	value *StreamExportSharedViewResponse
	isSet bool
}

func (v NullableStreamExportSharedViewResponse) Get() *StreamExportSharedViewResponse {
	return v.value
}

func (v *NullableStreamExportSharedViewResponse) Set(val *StreamExportSharedViewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamExportSharedViewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamExportSharedViewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamExportSharedViewResponse(val *StreamExportSharedViewResponse) *NullableStreamExportSharedViewResponse {
	return &NullableStreamExportSharedViewResponse{value: val, isSet: true}
}

func (v NullableStreamExportSharedViewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamExportSharedViewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
