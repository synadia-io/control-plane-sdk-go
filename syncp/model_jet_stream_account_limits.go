/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JetStreamAccountLimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JetStreamAccountLimits{}

// JetStreamAccountLimits struct for JetStreamAccountLimits
type JetStreamAccountLimits struct {
	MaxAckPending         int32 `json:"max_ack_pending"`
	MaxBytesRequired      bool  `json:"max_bytes_required"`
	MaxConsumers          int32 `json:"max_consumers"`
	MaxMemory             int64 `json:"max_memory"`
	MaxStorage            int64 `json:"max_storage"`
	MaxStreams            int32 `json:"max_streams"`
	MemoryMaxStreamBytes  int64 `json:"memory_max_stream_bytes"`
	StorageMaxStreamBytes int64 `json:"storage_max_stream_bytes"`
}

// NewJetStreamAccountLimits instantiates a new JetStreamAccountLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJetStreamAccountLimits(maxAckPending int32, maxBytesRequired bool, maxConsumers int32, maxMemory int64, maxStorage int64, maxStreams int32, memoryMaxStreamBytes int64, storageMaxStreamBytes int64) *JetStreamAccountLimits {
	this := JetStreamAccountLimits{}
	this.MaxAckPending = maxAckPending
	this.MaxBytesRequired = maxBytesRequired
	this.MaxConsumers = maxConsumers
	this.MaxMemory = maxMemory
	this.MaxStorage = maxStorage
	this.MaxStreams = maxStreams
	this.MemoryMaxStreamBytes = memoryMaxStreamBytes
	this.StorageMaxStreamBytes = storageMaxStreamBytes
	return &this
}

// NewJetStreamAccountLimitsWithDefaults instantiates a new JetStreamAccountLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJetStreamAccountLimitsWithDefaults() *JetStreamAccountLimits {
	this := JetStreamAccountLimits{}
	return &this
}

// GetMaxAckPending returns the MaxAckPending field value
func (o *JetStreamAccountLimits) GetMaxAckPending() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxAckPending
}

// GetMaxAckPendingOk returns a tuple with the MaxAckPending field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMaxAckPendingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxAckPending, true
}

// SetMaxAckPending sets field value
func (o *JetStreamAccountLimits) SetMaxAckPending(v int32) {
	o.MaxAckPending = v
}

// GetMaxBytesRequired returns the MaxBytesRequired field value
func (o *JetStreamAccountLimits) GetMaxBytesRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MaxBytesRequired
}

// GetMaxBytesRequiredOk returns a tuple with the MaxBytesRequired field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMaxBytesRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxBytesRequired, true
}

// SetMaxBytesRequired sets field value
func (o *JetStreamAccountLimits) SetMaxBytesRequired(v bool) {
	o.MaxBytesRequired = v
}

// GetMaxConsumers returns the MaxConsumers field value
func (o *JetStreamAccountLimits) GetMaxConsumers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxConsumers
}

// GetMaxConsumersOk returns a tuple with the MaxConsumers field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMaxConsumersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxConsumers, true
}

// SetMaxConsumers sets field value
func (o *JetStreamAccountLimits) SetMaxConsumers(v int32) {
	o.MaxConsumers = v
}

// GetMaxMemory returns the MaxMemory field value
func (o *JetStreamAccountLimits) GetMaxMemory() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMaxMemoryOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMemory, true
}

// SetMaxMemory sets field value
func (o *JetStreamAccountLimits) SetMaxMemory(v int64) {
	o.MaxMemory = v
}

// GetMaxStorage returns the MaxStorage field value
func (o *JetStreamAccountLimits) GetMaxStorage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMaxStorageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxStorage, true
}

// SetMaxStorage sets field value
func (o *JetStreamAccountLimits) SetMaxStorage(v int64) {
	o.MaxStorage = v
}

// GetMaxStreams returns the MaxStreams field value
func (o *JetStreamAccountLimits) GetMaxStreams() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxStreams
}

// GetMaxStreamsOk returns a tuple with the MaxStreams field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMaxStreamsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxStreams, true
}

// SetMaxStreams sets field value
func (o *JetStreamAccountLimits) SetMaxStreams(v int32) {
	o.MaxStreams = v
}

// GetMemoryMaxStreamBytes returns the MemoryMaxStreamBytes field value
func (o *JetStreamAccountLimits) GetMemoryMaxStreamBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MemoryMaxStreamBytes
}

// GetMemoryMaxStreamBytesOk returns a tuple with the MemoryMaxStreamBytes field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetMemoryMaxStreamBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryMaxStreamBytes, true
}

// SetMemoryMaxStreamBytes sets field value
func (o *JetStreamAccountLimits) SetMemoryMaxStreamBytes(v int64) {
	o.MemoryMaxStreamBytes = v
}

// GetStorageMaxStreamBytes returns the StorageMaxStreamBytes field value
func (o *JetStreamAccountLimits) GetStorageMaxStreamBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StorageMaxStreamBytes
}

// GetStorageMaxStreamBytesOk returns a tuple with the StorageMaxStreamBytes field value
// and a boolean to check if the value has been set.
func (o *JetStreamAccountLimits) GetStorageMaxStreamBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageMaxStreamBytes, true
}

// SetStorageMaxStreamBytes sets field value
func (o *JetStreamAccountLimits) SetStorageMaxStreamBytes(v int64) {
	o.StorageMaxStreamBytes = v
}

func (o JetStreamAccountLimits) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JetStreamAccountLimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_ack_pending"] = o.MaxAckPending
	toSerialize["max_bytes_required"] = o.MaxBytesRequired
	toSerialize["max_consumers"] = o.MaxConsumers
	toSerialize["max_memory"] = o.MaxMemory
	toSerialize["max_storage"] = o.MaxStorage
	toSerialize["max_streams"] = o.MaxStreams
	toSerialize["memory_max_stream_bytes"] = o.MemoryMaxStreamBytes
	toSerialize["storage_max_stream_bytes"] = o.StorageMaxStreamBytes
	return toSerialize, nil
}

type NullableJetStreamAccountLimits struct {
	value *JetStreamAccountLimits
	isSet bool
}

func (v NullableJetStreamAccountLimits) Get() *JetStreamAccountLimits {
	return v.value
}

func (v *NullableJetStreamAccountLimits) Set(val *JetStreamAccountLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableJetStreamAccountLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableJetStreamAccountLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJetStreamAccountLimits(val *JetStreamAccountLimits) *NullableJetStreamAccountLimits {
	return &NullableJetStreamAccountLimits{value: val, isSet: true}
}

func (v NullableJetStreamAccountLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJetStreamAccountLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
