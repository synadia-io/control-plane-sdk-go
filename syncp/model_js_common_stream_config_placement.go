/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JSCommonStreamConfigPlacement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JSCommonStreamConfigPlacement{}

// JSCommonStreamConfigPlacement struct for JSCommonStreamConfigPlacement
type JSCommonStreamConfigPlacement struct {
	Cluster string   `json:"cluster"`
	Tags    []string `json:"tags,omitempty"`
}

// NewJSCommonStreamConfigPlacement instantiates a new JSCommonStreamConfigPlacement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJSCommonStreamConfigPlacement(cluster string) *JSCommonStreamConfigPlacement {
	this := JSCommonStreamConfigPlacement{}
	this.Cluster = cluster
	return &this
}

// NewJSCommonStreamConfigPlacementWithDefaults instantiates a new JSCommonStreamConfigPlacement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJSCommonStreamConfigPlacementWithDefaults() *JSCommonStreamConfigPlacement {
	this := JSCommonStreamConfigPlacement{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *JSCommonStreamConfigPlacement) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *JSCommonStreamConfigPlacement) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *JSCommonStreamConfigPlacement) SetCluster(v string) {
	o.Cluster = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *JSCommonStreamConfigPlacement) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JSCommonStreamConfigPlacement) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *JSCommonStreamConfigPlacement) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *JSCommonStreamConfigPlacement) SetTags(v []string) {
	o.Tags = v
}

func (o JSCommonStreamConfigPlacement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JSCommonStreamConfigPlacement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableJSCommonStreamConfigPlacement struct {
	value *JSCommonStreamConfigPlacement
	isSet bool
}

func (v NullableJSCommonStreamConfigPlacement) Get() *JSCommonStreamConfigPlacement {
	return v.value
}

func (v *NullableJSCommonStreamConfigPlacement) Set(val *JSCommonStreamConfigPlacement) {
	v.value = val
	v.isSet = true
}

func (v NullableJSCommonStreamConfigPlacement) IsSet() bool {
	return v.isSet
}

func (v *NullableJSCommonStreamConfigPlacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJSCommonStreamConfigPlacement(val *JSCommonStreamConfigPlacement) *NullableJSCommonStreamConfigPlacement {
	return &NullableJSCommonStreamConfigPlacement{value: val, isSet: true}
}

func (v NullableJSCommonStreamConfigPlacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJSCommonStreamConfigPlacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
