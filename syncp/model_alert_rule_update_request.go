/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
)

// checks if the AlertRuleUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleUpdateRequest{}

// AlertRuleUpdateRequest struct for AlertRuleUpdateRequest
type AlertRuleUpdateRequest struct {
	DurationInSecs      int32             `json:"duration_in_secs"`
	IsEnabled           bool              `json:"is_enabled"`
	Message             string            `json:"message"`
	Metric              string            `json:"metric"`
	Severity            AlertRuleSeverity `json:"severity"`
	ThresholdExpression NullableString    `json:"threshold_expression,omitempty"`
	ThresholdFixedValue NullableFloat32   `json:"threshold_fixed_value,omitempty"`
	ThresholdOperator   AlertRuleOperator `json:"threshold_operator"`
}

type _AlertRuleUpdateRequest AlertRuleUpdateRequest

// NewAlertRuleUpdateRequest instantiates a new AlertRuleUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleUpdateRequest(durationInSecs int32, isEnabled bool, message string, metric string, severity AlertRuleSeverity, thresholdOperator AlertRuleOperator) *AlertRuleUpdateRequest {
	this := AlertRuleUpdateRequest{}
	this.DurationInSecs = durationInSecs
	this.IsEnabled = isEnabled
	this.Message = message
	this.Metric = metric
	this.Severity = severity
	this.ThresholdOperator = thresholdOperator
	return &this
}

// NewAlertRuleUpdateRequestWithDefaults instantiates a new AlertRuleUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleUpdateRequestWithDefaults() *AlertRuleUpdateRequest {
	this := AlertRuleUpdateRequest{}
	return &this
}

// GetDurationInSecs returns the DurationInSecs field value
func (o *AlertRuleUpdateRequest) GetDurationInSecs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DurationInSecs
}

// GetDurationInSecsOk returns a tuple with the DurationInSecs field value
// and a boolean to check if the value has been set.
func (o *AlertRuleUpdateRequest) GetDurationInSecsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationInSecs, true
}

// SetDurationInSecs sets field value
func (o *AlertRuleUpdateRequest) SetDurationInSecs(v int32) {
	o.DurationInSecs = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *AlertRuleUpdateRequest) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *AlertRuleUpdateRequest) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *AlertRuleUpdateRequest) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetMessage returns the Message field value
func (o *AlertRuleUpdateRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AlertRuleUpdateRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AlertRuleUpdateRequest) SetMessage(v string) {
	o.Message = v
}

// GetMetric returns the Metric field value
func (o *AlertRuleUpdateRequest) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *AlertRuleUpdateRequest) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *AlertRuleUpdateRequest) SetMetric(v string) {
	o.Metric = v
}

// GetSeverity returns the Severity field value
func (o *AlertRuleUpdateRequest) GetSeverity() AlertRuleSeverity {
	if o == nil {
		var ret AlertRuleSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AlertRuleUpdateRequest) GetSeverityOk() (*AlertRuleSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AlertRuleUpdateRequest) SetSeverity(v AlertRuleSeverity) {
	o.Severity = v
}

// GetThresholdExpression returns the ThresholdExpression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertRuleUpdateRequest) GetThresholdExpression() string {
	if o == nil || IsNil(o.ThresholdExpression.Get()) {
		var ret string
		return ret
	}
	return *o.ThresholdExpression.Get()
}

// GetThresholdExpressionOk returns a tuple with the ThresholdExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertRuleUpdateRequest) GetThresholdExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThresholdExpression.Get(), o.ThresholdExpression.IsSet()
}

// HasThresholdExpression returns a boolean if a field has been set.
func (o *AlertRuleUpdateRequest) HasThresholdExpression() bool {
	if o != nil && o.ThresholdExpression.IsSet() {
		return true
	}

	return false
}

// SetThresholdExpression gets a reference to the given NullableString and assigns it to the ThresholdExpression field.
func (o *AlertRuleUpdateRequest) SetThresholdExpression(v string) {
	o.ThresholdExpression.Set(&v)
}

// SetThresholdExpressionNil sets the value for ThresholdExpression to be an explicit nil
func (o *AlertRuleUpdateRequest) SetThresholdExpressionNil() {
	o.ThresholdExpression.Set(nil)
}

// UnsetThresholdExpression ensures that no value is present for ThresholdExpression, not even an explicit nil
func (o *AlertRuleUpdateRequest) UnsetThresholdExpression() {
	o.ThresholdExpression.Unset()
}

// GetThresholdFixedValue returns the ThresholdFixedValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertRuleUpdateRequest) GetThresholdFixedValue() float32 {
	if o == nil || IsNil(o.ThresholdFixedValue.Get()) {
		var ret float32
		return ret
	}
	return *o.ThresholdFixedValue.Get()
}

// GetThresholdFixedValueOk returns a tuple with the ThresholdFixedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertRuleUpdateRequest) GetThresholdFixedValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThresholdFixedValue.Get(), o.ThresholdFixedValue.IsSet()
}

// HasThresholdFixedValue returns a boolean if a field has been set.
func (o *AlertRuleUpdateRequest) HasThresholdFixedValue() bool {
	if o != nil && o.ThresholdFixedValue.IsSet() {
		return true
	}

	return false
}

// SetThresholdFixedValue gets a reference to the given NullableFloat32 and assigns it to the ThresholdFixedValue field.
func (o *AlertRuleUpdateRequest) SetThresholdFixedValue(v float32) {
	o.ThresholdFixedValue.Set(&v)
}

// SetThresholdFixedValueNil sets the value for ThresholdFixedValue to be an explicit nil
func (o *AlertRuleUpdateRequest) SetThresholdFixedValueNil() {
	o.ThresholdFixedValue.Set(nil)
}

// UnsetThresholdFixedValue ensures that no value is present for ThresholdFixedValue, not even an explicit nil
func (o *AlertRuleUpdateRequest) UnsetThresholdFixedValue() {
	o.ThresholdFixedValue.Unset()
}

// GetThresholdOperator returns the ThresholdOperator field value
func (o *AlertRuleUpdateRequest) GetThresholdOperator() AlertRuleOperator {
	if o == nil {
		var ret AlertRuleOperator
		return ret
	}

	return o.ThresholdOperator
}

// GetThresholdOperatorOk returns a tuple with the ThresholdOperator field value
// and a boolean to check if the value has been set.
func (o *AlertRuleUpdateRequest) GetThresholdOperatorOk() (*AlertRuleOperator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThresholdOperator, true
}

// SetThresholdOperator sets field value
func (o *AlertRuleUpdateRequest) SetThresholdOperator(v AlertRuleOperator) {
	o.ThresholdOperator = v
}

func (o AlertRuleUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration_in_secs"] = o.DurationInSecs
	toSerialize["is_enabled"] = o.IsEnabled
	toSerialize["message"] = o.Message
	toSerialize["metric"] = o.Metric
	toSerialize["severity"] = o.Severity
	if o.ThresholdExpression.IsSet() {
		toSerialize["threshold_expression"] = o.ThresholdExpression.Get()
	}
	if o.ThresholdFixedValue.IsSet() {
		toSerialize["threshold_fixed_value"] = o.ThresholdFixedValue.Get()
	}
	toSerialize["threshold_operator"] = o.ThresholdOperator
	return toSerialize, nil
}

func (o *AlertRuleUpdateRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration_in_secs",
		"is_enabled",
		"message",
		"metric",
		"severity",
		"threshold_operator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleUpdateRequest := _AlertRuleUpdateRequest{}

	err = json.Unmarshal(bytes, &varAlertRuleUpdateRequest)

	if err != nil {
		return err
	}

	*o = AlertRuleUpdateRequest(varAlertRuleUpdateRequest)

	return err
}

type NullableAlertRuleUpdateRequest struct {
	value *AlertRuleUpdateRequest
	isSet bool
}

func (v NullableAlertRuleUpdateRequest) Get() *AlertRuleUpdateRequest {
	return v.value
}

func (v *NullableAlertRuleUpdateRequest) Set(val *AlertRuleUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleUpdateRequest(val *AlertRuleUpdateRequest) *NullableAlertRuleUpdateRequest {
	return &NullableAlertRuleUpdateRequest{value: val, isSet: true}
}

func (v NullableAlertRuleUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
