/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the SubjectExportUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubjectExportUpdateRequest{}

// SubjectExportUpdateRequest struct for SubjectExportUpdateRequest
type SubjectExportUpdateRequest struct {
	JwtSettings               *Export `json:"jwt_settings,omitempty"`
	MetricsEnabled            *bool   `json:"metrics_enabled,omitempty"`
	MetricsSamplingPercentage *int64  `json:"metrics_sampling_percentage,omitempty"`
}

// NewSubjectExportUpdateRequest instantiates a new SubjectExportUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubjectExportUpdateRequest() *SubjectExportUpdateRequest {
	this := SubjectExportUpdateRequest{}
	return &this
}

// NewSubjectExportUpdateRequestWithDefaults instantiates a new SubjectExportUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubjectExportUpdateRequestWithDefaults() *SubjectExportUpdateRequest {
	this := SubjectExportUpdateRequest{}
	return &this
}

// GetJwtSettings returns the JwtSettings field value if set, zero value otherwise.
func (o *SubjectExportUpdateRequest) GetJwtSettings() Export {
	if o == nil || IsNil(o.JwtSettings) {
		var ret Export
		return ret
	}
	return *o.JwtSettings
}

// GetJwtSettingsOk returns a tuple with the JwtSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectExportUpdateRequest) GetJwtSettingsOk() (*Export, bool) {
	if o == nil || IsNil(o.JwtSettings) {
		return nil, false
	}
	return o.JwtSettings, true
}

// HasJwtSettings returns a boolean if a field has been set.
func (o *SubjectExportUpdateRequest) HasJwtSettings() bool {
	if o != nil && !IsNil(o.JwtSettings) {
		return true
	}

	return false
}

// SetJwtSettings gets a reference to the given Export and assigns it to the JwtSettings field.
func (o *SubjectExportUpdateRequest) SetJwtSettings(v Export) {
	o.JwtSettings = &v
}

// GetMetricsEnabled returns the MetricsEnabled field value if set, zero value otherwise.
func (o *SubjectExportUpdateRequest) GetMetricsEnabled() bool {
	if o == nil || IsNil(o.MetricsEnabled) {
		var ret bool
		return ret
	}
	return *o.MetricsEnabled
}

// GetMetricsEnabledOk returns a tuple with the MetricsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectExportUpdateRequest) GetMetricsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MetricsEnabled) {
		return nil, false
	}
	return o.MetricsEnabled, true
}

// HasMetricsEnabled returns a boolean if a field has been set.
func (o *SubjectExportUpdateRequest) HasMetricsEnabled() bool {
	if o != nil && !IsNil(o.MetricsEnabled) {
		return true
	}

	return false
}

// SetMetricsEnabled gets a reference to the given bool and assigns it to the MetricsEnabled field.
func (o *SubjectExportUpdateRequest) SetMetricsEnabled(v bool) {
	o.MetricsEnabled = &v
}

// GetMetricsSamplingPercentage returns the MetricsSamplingPercentage field value if set, zero value otherwise.
func (o *SubjectExportUpdateRequest) GetMetricsSamplingPercentage() int64 {
	if o == nil || IsNil(o.MetricsSamplingPercentage) {
		var ret int64
		return ret
	}
	return *o.MetricsSamplingPercentage
}

// GetMetricsSamplingPercentageOk returns a tuple with the MetricsSamplingPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubjectExportUpdateRequest) GetMetricsSamplingPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.MetricsSamplingPercentage) {
		return nil, false
	}
	return o.MetricsSamplingPercentage, true
}

// HasMetricsSamplingPercentage returns a boolean if a field has been set.
func (o *SubjectExportUpdateRequest) HasMetricsSamplingPercentage() bool {
	if o != nil && !IsNil(o.MetricsSamplingPercentage) {
		return true
	}

	return false
}

// SetMetricsSamplingPercentage gets a reference to the given int64 and assigns it to the MetricsSamplingPercentage field.
func (o *SubjectExportUpdateRequest) SetMetricsSamplingPercentage(v int64) {
	o.MetricsSamplingPercentage = &v
}

func (o SubjectExportUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubjectExportUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JwtSettings) {
		toSerialize["jwt_settings"] = o.JwtSettings
	}
	if !IsNil(o.MetricsEnabled) {
		toSerialize["metrics_enabled"] = o.MetricsEnabled
	}
	if !IsNil(o.MetricsSamplingPercentage) {
		toSerialize["metrics_sampling_percentage"] = o.MetricsSamplingPercentage
	}
	return toSerialize, nil
}

type NullableSubjectExportUpdateRequest struct {
	value *SubjectExportUpdateRequest
	isSet bool
}

func (v NullableSubjectExportUpdateRequest) Get() *SubjectExportUpdateRequest {
	return v.value
}

func (v *NullableSubjectExportUpdateRequest) Set(val *SubjectExportUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubjectExportUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubjectExportUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubjectExportUpdateRequest(val *SubjectExportUpdateRequest) *NullableSubjectExportUpdateRequest {
	return &NullableSubjectExportUpdateRequest{value: val, isSet: true}
}

func (v NullableSubjectExportUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubjectExportUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
