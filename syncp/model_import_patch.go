/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

// checks if the ImportPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportPatch{}

// ImportPatch struct for ImportPatch
type ImportPatch struct {
	Account      *string           `json:"account,omitempty"`
	LocalSubject *Nullable[string] `json:"local_subject,omitempty"`
	Name         *string           `json:"name,omitempty"`
	Share        *bool             `json:"share,omitempty"`
	Subject      *string           `json:"subject,omitempty"`
	To           *Nullable[string] `json:"to,omitempty"`
	Token        *Nullable[string] `json:"token,omitempty"`
	Type         *ExportType       `json:"type,omitempty"`
}

func (o ImportPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.LocalSubject != nil && !o.LocalSubject.IsNull() {
		toSerialize["local_subject"] = o.LocalSubject.Val
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Share != nil {
		toSerialize["share"] = o.Share
	}
	if o.Subject != nil {
		toSerialize["subject"] = o.Subject
	}
	if o.To != nil && !o.To.IsNull() {
		toSerialize["to"] = o.To.Val
	}
	if o.Token != nil && !o.Token.IsNull() {
		toSerialize["token"] = o.Token.Val
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}
