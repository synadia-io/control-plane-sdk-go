/*
Synadia Control Plane

Testing SubjectExportAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package syncp

import (
	"context"
	openapiclient "github.com/synadia-io/control-plane-sdk-go/syncp"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_api_SubjectExportAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SubjectExportAPIService CreateSubjectShares", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subjectExportId string

		resp, httpRes, err := apiClient.SubjectExportAPI.CreateSubjectShares(context.Background(), subjectExportId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubjectExportAPIService DeleteSubjectExport", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subjectExportId string

		httpRes, err := apiClient.SubjectExportAPI.DeleteSubjectExport(context.Background(), subjectExportId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubjectExportAPIService DeleteSubjectShare", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subjectExportId string
		var targetAccountNKeyPublic string

		httpRes, err := apiClient.SubjectExportAPI.DeleteSubjectShare(context.Background(), subjectExportId, targetAccountNKeyPublic).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubjectExportAPIService GetSubjectExport", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subjectExportId string

		resp, httpRes, err := apiClient.SubjectExportAPI.GetSubjectExport(context.Background(), subjectExportId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubjectExportAPIService ListSubjectShares", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subjectExportId string

		resp, httpRes, err := apiClient.SubjectExportAPI.ListSubjectShares(context.Background(), subjectExportId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubjectExportAPIService UpdateSubjectExport", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subjectExportId string

		resp, httpRes, err := apiClient.SubjectExportAPI.UpdateSubjectExport(context.Background(), subjectExportId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
