/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the OperatorClaims type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperatorClaims{}

// OperatorClaims OperatorClaims define the data for an operator JWT
type OperatorClaims struct {
	ClaimsData ClaimsData `json:"ClaimsData"`
	Nats       *Operator  `json:"nats,omitempty"`
}

// NewOperatorClaims instantiates a new OperatorClaims object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperatorClaims(claimsData ClaimsData) *OperatorClaims {
	this := OperatorClaims{}
	this.ClaimsData = claimsData
	return &this
}

// NewOperatorClaimsWithDefaults instantiates a new OperatorClaims object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperatorClaimsWithDefaults() *OperatorClaims {
	this := OperatorClaims{}
	return &this
}

// GetClaimsData returns the ClaimsData field value
func (o *OperatorClaims) GetClaimsData() ClaimsData {
	if o == nil {
		var ret ClaimsData
		return ret
	}

	return o.ClaimsData
}

// GetClaimsDataOk returns a tuple with the ClaimsData field value
// and a boolean to check if the value has been set.
func (o *OperatorClaims) GetClaimsDataOk() (*ClaimsData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClaimsData, true
}

// SetClaimsData sets field value
func (o *OperatorClaims) SetClaimsData(v ClaimsData) {
	o.ClaimsData = v
}

// GetNats returns the Nats field value if set, zero value otherwise.
func (o *OperatorClaims) GetNats() Operator {
	if o == nil || IsNil(o.Nats) {
		var ret Operator
		return ret
	}
	return *o.Nats
}

// GetNatsOk returns a tuple with the Nats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorClaims) GetNatsOk() (*Operator, bool) {
	if o == nil || IsNil(o.Nats) {
		return nil, false
	}
	return o.Nats, true
}

// HasNats returns a boolean if a field has been set.
func (o *OperatorClaims) HasNats() bool {
	if o != nil && !IsNil(o.Nats) {
		return true
	}

	return false
}

// SetNats gets a reference to the given Operator and assigns it to the Nats field.
func (o *OperatorClaims) SetNats(v Operator) {
	o.Nats = &v
}

func (o OperatorClaims) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperatorClaims) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ClaimsData"] = o.ClaimsData
	if !IsNil(o.Nats) {
		toSerialize["nats"] = o.Nats
	}
	return toSerialize, nil
}

type NullableOperatorClaims struct {
	value *OperatorClaims
	isSet bool
}

func (v NullableOperatorClaims) Get() *OperatorClaims {
	return v.value
}

func (v *NullableOperatorClaims) Set(val *OperatorClaims) {
	v.value = val
	v.isSet = true
}

func (v NullableOperatorClaims) IsSet() bool {
	return v.isSet
}

func (v *NullableOperatorClaims) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperatorClaims(val *OperatorClaims) *NullableOperatorClaims {
	return &NullableOperatorClaims{value: val, isSet: true}
}

func (v NullableOperatorClaims) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperatorClaims) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
