/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JSKVBucketListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JSKVBucketListResponse{}

// JSKVBucketListResponse struct for JSKVBucketListResponse
type JSKVBucketListResponse struct {
	Items []JSKVBucketViewResponse `json:"items"`
}

// NewJSKVBucketListResponse instantiates a new JSKVBucketListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJSKVBucketListResponse(items []JSKVBucketViewResponse) *JSKVBucketListResponse {
	this := JSKVBucketListResponse{}
	this.Items = items
	return &this
}

// NewJSKVBucketListResponseWithDefaults instantiates a new JSKVBucketListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJSKVBucketListResponseWithDefaults() *JSKVBucketListResponse {
	this := JSKVBucketListResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *JSKVBucketListResponse) GetItems() []JSKVBucketViewResponse {
	if o == nil {
		var ret []JSKVBucketViewResponse
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *JSKVBucketListResponse) GetItemsOk() ([]JSKVBucketViewResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *JSKVBucketListResponse) SetItems(v []JSKVBucketViewResponse) {
	o.Items = v
}

func (o JSKVBucketListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JSKVBucketListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableJSKVBucketListResponse struct {
	value *JSKVBucketListResponse
	isSet bool
}

func (v NullableJSKVBucketListResponse) Get() *JSKVBucketListResponse {
	return v.value
}

func (v *NullableJSKVBucketListResponse) Set(val *JSKVBucketListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJSKVBucketListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJSKVBucketListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJSKVBucketListResponse(val *JSKVBucketListResponse) *NullableJSKVBucketListResponse {
	return &NullableJSKVBucketListResponse{value: val, isSet: true}
}

func (v NullableJSKVBucketListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJSKVBucketListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
