/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"time"
)

// checks if the JSPullConsumerInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JSPullConsumerInfoResponse{}

// JSPullConsumerInfoResponse struct for JSPullConsumerInfoResponse
type JSPullConsumerInfoResponse struct {
	AckFloor       SequenceInfo                 `json:"ack_floor"`
	Cluster        *ClusterInfo                 `json:"cluster,omitempty"`
	Config         *JSPullConsumerConfigRequest `json:"config,omitempty"`
	Created        time.Time                    `json:"created"`
	Delivered      SequenceInfo                 `json:"delivered"`
	Id             string                       `json:"id"`
	Name           string                       `json:"name"`
	NumAckPending  int64                        `json:"num_ack_pending"`
	NumPending     uint64                       `json:"num_pending"`
	NumRedelivered int64                        `json:"num_redelivered"`
	NumWaiting     int64                        `json:"num_waiting"`
	StreamName     string                       `json:"stream_name"`
}

func (o JSPullConsumerInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ack_floor"] = o.AckFloor
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	toSerialize["created"] = o.Created
	toSerialize["delivered"] = o.Delivered
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["num_ack_pending"] = o.NumAckPending
	toSerialize["num_pending"] = o.NumPending
	toSerialize["num_redelivered"] = o.NumRedelivered
	toSerialize["num_waiting"] = o.NumWaiting
	toSerialize["stream_name"] = o.StreamName
	return toSerialize, nil
}
