/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

// checks if the LeafInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LeafInfo{}

// LeafInfo LeafInfo has detailed information on each remote leafnode connection.
type LeafInfo struct {
	Account           string   `json:"account"`
	InBytes           int64    `json:"in_bytes"`
	InMsgs            int64    `json:"in_msgs"`
	Ip                string   `json:"ip"`
	IsSpoke           *bool    `json:"is_spoke,omitempty"`
	OutBytes          int64    `json:"out_bytes"`
	OutMsgs           int64    `json:"out_msgs"`
	Port              int64    `json:"port"`
	Rtt               *string  `json:"rtt,omitempty"`
	Subscriptions     uint32   `json:"subscriptions"`
	SubscriptionsList []string `json:"subscriptions_list,omitempty"`
}

func (o LeafInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account
	toSerialize["in_bytes"] = o.InBytes
	toSerialize["in_msgs"] = o.InMsgs
	toSerialize["ip"] = o.Ip
	if o.IsSpoke != nil {
		toSerialize["is_spoke"] = o.IsSpoke
	}
	toSerialize["out_bytes"] = o.OutBytes
	toSerialize["out_msgs"] = o.OutMsgs
	toSerialize["port"] = o.Port
	if o.Rtt != nil {
		toSerialize["rtt"] = o.Rtt
	}
	toSerialize["subscriptions"] = o.Subscriptions
	if len(o.SubscriptionsList) != 0 {
		toSerialize["subscriptions_list"] = o.SubscriptionsList
	}
	return toSerialize, nil
}
