/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the TLSPeerCert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TLSPeerCert{}

// TLSPeerCert TLSPeerCert contains basic information about a TLS peer certificate
type TLSPeerCert struct {
	CertSha256 *string `json:"cert_sha256,omitempty"`
	SpkiSha256 *string `json:"spki_sha256,omitempty"`
	Subject    *string `json:"subject,omitempty"`
}

// NewTLSPeerCert instantiates a new TLSPeerCert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTLSPeerCert() *TLSPeerCert {
	this := TLSPeerCert{}
	return &this
}

// NewTLSPeerCertWithDefaults instantiates a new TLSPeerCert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTLSPeerCertWithDefaults() *TLSPeerCert {
	this := TLSPeerCert{}
	return &this
}

// GetCertSha256 returns the CertSha256 field value if set, zero value otherwise.
func (o *TLSPeerCert) GetCertSha256() string {
	if o == nil || IsNil(o.CertSha256) {
		var ret string
		return ret
	}
	return *o.CertSha256
}

// GetCertSha256Ok returns a tuple with the CertSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TLSPeerCert) GetCertSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.CertSha256) {
		return nil, false
	}
	return o.CertSha256, true
}

// HasCertSha256 returns a boolean if a field has been set.
func (o *TLSPeerCert) HasCertSha256() bool {
	if o != nil && !IsNil(o.CertSha256) {
		return true
	}

	return false
}

// SetCertSha256 gets a reference to the given string and assigns it to the CertSha256 field.
func (o *TLSPeerCert) SetCertSha256(v string) {
	o.CertSha256 = &v
}

// GetSpkiSha256 returns the SpkiSha256 field value if set, zero value otherwise.
func (o *TLSPeerCert) GetSpkiSha256() string {
	if o == nil || IsNil(o.SpkiSha256) {
		var ret string
		return ret
	}
	return *o.SpkiSha256
}

// GetSpkiSha256Ok returns a tuple with the SpkiSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TLSPeerCert) GetSpkiSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.SpkiSha256) {
		return nil, false
	}
	return o.SpkiSha256, true
}

// HasSpkiSha256 returns a boolean if a field has been set.
func (o *TLSPeerCert) HasSpkiSha256() bool {
	if o != nil && !IsNil(o.SpkiSha256) {
		return true
	}

	return false
}

// SetSpkiSha256 gets a reference to the given string and assigns it to the SpkiSha256 field.
func (o *TLSPeerCert) SetSpkiSha256(v string) {
	o.SpkiSha256 = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *TLSPeerCert) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TLSPeerCert) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *TLSPeerCert) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *TLSPeerCert) SetSubject(v string) {
	o.Subject = &v
}

func (o TLSPeerCert) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TLSPeerCert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertSha256) {
		toSerialize["cert_sha256"] = o.CertSha256
	}
	if !IsNil(o.SpkiSha256) {
		toSerialize["spki_sha256"] = o.SpkiSha256
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	return toSerialize, nil
}

type NullableTLSPeerCert struct {
	value *TLSPeerCert
	isSet bool
}

func (v NullableTLSPeerCert) Get() *TLSPeerCert {
	return v.value
}

func (v *NullableTLSPeerCert) Set(val *TLSPeerCert) {
	v.value = val
	v.isSet = true
}

func (v NullableTLSPeerCert) IsSet() bool {
	return v.isSet
}

func (v *NullableTLSPeerCert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTLSPeerCert(val *TLSPeerCert) *NullableTLSPeerCert {
	return &NullableTLSPeerCert{value: val, isSet: true}
}

func (v NullableTLSPeerCert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTLSPeerCert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
