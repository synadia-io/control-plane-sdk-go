/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

// checks if the UpdatableKVBucketConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatableKVBucketConfig{}

// UpdatableKVBucketConfig struct for UpdatableKVBucketConfig
type UpdatableKVBucketConfig struct {
	Compression  *bool          `json:"compression,omitempty"`
	Description  *string        `json:"description,omitempty"`
	History      *int32         `json:"history,omitempty"`
	MaxAge       *int64         `json:"max_age,omitempty"`
	MaxBytes     *int64         `json:"max_bytes,omitempty"`
	MaxValueSize *int32         `json:"max_value_size,omitempty"`
	Mirror       *StreamSource  `json:"mirror,omitempty"`
	NumReplicas  *int32         `json:"num_replicas,omitempty"`
	Placement    *Placement     `json:"placement,omitempty"`
	Republish    *RePublish     `json:"republish,omitempty"`
	Sources      []StreamSource `json:"sources,omitempty"`
}

func (o UpdatableKVBucketConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Compression != nil {
		toSerialize["compression"] = o.Compression
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.History != nil {
		toSerialize["history"] = o.History
	}
	if o.MaxAge != nil {
		toSerialize["max_age"] = o.MaxAge
	}
	if o.MaxBytes != nil {
		toSerialize["max_bytes"] = o.MaxBytes
	}
	if o.MaxValueSize != nil {
		toSerialize["max_value_size"] = o.MaxValueSize
	}
	if o.Mirror != nil {
		toSerialize["mirror"] = o.Mirror
	}
	if o.NumReplicas != nil {
		toSerialize["num_replicas"] = o.NumReplicas
	}
	if o.Placement != nil {
		toSerialize["placement"] = o.Placement
	}
	if o.Republish != nil {
		toSerialize["republish"] = o.Republish
	}
	if len(o.Sources) != 0 {
		toSerialize["sources"] = o.Sources
	}
	return toSerialize, nil
}
