/*
Synadia Control Plane / Synadia Cloud

API for Synadia Control Plane / Synadia Cloud

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

// checks if the StreamSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamSource{}

// StreamSource StreamSource dictates how streams can source from other streams.
type StreamSource struct {
	External          *Nullable[ExternalStream] `json:"external,omitempty"`
	FilterSubject     *string                   `json:"filter_subject,omitempty"`
	Name              string                    `json:"name"`
	OptStartSeq       *uint64                   `json:"opt_start_seq,omitempty"`
	OptStartTime      *Nullable[string]         `json:"opt_start_time,omitempty"`
	SubjectTransforms []SubjectTransformConfig  `json:"subject_transforms,omitempty"`
}

func (o StreamSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.External != nil && !o.External.IsNull() {
		toSerialize["external"] = o.External.Val
	}
	if o.FilterSubject != nil {
		toSerialize["filter_subject"] = o.FilterSubject
	}
	toSerialize["name"] = o.Name
	if o.OptStartSeq != nil {
		toSerialize["opt_start_seq"] = o.OptStartSeq
	}
	if o.OptStartTime != nil && !o.OptStartTime.IsNull() {
		toSerialize["opt_start_time"] = o.OptStartTime.Val
	}
	if len(o.SubjectTransforms) != 0 {
		toSerialize["subject_transforms"] = o.SubjectTransforms
	}
	return toSerialize, nil
}
