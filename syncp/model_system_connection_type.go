/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"fmt"

	"encoding/json"
)

// SystemConnectionType the model 'SystemConnectionType'
type SystemConnectionType string

// List of SystemConnectionType
const (
	SYSTEMCONNECTIONTYPE_AGENT  SystemConnectionType = "Agent"
	SYSTEMCONNECTIONTYPE_DIRECT SystemConnectionType = "Direct"
)

// All allowed values of SystemConnectionType enum
var AllowedSystemConnectionTypeEnumValues = []SystemConnectionType{
	"Agent",
	"Direct",
}

func (v *SystemConnectionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SystemConnectionType(value)
	for _, existing := range AllowedSystemConnectionTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SystemConnectionType", value)
}

// NewSystemConnectionTypeFromValue returns a pointer to a valid SystemConnectionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSystemConnectionTypeFromValue(v string) (*SystemConnectionType, error) {
	ev := SystemConnectionType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SystemConnectionType: valid values are %v", v, AllowedSystemConnectionTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SystemConnectionType) IsValid() bool {
	for _, existing := range AllowedSystemConnectionTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SystemConnectionType value
func (v SystemConnectionType) Ptr() *SystemConnectionType {
	return &v
}
