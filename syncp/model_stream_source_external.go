/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
)

// checks if the StreamSourceExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamSourceExternal{}

// StreamSourceExternal struct for StreamSourceExternal
type StreamSourceExternal struct {
	Api     string `json:"api"`
	Deliver string `json:"deliver"`
}

type _StreamSourceExternal StreamSourceExternal

// NewStreamSourceExternal instantiates a new StreamSourceExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamSourceExternal(api string, deliver string) *StreamSourceExternal {
	this := StreamSourceExternal{}
	this.Api = api
	this.Deliver = deliver
	return &this
}

// NewStreamSourceExternalWithDefaults instantiates a new StreamSourceExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamSourceExternalWithDefaults() *StreamSourceExternal {
	this := StreamSourceExternal{}
	return &this
}

// GetApi returns the Api field value
func (o *StreamSourceExternal) GetApi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Api
}

// GetApiOk returns a tuple with the Api field value
// and a boolean to check if the value has been set.
func (o *StreamSourceExternal) GetApiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Api, true
}

// SetApi sets field value
func (o *StreamSourceExternal) SetApi(v string) {
	o.Api = v
}

// GetDeliver returns the Deliver field value
func (o *StreamSourceExternal) GetDeliver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Deliver
}

// GetDeliverOk returns a tuple with the Deliver field value
// and a boolean to check if the value has been set.
func (o *StreamSourceExternal) GetDeliverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deliver, true
}

// SetDeliver sets field value
func (o *StreamSourceExternal) SetDeliver(v string) {
	o.Deliver = v
}

func (o StreamSourceExternal) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamSourceExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api"] = o.Api
	toSerialize["deliver"] = o.Deliver
	return toSerialize, nil
}

func (o *StreamSourceExternal) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api",
		"deliver",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStreamSourceExternal := _StreamSourceExternal{}

	err = json.Unmarshal(bytes, &varStreamSourceExternal)

	if err != nil {
		return err
	}

	*o = StreamSourceExternal(varStreamSourceExternal)

	return err
}

type NullableStreamSourceExternal struct {
	value *StreamSourceExternal
	isSet bool
}

func (v NullableStreamSourceExternal) Get() *StreamSourceExternal {
	return v.value
}

func (v *NullableStreamSourceExternal) Set(val *StreamSourceExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamSourceExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamSourceExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamSourceExternal(val *StreamSourceExternal) *NullableStreamSourceExternal {
	return &NullableStreamSourceExternal{value: val, isSet: true}
}

func (v NullableStreamSourceExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamSourceExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
