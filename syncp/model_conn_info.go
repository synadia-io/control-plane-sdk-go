/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"time"
)

// checks if the ConnInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnInfo{}

// ConnInfo ConnInfo has detailed information on a per connection basis.
type ConnInfo struct {
	Account                 *string        `json:"account,omitempty"`
	AuthorizedUser          *string        `json:"authorized_user,omitempty"`
	Cid                     int32          `json:"cid"`
	Idle                    string         `json:"idle"`
	InBytes                 int64          `json:"in_bytes"`
	InMsgs                  int64          `json:"in_msgs"`
	Ip                      string         `json:"ip"`
	IssuerKey               *string        `json:"issuer_key,omitempty"`
	Jwt                     *string        `json:"jwt,omitempty"`
	Kind                    *string        `json:"kind,omitempty"`
	Lang                    *string        `json:"lang,omitempty"`
	LastActivity            time.Time      `json:"last_activity"`
	MqttClient              *string        `json:"mqtt_client,omitempty"`
	Name                    *string        `json:"name,omitempty"`
	NameTag                 *string        `json:"name_tag,omitempty"`
	OutBytes                int64          `json:"out_bytes"`
	OutMsgs                 int64          `json:"out_msgs"`
	PendingBytes            int32          `json:"pending_bytes"`
	Port                    int32          `json:"port"`
	Reason                  *string        `json:"reason,omitempty"`
	Rtt                     *string        `json:"rtt,omitempty"`
	Start                   time.Time      `json:"start"`
	Stop                    NullableString `json:"stop,omitempty"`
	Subscriptions           int32          `json:"subscriptions"`
	SubscriptionsList       []string       `json:"subscriptions_list,omitempty"`
	SubscriptionsListDetail []SubDetail    `json:"subscriptions_list_detail,omitempty"`
	// TagList is a unique array of lower case strings All tag list methods lower case the strings in the arguments
	Tags           []string                    `json:"tags,omitempty"`
	TlsCipherSuite *string                     `json:"tls_cipher_suite,omitempty"`
	TlsPeerCerts   []ConnInfoTlsPeerCertsInner `json:"tls_peer_certs,omitempty"`
	TlsVersion     *string                     `json:"tls_version,omitempty"`
	Type           *string                     `json:"type,omitempty"`
	Uptime         string                      `json:"uptime"`
	Version        *string                     `json:"version,omitempty"`
}

// NewConnInfo instantiates a new ConnInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnInfo(cid int32, idle string, inBytes int64, inMsgs int64, ip string, lastActivity time.Time, outBytes int64, outMsgs int64, pendingBytes int32, port int32, start time.Time, subscriptions int32, uptime string) *ConnInfo {
	this := ConnInfo{}
	this.Cid = cid
	this.Idle = idle
	this.InBytes = inBytes
	this.InMsgs = inMsgs
	this.Ip = ip
	this.LastActivity = lastActivity
	this.OutBytes = outBytes
	this.OutMsgs = outMsgs
	this.PendingBytes = pendingBytes
	this.Port = port
	this.Start = start
	this.Subscriptions = subscriptions
	this.Uptime = uptime
	return &this
}

// NewConnInfoWithDefaults instantiates a new ConnInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnInfoWithDefaults() *ConnInfo {
	this := ConnInfo{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ConnInfo) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ConnInfo) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *ConnInfo) SetAccount(v string) {
	o.Account = &v
}

// GetAuthorizedUser returns the AuthorizedUser field value if set, zero value otherwise.
func (o *ConnInfo) GetAuthorizedUser() string {
	if o == nil || IsNil(o.AuthorizedUser) {
		var ret string
		return ret
	}
	return *o.AuthorizedUser
}

// GetAuthorizedUserOk returns a tuple with the AuthorizedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetAuthorizedUserOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizedUser) {
		return nil, false
	}
	return o.AuthorizedUser, true
}

// HasAuthorizedUser returns a boolean if a field has been set.
func (o *ConnInfo) HasAuthorizedUser() bool {
	if o != nil && !IsNil(o.AuthorizedUser) {
		return true
	}

	return false
}

// SetAuthorizedUser gets a reference to the given string and assigns it to the AuthorizedUser field.
func (o *ConnInfo) SetAuthorizedUser(v string) {
	o.AuthorizedUser = &v
}

// GetCid returns the Cid field value
func (o *ConnInfo) GetCid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cid
}

// GetCidOk returns a tuple with the Cid field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetCidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cid, true
}

// SetCid sets field value
func (o *ConnInfo) SetCid(v int32) {
	o.Cid = v
}

// GetIdle returns the Idle field value
func (o *ConnInfo) GetIdle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Idle
}

// GetIdleOk returns a tuple with the Idle field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetIdleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Idle, true
}

// SetIdle sets field value
func (o *ConnInfo) SetIdle(v string) {
	o.Idle = v
}

// GetInBytes returns the InBytes field value
func (o *ConnInfo) GetInBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.InBytes
}

// GetInBytesOk returns a tuple with the InBytes field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetInBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InBytes, true
}

// SetInBytes sets field value
func (o *ConnInfo) SetInBytes(v int64) {
	o.InBytes = v
}

// GetInMsgs returns the InMsgs field value
func (o *ConnInfo) GetInMsgs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.InMsgs
}

// GetInMsgsOk returns a tuple with the InMsgs field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetInMsgsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InMsgs, true
}

// SetInMsgs sets field value
func (o *ConnInfo) SetInMsgs(v int64) {
	o.InMsgs = v
}

// GetIp returns the Ip field value
func (o *ConnInfo) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *ConnInfo) SetIp(v string) {
	o.Ip = v
}

// GetIssuerKey returns the IssuerKey field value if set, zero value otherwise.
func (o *ConnInfo) GetIssuerKey() string {
	if o == nil || IsNil(o.IssuerKey) {
		var ret string
		return ret
	}
	return *o.IssuerKey
}

// GetIssuerKeyOk returns a tuple with the IssuerKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetIssuerKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IssuerKey) {
		return nil, false
	}
	return o.IssuerKey, true
}

// HasIssuerKey returns a boolean if a field has been set.
func (o *ConnInfo) HasIssuerKey() bool {
	if o != nil && !IsNil(o.IssuerKey) {
		return true
	}

	return false
}

// SetIssuerKey gets a reference to the given string and assigns it to the IssuerKey field.
func (o *ConnInfo) SetIssuerKey(v string) {
	o.IssuerKey = &v
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *ConnInfo) GetJwt() string {
	if o == nil || IsNil(o.Jwt) {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetJwtOk() (*string, bool) {
	if o == nil || IsNil(o.Jwt) {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *ConnInfo) HasJwt() bool {
	if o != nil && !IsNil(o.Jwt) {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *ConnInfo) SetJwt(v string) {
	o.Jwt = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ConnInfo) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ConnInfo) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ConnInfo) SetKind(v string) {
	o.Kind = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ConnInfo) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ConnInfo) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ConnInfo) SetLang(v string) {
	o.Lang = &v
}

// GetLastActivity returns the LastActivity field value
func (o *ConnInfo) GetLastActivity() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastActivity
}

// GetLastActivityOk returns a tuple with the LastActivity field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetLastActivityOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastActivity, true
}

// SetLastActivity sets field value
func (o *ConnInfo) SetLastActivity(v time.Time) {
	o.LastActivity = v
}

// GetMqttClient returns the MqttClient field value if set, zero value otherwise.
func (o *ConnInfo) GetMqttClient() string {
	if o == nil || IsNil(o.MqttClient) {
		var ret string
		return ret
	}
	return *o.MqttClient
}

// GetMqttClientOk returns a tuple with the MqttClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetMqttClientOk() (*string, bool) {
	if o == nil || IsNil(o.MqttClient) {
		return nil, false
	}
	return o.MqttClient, true
}

// HasMqttClient returns a boolean if a field has been set.
func (o *ConnInfo) HasMqttClient() bool {
	if o != nil && !IsNil(o.MqttClient) {
		return true
	}

	return false
}

// SetMqttClient gets a reference to the given string and assigns it to the MqttClient field.
func (o *ConnInfo) SetMqttClient(v string) {
	o.MqttClient = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnInfo) SetName(v string) {
	o.Name = &v
}

// GetNameTag returns the NameTag field value if set, zero value otherwise.
func (o *ConnInfo) GetNameTag() string {
	if o == nil || IsNil(o.NameTag) {
		var ret string
		return ret
	}
	return *o.NameTag
}

// GetNameTagOk returns a tuple with the NameTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetNameTagOk() (*string, bool) {
	if o == nil || IsNil(o.NameTag) {
		return nil, false
	}
	return o.NameTag, true
}

// HasNameTag returns a boolean if a field has been set.
func (o *ConnInfo) HasNameTag() bool {
	if o != nil && !IsNil(o.NameTag) {
		return true
	}

	return false
}

// SetNameTag gets a reference to the given string and assigns it to the NameTag field.
func (o *ConnInfo) SetNameTag(v string) {
	o.NameTag = &v
}

// GetOutBytes returns the OutBytes field value
func (o *ConnInfo) GetOutBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OutBytes
}

// GetOutBytesOk returns a tuple with the OutBytes field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetOutBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutBytes, true
}

// SetOutBytes sets field value
func (o *ConnInfo) SetOutBytes(v int64) {
	o.OutBytes = v
}

// GetOutMsgs returns the OutMsgs field value
func (o *ConnInfo) GetOutMsgs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OutMsgs
}

// GetOutMsgsOk returns a tuple with the OutMsgs field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetOutMsgsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutMsgs, true
}

// SetOutMsgs sets field value
func (o *ConnInfo) SetOutMsgs(v int64) {
	o.OutMsgs = v
}

// GetPendingBytes returns the PendingBytes field value
func (o *ConnInfo) GetPendingBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PendingBytes
}

// GetPendingBytesOk returns a tuple with the PendingBytes field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetPendingBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingBytes, true
}

// SetPendingBytes sets field value
func (o *ConnInfo) SetPendingBytes(v int32) {
	o.PendingBytes = v
}

// GetPort returns the Port field value
func (o *ConnInfo) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *ConnInfo) SetPort(v int32) {
	o.Port = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ConnInfo) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ConnInfo) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ConnInfo) SetReason(v string) {
	o.Reason = &v
}

// GetRtt returns the Rtt field value if set, zero value otherwise.
func (o *ConnInfo) GetRtt() string {
	if o == nil || IsNil(o.Rtt) {
		var ret string
		return ret
	}
	return *o.Rtt
}

// GetRttOk returns a tuple with the Rtt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetRttOk() (*string, bool) {
	if o == nil || IsNil(o.Rtt) {
		return nil, false
	}
	return o.Rtt, true
}

// HasRtt returns a boolean if a field has been set.
func (o *ConnInfo) HasRtt() bool {
	if o != nil && !IsNil(o.Rtt) {
		return true
	}

	return false
}

// SetRtt gets a reference to the given string and assigns it to the Rtt field.
func (o *ConnInfo) SetRtt(v string) {
	o.Rtt = &v
}

// GetStart returns the Start field value
func (o *ConnInfo) GetStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *ConnInfo) SetStart(v time.Time) {
	o.Start = v
}

// GetStop returns the Stop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnInfo) GetStop() string {
	if o == nil || IsNil(o.Stop.Get()) {
		var ret string
		return ret
	}
	return *o.Stop.Get()
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnInfo) GetStopOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stop.Get(), o.Stop.IsSet()
}

// HasStop returns a boolean if a field has been set.
func (o *ConnInfo) HasStop() bool {
	if o != nil && o.Stop.IsSet() {
		return true
	}

	return false
}

// SetStop gets a reference to the given NullableString and assigns it to the Stop field.
func (o *ConnInfo) SetStop(v string) {
	o.Stop.Set(&v)
}

// SetStopNil sets the value for Stop to be an explicit nil
func (o *ConnInfo) SetStopNil() {
	o.Stop.Set(nil)
}

// UnsetStop ensures that no value is present for Stop, not even an explicit nil
func (o *ConnInfo) UnsetStop() {
	o.Stop.Unset()
}

// GetSubscriptions returns the Subscriptions field value
func (o *ConnInfo) GetSubscriptions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetSubscriptionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscriptions, true
}

// SetSubscriptions sets field value
func (o *ConnInfo) SetSubscriptions(v int32) {
	o.Subscriptions = v
}

// GetSubscriptionsList returns the SubscriptionsList field value if set, zero value otherwise.
func (o *ConnInfo) GetSubscriptionsList() []string {
	if o == nil || IsNil(o.SubscriptionsList) {
		var ret []string
		return ret
	}
	return o.SubscriptionsList
}

// GetSubscriptionsListOk returns a tuple with the SubscriptionsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetSubscriptionsListOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscriptionsList) {
		return nil, false
	}
	return o.SubscriptionsList, true
}

// HasSubscriptionsList returns a boolean if a field has been set.
func (o *ConnInfo) HasSubscriptionsList() bool {
	if o != nil && !IsNil(o.SubscriptionsList) {
		return true
	}

	return false
}

// SetSubscriptionsList gets a reference to the given []string and assigns it to the SubscriptionsList field.
func (o *ConnInfo) SetSubscriptionsList(v []string) {
	o.SubscriptionsList = v
}

// GetSubscriptionsListDetail returns the SubscriptionsListDetail field value if set, zero value otherwise.
func (o *ConnInfo) GetSubscriptionsListDetail() []SubDetail {
	if o == nil || IsNil(o.SubscriptionsListDetail) {
		var ret []SubDetail
		return ret
	}
	return o.SubscriptionsListDetail
}

// GetSubscriptionsListDetailOk returns a tuple with the SubscriptionsListDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetSubscriptionsListDetailOk() ([]SubDetail, bool) {
	if o == nil || IsNil(o.SubscriptionsListDetail) {
		return nil, false
	}
	return o.SubscriptionsListDetail, true
}

// HasSubscriptionsListDetail returns a boolean if a field has been set.
func (o *ConnInfo) HasSubscriptionsListDetail() bool {
	if o != nil && !IsNil(o.SubscriptionsListDetail) {
		return true
	}

	return false
}

// SetSubscriptionsListDetail gets a reference to the given []SubDetail and assigns it to the SubscriptionsListDetail field.
func (o *ConnInfo) SetSubscriptionsListDetail(v []SubDetail) {
	o.SubscriptionsListDetail = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnInfo) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnInfo) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ConnInfo) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ConnInfo) SetTags(v []string) {
	o.Tags = v
}

// GetTlsCipherSuite returns the TlsCipherSuite field value if set, zero value otherwise.
func (o *ConnInfo) GetTlsCipherSuite() string {
	if o == nil || IsNil(o.TlsCipherSuite) {
		var ret string
		return ret
	}
	return *o.TlsCipherSuite
}

// GetTlsCipherSuiteOk returns a tuple with the TlsCipherSuite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetTlsCipherSuiteOk() (*string, bool) {
	if o == nil || IsNil(o.TlsCipherSuite) {
		return nil, false
	}
	return o.TlsCipherSuite, true
}

// HasTlsCipherSuite returns a boolean if a field has been set.
func (o *ConnInfo) HasTlsCipherSuite() bool {
	if o != nil && !IsNil(o.TlsCipherSuite) {
		return true
	}

	return false
}

// SetTlsCipherSuite gets a reference to the given string and assigns it to the TlsCipherSuite field.
func (o *ConnInfo) SetTlsCipherSuite(v string) {
	o.TlsCipherSuite = &v
}

// GetTlsPeerCerts returns the TlsPeerCerts field value if set, zero value otherwise.
func (o *ConnInfo) GetTlsPeerCerts() []ConnInfoTlsPeerCertsInner {
	if o == nil || IsNil(o.TlsPeerCerts) {
		var ret []ConnInfoTlsPeerCertsInner
		return ret
	}
	return o.TlsPeerCerts
}

// GetTlsPeerCertsOk returns a tuple with the TlsPeerCerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetTlsPeerCertsOk() ([]ConnInfoTlsPeerCertsInner, bool) {
	if o == nil || IsNil(o.TlsPeerCerts) {
		return nil, false
	}
	return o.TlsPeerCerts, true
}

// HasTlsPeerCerts returns a boolean if a field has been set.
func (o *ConnInfo) HasTlsPeerCerts() bool {
	if o != nil && !IsNil(o.TlsPeerCerts) {
		return true
	}

	return false
}

// SetTlsPeerCerts gets a reference to the given []ConnInfoTlsPeerCertsInner and assigns it to the TlsPeerCerts field.
func (o *ConnInfo) SetTlsPeerCerts(v []ConnInfoTlsPeerCertsInner) {
	o.TlsPeerCerts = v
}

// GetTlsVersion returns the TlsVersion field value if set, zero value otherwise.
func (o *ConnInfo) GetTlsVersion() string {
	if o == nil || IsNil(o.TlsVersion) {
		var ret string
		return ret
	}
	return *o.TlsVersion
}

// GetTlsVersionOk returns a tuple with the TlsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetTlsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TlsVersion) {
		return nil, false
	}
	return o.TlsVersion, true
}

// HasTlsVersion returns a boolean if a field has been set.
func (o *ConnInfo) HasTlsVersion() bool {
	if o != nil && !IsNil(o.TlsVersion) {
		return true
	}

	return false
}

// SetTlsVersion gets a reference to the given string and assigns it to the TlsVersion field.
func (o *ConnInfo) SetTlsVersion(v string) {
	o.TlsVersion = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ConnInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ConnInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ConnInfo) SetType(v string) {
	o.Type = &v
}

// GetUptime returns the Uptime field value
func (o *ConnInfo) GetUptime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetUptimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uptime, true
}

// SetUptime sets field value
func (o *ConnInfo) SetUptime(v string) {
	o.Uptime = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ConnInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ConnInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ConnInfo) SetVersion(v string) {
	o.Version = &v
}

func (o ConnInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.AuthorizedUser) {
		toSerialize["authorized_user"] = o.AuthorizedUser
	}
	toSerialize["cid"] = o.Cid
	toSerialize["idle"] = o.Idle
	toSerialize["in_bytes"] = o.InBytes
	toSerialize["in_msgs"] = o.InMsgs
	toSerialize["ip"] = o.Ip
	if !IsNil(o.IssuerKey) {
		toSerialize["issuer_key"] = o.IssuerKey
	}
	if !IsNil(o.Jwt) {
		toSerialize["jwt"] = o.Jwt
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	toSerialize["last_activity"] = o.LastActivity
	if !IsNil(o.MqttClient) {
		toSerialize["mqtt_client"] = o.MqttClient
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NameTag) {
		toSerialize["name_tag"] = o.NameTag
	}
	toSerialize["out_bytes"] = o.OutBytes
	toSerialize["out_msgs"] = o.OutMsgs
	toSerialize["pending_bytes"] = o.PendingBytes
	toSerialize["port"] = o.Port
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Rtt) {
		toSerialize["rtt"] = o.Rtt
	}
	toSerialize["start"] = o.Start
	if o.Stop.IsSet() {
		toSerialize["stop"] = o.Stop.Get()
	}
	toSerialize["subscriptions"] = o.Subscriptions
	if !IsNil(o.SubscriptionsList) {
		toSerialize["subscriptions_list"] = o.SubscriptionsList
	}
	if !IsNil(o.SubscriptionsListDetail) {
		toSerialize["subscriptions_list_detail"] = o.SubscriptionsListDetail
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TlsCipherSuite) {
		toSerialize["tls_cipher_suite"] = o.TlsCipherSuite
	}
	if !IsNil(o.TlsPeerCerts) {
		toSerialize["tls_peer_certs"] = o.TlsPeerCerts
	}
	if !IsNil(o.TlsVersion) {
		toSerialize["tls_version"] = o.TlsVersion
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["uptime"] = o.Uptime
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableConnInfo struct {
	value *ConnInfo
	isSet bool
}

func (v NullableConnInfo) Get() *ConnInfo {
	return v.value
}

func (v *NullableConnInfo) Set(val *ConnInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConnInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConnInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnInfo(val *ConnInfo) *NullableConnInfo {
	return &NullableConnInfo{value: val, isSet: true}
}

func (v NullableConnInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
