/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AlertViewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertViewResponse{}

// AlertViewResponse struct for AlertViewResponse
type AlertViewResponse struct {
	AcknowledgedByAppUserID NullableString                   `json:"AcknowledgedByAppUserID,omitempty"`
	Account                 NullableAlertViewResponseAccount `json:"account,omitempty"`
	AccountId               NullableString                   `json:"account_id,omitempty"`
	AcknowledgedAt          NullableString                   `json:"acknowledged_at,omitempty"`
	AlertRule               AlertRuleViewResponse            `json:"alert_rule"`
	AlertRuleId             string                           `json:"alert_rule_id"`
	ClosedAt                NullableString                   `json:"closed_at,omitempty"`
	ConsumerName            NullableString                   `json:"consumer_name,omitempty"`
	Created                 time.Time                        `json:"created"`
	Id                      string                           `json:"id"`
	IsAcknowledged          bool                             `json:"is_acknowledged"`
	IsClosed                bool                             `json:"is_closed"`
	IsFiring                bool                             `json:"is_firing"`
	Message                 string                           `json:"message"`
	MetricValue             float64                          `json:"metric_value"`
	SampleValues            []PromSampleValue                `json:"sample_values"`
	Severity                AlertRuleSeverity                `json:"severity"`
	StreamName              NullableString                   `json:"stream_name,omitempty"`
	System                  NullableAlertViewResponseSystem  `json:"system,omitempty"`
	SystemId                NullableString                   `json:"system_id,omitempty"`
	ThresholdValue          float64                          `json:"threshold_value"`
}

type _AlertViewResponse AlertViewResponse

// NewAlertViewResponse instantiates a new AlertViewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertViewResponse(alertRule AlertRuleViewResponse, alertRuleId string, created time.Time, id string, isAcknowledged bool, isClosed bool, isFiring bool, message string, metricValue float64, sampleValues []PromSampleValue, severity AlertRuleSeverity, thresholdValue float64) *AlertViewResponse {
	this := AlertViewResponse{}
	this.AlertRule = alertRule
	this.AlertRuleId = alertRuleId
	this.Created = created
	this.Id = id
	this.IsAcknowledged = isAcknowledged
	this.IsClosed = isClosed
	this.IsFiring = isFiring
	this.Message = message
	this.MetricValue = metricValue
	this.SampleValues = sampleValues
	this.Severity = severity
	this.ThresholdValue = thresholdValue
	return &this
}

// NewAlertViewResponseWithDefaults instantiates a new AlertViewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertViewResponseWithDefaults() *AlertViewResponse {
	this := AlertViewResponse{}
	return &this
}

// GetAcknowledgedByAppUserID returns the AcknowledgedByAppUserID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetAcknowledgedByAppUserID() string {
	if o == nil || IsNil(o.AcknowledgedByAppUserID.Get()) {
		var ret string
		return ret
	}
	return *o.AcknowledgedByAppUserID.Get()
}

// GetAcknowledgedByAppUserIDOk returns a tuple with the AcknowledgedByAppUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetAcknowledgedByAppUserIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcknowledgedByAppUserID.Get(), o.AcknowledgedByAppUserID.IsSet()
}

// HasAcknowledgedByAppUserID returns a boolean if a field has been set.
func (o *AlertViewResponse) HasAcknowledgedByAppUserID() bool {
	if o != nil && o.AcknowledgedByAppUserID.IsSet() {
		return true
	}

	return false
}

// SetAcknowledgedByAppUserID gets a reference to the given NullableString and assigns it to the AcknowledgedByAppUserID field.
func (o *AlertViewResponse) SetAcknowledgedByAppUserID(v string) {
	o.AcknowledgedByAppUserID.Set(&v)
}

// SetAcknowledgedByAppUserIDNil sets the value for AcknowledgedByAppUserID to be an explicit nil
func (o *AlertViewResponse) SetAcknowledgedByAppUserIDNil() {
	o.AcknowledgedByAppUserID.Set(nil)
}

// UnsetAcknowledgedByAppUserID ensures that no value is present for AcknowledgedByAppUserID, not even an explicit nil
func (o *AlertViewResponse) UnsetAcknowledgedByAppUserID() {
	o.AcknowledgedByAppUserID.Unset()
}

// GetAccount returns the Account field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetAccount() AlertViewResponseAccount {
	if o == nil || IsNil(o.Account.Get()) {
		var ret AlertViewResponseAccount
		return ret
	}
	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetAccountOk() (*AlertViewResponseAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// HasAccount returns a boolean if a field has been set.
func (o *AlertViewResponse) HasAccount() bool {
	if o != nil && o.Account.IsSet() {
		return true
	}

	return false
}

// SetAccount gets a reference to the given NullableAlertViewResponseAccount and assigns it to the Account field.
func (o *AlertViewResponse) SetAccount(v AlertViewResponseAccount) {
	o.Account.Set(&v)
}

// SetAccountNil sets the value for Account to be an explicit nil
func (o *AlertViewResponse) SetAccountNil() {
	o.Account.Set(nil)
}

// UnsetAccount ensures that no value is present for Account, not even an explicit nil
func (o *AlertViewResponse) UnsetAccount() {
	o.Account.Unset()
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *AlertViewResponse) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *AlertViewResponse) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *AlertViewResponse) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *AlertViewResponse) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAcknowledgedAt returns the AcknowledgedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetAcknowledgedAt() string {
	if o == nil || IsNil(o.AcknowledgedAt.Get()) {
		var ret string
		return ret
	}
	return *o.AcknowledgedAt.Get()
}

// GetAcknowledgedAtOk returns a tuple with the AcknowledgedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetAcknowledgedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcknowledgedAt.Get(), o.AcknowledgedAt.IsSet()
}

// HasAcknowledgedAt returns a boolean if a field has been set.
func (o *AlertViewResponse) HasAcknowledgedAt() bool {
	if o != nil && o.AcknowledgedAt.IsSet() {
		return true
	}

	return false
}

// SetAcknowledgedAt gets a reference to the given NullableString and assigns it to the AcknowledgedAt field.
func (o *AlertViewResponse) SetAcknowledgedAt(v string) {
	o.AcknowledgedAt.Set(&v)
}

// SetAcknowledgedAtNil sets the value for AcknowledgedAt to be an explicit nil
func (o *AlertViewResponse) SetAcknowledgedAtNil() {
	o.AcknowledgedAt.Set(nil)
}

// UnsetAcknowledgedAt ensures that no value is present for AcknowledgedAt, not even an explicit nil
func (o *AlertViewResponse) UnsetAcknowledgedAt() {
	o.AcknowledgedAt.Unset()
}

// GetAlertRule returns the AlertRule field value
func (o *AlertViewResponse) GetAlertRule() AlertRuleViewResponse {
	if o == nil {
		var ret AlertRuleViewResponse
		return ret
	}

	return o.AlertRule
}

// GetAlertRuleOk returns a tuple with the AlertRule field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetAlertRuleOk() (*AlertRuleViewResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertRule, true
}

// SetAlertRule sets field value
func (o *AlertViewResponse) SetAlertRule(v AlertRuleViewResponse) {
	o.AlertRule = v
}

// GetAlertRuleId returns the AlertRuleId field value
func (o *AlertViewResponse) GetAlertRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertRuleId
}

// GetAlertRuleIdOk returns a tuple with the AlertRuleId field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetAlertRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertRuleId, true
}

// SetAlertRuleId sets field value
func (o *AlertViewResponse) SetAlertRuleId(v string) {
	o.AlertRuleId = v
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetClosedAt() string {
	if o == nil || IsNil(o.ClosedAt.Get()) {
		var ret string
		return ret
	}
	return *o.ClosedAt.Get()
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetClosedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedAt.Get(), o.ClosedAt.IsSet()
}

// HasClosedAt returns a boolean if a field has been set.
func (o *AlertViewResponse) HasClosedAt() bool {
	if o != nil && o.ClosedAt.IsSet() {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given NullableString and assigns it to the ClosedAt field.
func (o *AlertViewResponse) SetClosedAt(v string) {
	o.ClosedAt.Set(&v)
}

// SetClosedAtNil sets the value for ClosedAt to be an explicit nil
func (o *AlertViewResponse) SetClosedAtNil() {
	o.ClosedAt.Set(nil)
}

// UnsetClosedAt ensures that no value is present for ClosedAt, not even an explicit nil
func (o *AlertViewResponse) UnsetClosedAt() {
	o.ClosedAt.Unset()
}

// GetConsumerName returns the ConsumerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetConsumerName() string {
	if o == nil || IsNil(o.ConsumerName.Get()) {
		var ret string
		return ret
	}
	return *o.ConsumerName.Get()
}

// GetConsumerNameOk returns a tuple with the ConsumerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetConsumerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConsumerName.Get(), o.ConsumerName.IsSet()
}

// HasConsumerName returns a boolean if a field has been set.
func (o *AlertViewResponse) HasConsumerName() bool {
	if o != nil && o.ConsumerName.IsSet() {
		return true
	}

	return false
}

// SetConsumerName gets a reference to the given NullableString and assigns it to the ConsumerName field.
func (o *AlertViewResponse) SetConsumerName(v string) {
	o.ConsumerName.Set(&v)
}

// SetConsumerNameNil sets the value for ConsumerName to be an explicit nil
func (o *AlertViewResponse) SetConsumerNameNil() {
	o.ConsumerName.Set(nil)
}

// UnsetConsumerName ensures that no value is present for ConsumerName, not even an explicit nil
func (o *AlertViewResponse) UnsetConsumerName() {
	o.ConsumerName.Unset()
}

// GetCreated returns the Created field value
func (o *AlertViewResponse) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *AlertViewResponse) SetCreated(v time.Time) {
	o.Created = v
}

// GetId returns the Id field value
func (o *AlertViewResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AlertViewResponse) SetId(v string) {
	o.Id = v
}

// GetIsAcknowledged returns the IsAcknowledged field value
func (o *AlertViewResponse) GetIsAcknowledged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAcknowledged
}

// GetIsAcknowledgedOk returns a tuple with the IsAcknowledged field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetIsAcknowledgedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAcknowledged, true
}

// SetIsAcknowledged sets field value
func (o *AlertViewResponse) SetIsAcknowledged(v bool) {
	o.IsAcknowledged = v
}

// GetIsClosed returns the IsClosed field value
func (o *AlertViewResponse) GetIsClosed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsClosed
}

// GetIsClosedOk returns a tuple with the IsClosed field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetIsClosedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsClosed, true
}

// SetIsClosed sets field value
func (o *AlertViewResponse) SetIsClosed(v bool) {
	o.IsClosed = v
}

// GetIsFiring returns the IsFiring field value
func (o *AlertViewResponse) GetIsFiring() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFiring
}

// GetIsFiringOk returns a tuple with the IsFiring field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetIsFiringOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFiring, true
}

// SetIsFiring sets field value
func (o *AlertViewResponse) SetIsFiring(v bool) {
	o.IsFiring = v
}

// GetMessage returns the Message field value
func (o *AlertViewResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AlertViewResponse) SetMessage(v string) {
	o.Message = v
}

// GetMetricValue returns the MetricValue field value
func (o *AlertViewResponse) GetMetricValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MetricValue
}

// GetMetricValueOk returns a tuple with the MetricValue field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetMetricValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricValue, true
}

// SetMetricValue sets field value
func (o *AlertViewResponse) SetMetricValue(v float64) {
	o.MetricValue = v
}

// GetSampleValues returns the SampleValues field value
func (o *AlertViewResponse) GetSampleValues() []PromSampleValue {
	if o == nil {
		var ret []PromSampleValue
		return ret
	}

	return o.SampleValues
}

// GetSampleValuesOk returns a tuple with the SampleValues field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetSampleValuesOk() ([]PromSampleValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.SampleValues, true
}

// SetSampleValues sets field value
func (o *AlertViewResponse) SetSampleValues(v []PromSampleValue) {
	o.SampleValues = v
}

// GetSeverity returns the Severity field value
func (o *AlertViewResponse) GetSeverity() AlertRuleSeverity {
	if o == nil {
		var ret AlertRuleSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetSeverityOk() (*AlertRuleSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AlertViewResponse) SetSeverity(v AlertRuleSeverity) {
	o.Severity = v
}

// GetStreamName returns the StreamName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetStreamName() string {
	if o == nil || IsNil(o.StreamName.Get()) {
		var ret string
		return ret
	}
	return *o.StreamName.Get()
}

// GetStreamNameOk returns a tuple with the StreamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetStreamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamName.Get(), o.StreamName.IsSet()
}

// HasStreamName returns a boolean if a field has been set.
func (o *AlertViewResponse) HasStreamName() bool {
	if o != nil && o.StreamName.IsSet() {
		return true
	}

	return false
}

// SetStreamName gets a reference to the given NullableString and assigns it to the StreamName field.
func (o *AlertViewResponse) SetStreamName(v string) {
	o.StreamName.Set(&v)
}

// SetStreamNameNil sets the value for StreamName to be an explicit nil
func (o *AlertViewResponse) SetStreamNameNil() {
	o.StreamName.Set(nil)
}

// UnsetStreamName ensures that no value is present for StreamName, not even an explicit nil
func (o *AlertViewResponse) UnsetStreamName() {
	o.StreamName.Unset()
}

// GetSystem returns the System field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetSystem() AlertViewResponseSystem {
	if o == nil || IsNil(o.System.Get()) {
		var ret AlertViewResponseSystem
		return ret
	}
	return *o.System.Get()
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetSystemOk() (*AlertViewResponseSystem, bool) {
	if o == nil {
		return nil, false
	}
	return o.System.Get(), o.System.IsSet()
}

// HasSystem returns a boolean if a field has been set.
func (o *AlertViewResponse) HasSystem() bool {
	if o != nil && o.System.IsSet() {
		return true
	}

	return false
}

// SetSystem gets a reference to the given NullableAlertViewResponseSystem and assigns it to the System field.
func (o *AlertViewResponse) SetSystem(v AlertViewResponseSystem) {
	o.System.Set(&v)
}

// SetSystemNil sets the value for System to be an explicit nil
func (o *AlertViewResponse) SetSystemNil() {
	o.System.Set(nil)
}

// UnsetSystem ensures that no value is present for System, not even an explicit nil
func (o *AlertViewResponse) UnsetSystem() {
	o.System.Unset()
}

// GetSystemId returns the SystemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertViewResponse) GetSystemId() string {
	if o == nil || IsNil(o.SystemId.Get()) {
		var ret string
		return ret
	}
	return *o.SystemId.Get()
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertViewResponse) GetSystemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SystemId.Get(), o.SystemId.IsSet()
}

// HasSystemId returns a boolean if a field has been set.
func (o *AlertViewResponse) HasSystemId() bool {
	if o != nil && o.SystemId.IsSet() {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given NullableString and assigns it to the SystemId field.
func (o *AlertViewResponse) SetSystemId(v string) {
	o.SystemId.Set(&v)
}

// SetSystemIdNil sets the value for SystemId to be an explicit nil
func (o *AlertViewResponse) SetSystemIdNil() {
	o.SystemId.Set(nil)
}

// UnsetSystemId ensures that no value is present for SystemId, not even an explicit nil
func (o *AlertViewResponse) UnsetSystemId() {
	o.SystemId.Unset()
}

// GetThresholdValue returns the ThresholdValue field value
func (o *AlertViewResponse) GetThresholdValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ThresholdValue
}

// GetThresholdValueOk returns a tuple with the ThresholdValue field value
// and a boolean to check if the value has been set.
func (o *AlertViewResponse) GetThresholdValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThresholdValue, true
}

// SetThresholdValue sets field value
func (o *AlertViewResponse) SetThresholdValue(v float64) {
	o.ThresholdValue = v
}

func (o AlertViewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertViewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AcknowledgedByAppUserID.IsSet() {
		toSerialize["AcknowledgedByAppUserID"] = o.AcknowledgedByAppUserID.Get()
	}
	if o.Account.IsSet() {
		toSerialize["account"] = o.Account.Get()
	}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if o.AcknowledgedAt.IsSet() {
		toSerialize["acknowledged_at"] = o.AcknowledgedAt.Get()
	}
	toSerialize["alert_rule"] = o.AlertRule
	toSerialize["alert_rule_id"] = o.AlertRuleId
	if o.ClosedAt.IsSet() {
		toSerialize["closed_at"] = o.ClosedAt.Get()
	}
	if o.ConsumerName.IsSet() {
		toSerialize["consumer_name"] = o.ConsumerName.Get()
	}
	toSerialize["created"] = o.Created
	toSerialize["id"] = o.Id
	toSerialize["is_acknowledged"] = o.IsAcknowledged
	toSerialize["is_closed"] = o.IsClosed
	toSerialize["is_firing"] = o.IsFiring
	toSerialize["message"] = o.Message
	toSerialize["metric_value"] = o.MetricValue
	toSerialize["sample_values"] = o.SampleValues
	toSerialize["severity"] = o.Severity
	if o.StreamName.IsSet() {
		toSerialize["stream_name"] = o.StreamName.Get()
	}
	if o.System.IsSet() {
		toSerialize["system"] = o.System.Get()
	}
	if o.SystemId.IsSet() {
		toSerialize["system_id"] = o.SystemId.Get()
	}
	toSerialize["threshold_value"] = o.ThresholdValue
	return toSerialize, nil
}

func (o *AlertViewResponse) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_rule",
		"alert_rule_id",
		"created",
		"id",
		"is_acknowledged",
		"is_closed",
		"is_firing",
		"message",
		"metric_value",
		"sample_values",
		"severity",
		"threshold_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertViewResponse := _AlertViewResponse{}

	err = json.Unmarshal(bytes, &varAlertViewResponse)

	if err != nil {
		return err
	}

	*o = AlertViewResponse(varAlertViewResponse)

	return err
}

type NullableAlertViewResponse struct {
	value *AlertViewResponse
	isSet bool
}

func (v NullableAlertViewResponse) Get() *AlertViewResponse {
	return v.value
}

func (v *NullableAlertViewResponse) Set(val *AlertViewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertViewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertViewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertViewResponse(val *AlertViewResponse) *NullableAlertViewResponse {
	return &NullableAlertViewResponse{value: val, isSet: true}
}

func (v NullableAlertViewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertViewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
