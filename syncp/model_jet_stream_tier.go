/*
Synadia Control Plane

API for Synadia Control Plane Server

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JetStreamTier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JetStreamTier{}

// JetStreamTier struct for JetStreamTier
type JetStreamTier struct {
	Consumers int32                  `json:"consumers"`
	Limits    JetStreamAccountLimits `json:"limits"`
	Memory    int32                  `json:"memory"`
	Storage   int32                  `json:"storage"`
	Streams   int32                  `json:"streams"`
}

// NewJetStreamTier instantiates a new JetStreamTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJetStreamTier(consumers int32, limits JetStreamAccountLimits, memory int32, storage int32, streams int32) *JetStreamTier {
	this := JetStreamTier{}
	this.Consumers = consumers
	this.Limits = limits
	this.Memory = memory
	this.Storage = storage
	this.Streams = streams
	return &this
}

// NewJetStreamTierWithDefaults instantiates a new JetStreamTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJetStreamTierWithDefaults() *JetStreamTier {
	this := JetStreamTier{}
	return &this
}

// GetConsumers returns the Consumers field value
func (o *JetStreamTier) GetConsumers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Consumers
}

// GetConsumersOk returns a tuple with the Consumers field value
// and a boolean to check if the value has been set.
func (o *JetStreamTier) GetConsumersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Consumers, true
}

// SetConsumers sets field value
func (o *JetStreamTier) SetConsumers(v int32) {
	o.Consumers = v
}

// GetLimits returns the Limits field value
func (o *JetStreamTier) GetLimits() JetStreamAccountLimits {
	if o == nil {
		var ret JetStreamAccountLimits
		return ret
	}

	return o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value
// and a boolean to check if the value has been set.
func (o *JetStreamTier) GetLimitsOk() (*JetStreamAccountLimits, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limits, true
}

// SetLimits sets field value
func (o *JetStreamTier) SetLimits(v JetStreamAccountLimits) {
	o.Limits = v
}

// GetMemory returns the Memory field value
func (o *JetStreamTier) GetMemory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *JetStreamTier) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *JetStreamTier) SetMemory(v int32) {
	o.Memory = v
}

// GetStorage returns the Storage field value
func (o *JetStreamTier) GetStorage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *JetStreamTier) GetStorageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *JetStreamTier) SetStorage(v int32) {
	o.Storage = v
}

// GetStreams returns the Streams field value
func (o *JetStreamTier) GetStreams() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value
// and a boolean to check if the value has been set.
func (o *JetStreamTier) GetStreamsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Streams, true
}

// SetStreams sets field value
func (o *JetStreamTier) SetStreams(v int32) {
	o.Streams = v
}

func (o JetStreamTier) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JetStreamTier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["consumers"] = o.Consumers
	toSerialize["limits"] = o.Limits
	toSerialize["memory"] = o.Memory
	toSerialize["storage"] = o.Storage
	toSerialize["streams"] = o.Streams
	return toSerialize, nil
}

type NullableJetStreamTier struct {
	value *JetStreamTier
	isSet bool
}

func (v NullableJetStreamTier) Get() *JetStreamTier {
	return v.value
}

func (v *NullableJetStreamTier) Set(val *JetStreamTier) {
	v.value = val
	v.isSet = true
}

func (v NullableJetStreamTier) IsSet() bool {
	return v.isSet
}

func (v *NullableJetStreamTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJetStreamTier(val *JetStreamTier) *NullableJetStreamTier {
	return &NullableJetStreamTier{value: val, isSet: true}
}

func (v NullableJetStreamTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJetStreamTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
