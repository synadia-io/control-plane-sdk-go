/*
Synadia Control Plane

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package syncp

import (
	"encoding/json"
)

// checks if the JSAssetInfoListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JSAssetInfoListResponse{}

// JSAssetInfoListResponse struct for JSAssetInfoListResponse
type JSAssetInfoListResponse struct {
	Items []JSAssetInfoResponse `json:"items"`
}

// NewJSAssetInfoListResponse instantiates a new JSAssetInfoListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJSAssetInfoListResponse(items []JSAssetInfoResponse) *JSAssetInfoListResponse {
	this := JSAssetInfoListResponse{}
	this.Items = items
	return &this
}

// NewJSAssetInfoListResponseWithDefaults instantiates a new JSAssetInfoListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJSAssetInfoListResponseWithDefaults() *JSAssetInfoListResponse {
	this := JSAssetInfoListResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *JSAssetInfoListResponse) GetItems() []JSAssetInfoResponse {
	if o == nil {
		var ret []JSAssetInfoResponse
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *JSAssetInfoListResponse) GetItemsOk() ([]JSAssetInfoResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *JSAssetInfoListResponse) SetItems(v []JSAssetInfoResponse) {
	o.Items = v
}

func (o JSAssetInfoListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JSAssetInfoListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableJSAssetInfoListResponse struct {
	value *JSAssetInfoListResponse
	isSet bool
}

func (v NullableJSAssetInfoListResponse) Get() *JSAssetInfoListResponse {
	return v.value
}

func (v *NullableJSAssetInfoListResponse) Set(val *JSAssetInfoListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJSAssetInfoListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJSAssetInfoListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJSAssetInfoListResponse(val *JSAssetInfoListResponse) *NullableJSAssetInfoListResponse {
	return &NullableJSAssetInfoListResponse{value: val, isSet: true}
}

func (v NullableJSAssetInfoListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJSAssetInfoListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
